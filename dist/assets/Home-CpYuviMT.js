const __vite__mapDeps=(i,m=__vite__mapDeps,d=(m.f||(m.f=["assets/TestimonialCarousel-UjSiXRuu.js","assets/index-DBGs1ZdR.js","assets/Card-qqtUn9GN.js","assets/Rating-DrAnHAvX.js","assets/useControlled-BmtsWBO8.js","assets/visuallyHidden-Dan1xhjv.js","assets/TrustBadges-wq44tqST.js","assets/LocalFlorist-B-uCdAja.js"])))=>i.map(i=>d[i]);
import{c as iE,j as Vt,r as Am,g as Cy,R as sE,a as $t,_ as Ry,u as rc,m as is,B as ss,C as ju,T as or,b as em,L as nm,d as aE,G as Av,e as Dy}from"./index-DBGs1ZdR.js";import{S as rE}from"./SEOHead-D_4XsC0N.js";import{C as oE}from"./CallToActions-CAEcgQlk.js";import{S as lE}from"./ServiceCard-KchTeOK0.js";import{s as cE}from"./services-B7CZwnyX.js";import{t as uE}from"./testimonials-DpQ-wrai.js";import{s as hE,f as Zu,o as fE}from"./motion-DQojMtq9.js";import{C as dE}from"./CardMediaWithFallback-B7EijvcA.js";import{C as pE}from"./Card-qqtUn9GN.js";import{C as mE}from"./CardContent-8CIE9TMP.js";import"./Chip-DKFXz1eT.js";const wv=iE(Vt.jsx("path",{d:"M11 7h2v2h-2zm0 4h2v6h-2zm1-9C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2m0 18c-4.41 0-8-3.59-8-8s3.59-8 8-8 8 3.59 8 8-3.59 8-8 8"}));var Zd={exports:{}},As={};/**
 * @license React
 * react-reconciler-constants.production.js
 *
 * Copyright (c) Meta Platforms, Inc. and affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */var Cv;function gE(){return Cv||(Cv=1,As.ConcurrentRoot=1,As.ContinuousEventPriority=8,As.DefaultEventPriority=32,As.DiscreteEventPriority=2,As.IdleEventPriority=268435456,As.LegacyRoot=0,As.NoEventPriority=0),As}var Rv;function vE(){return Rv||(Rv=1,Zd.exports=gE()),Zd.exports}var Ku=vE();/**
 * @license
 * Copyright 2010-2025 Three.js Authors
 * SPDX-License-Identifier: MIT
 */const Xh="179",nr={LEFT:0,MIDDLE:1,RIGHT:2,ROTATE:0,DOLLY:1,PAN:2},ir={ROTATE:0,PAN:1,DOLLY_PAN:2,DOLLY_ROTATE:3},Uy=0,im=1,Ny=2,_E=3,Ly=0,qh=1,Nl=2,qi=3,zs=0,Qn=1,as=2,Os=0,fr=1,sm=2,am=3,rm=4,Py=5,fa=100,Iy=101,Oy=102,By=103,zy=104,Fy=200,Hy=201,Vy=202,Gy=203,eh=204,nh=205,ky=206,Wy=207,Xy=208,qy=209,Yy=210,jy=211,Zy=212,Ky=213,Jy=214,ih=0,sh=1,ah=2,mr=3,rh=4,oh=5,lh=6,ch=7,oc=0,Qy=1,$y=2,ls=0,tx=1,ex=2,nx=3,wm=4,ix=5,sx=6,ax=7,om="attached",rx="detached",Yh=300,Fs=301,ga=302,kl=303,Wl=304,Bo=306,Xl=1e3,Pi=1001,ql=1002,Cn=1003,Cm=1004,yE=1004,xo=1005,xE=1005,mn=1006,Ll=1007,SE=1007,rs=1008,ME=1008,Ii=1009,Rm=1010,Dm=1011,Ao=1012,jh=1013,Hs=1014,ri=1015,zo=1016,Zh=1017,Kh=1018,wo=1020,Um=35902,Nm=1021,Lm=1022,Hn=1023,Co=1026,Ro=1027,Jh=1028,lc=1029,Pm=1030,Qh=1031,bE=1032,$h=1033,Pl=33776,Il=33777,Ol=33778,Bl=33779,uh=35840,hh=35841,fh=35842,dh=35843,ph=36196,mh=37492,gh=37496,vh=37808,_h=37809,yh=37810,xh=37811,Sh=37812,Mh=37813,bh=37814,Eh=37815,Th=37816,Ah=37817,wh=37818,Ch=37819,Rh=37820,Dh=37821,zl=36492,Uh=36494,Nh=36495,Im=36283,Lh=36284,Ph=36285,Ih=36286,ox=2200,lx=2201,cx=2202,Yl=2300,Oh=2301,Ju=2302,lr=2400,cr=2401,jl=2402,tf=2500,Om=2501,EE=0,TE=1,AE=2,ux=3200,hx=3201,wE=3202,CE=3203,ya=0,fx=1,Ps="",Fn="srgb",va="srgb-linear",Zl="linear",Ve="srgb",RE=0,sr=7680,DE=7681,UE=7682,NE=7683,LE=34055,PE=34056,IE=5386,OE=512,BE=513,zE=514,FE=515,HE=516,VE=517,GE=518,lm=519,dx=512,px=513,mx=514,Bm=515,gx=516,vx=517,_x=518,yx=519,Kl=35044,kE=35048,WE=35040,XE=35045,qE=35049,YE=35041,jE=35046,ZE=35050,KE=35042,JE="100",cm="300 es",Si=2e3,Do=2001,QE={COMPUTE:"compute",RENDER:"render"},$E={PERSPECTIVE:"perspective",LINEAR:"linear",FLAT:"flat"},tT={NORMAL:"normal",CENTROID:"centroid",SAMPLE:"sample",FIRST:"first",EITHER:"either"};let hs=class{addEventListener(t,e){this._listeners===void 0&&(this._listeners={});const n=this._listeners;n[t]===void 0&&(n[t]=[]),n[t].indexOf(e)===-1&&n[t].push(e)}hasEventListener(t,e){const n=this._listeners;return n===void 0?!1:n[t]!==void 0&&n[t].indexOf(e)!==-1}removeEventListener(t,e){const n=this._listeners;if(n===void 0)return;const i=n[t];if(i!==void 0){const o=i.indexOf(e);o!==-1&&i.splice(o,1)}}dispatchEvent(t){const e=this._listeners;if(e===void 0)return;const n=e[t.type];if(n!==void 0){t.target=this;const i=n.slice(0);for(let o=0,l=i.length;o<l;o++)i[o].call(this,t);t.target=null}}};const On=["00","01","02","03","04","05","06","07","08","09","0a","0b","0c","0d","0e","0f","10","11","12","13","14","15","16","17","18","19","1a","1b","1c","1d","1e","1f","20","21","22","23","24","25","26","27","28","29","2a","2b","2c","2d","2e","2f","30","31","32","33","34","35","36","37","38","39","3a","3b","3c","3d","3e","3f","40","41","42","43","44","45","46","47","48","49","4a","4b","4c","4d","4e","4f","50","51","52","53","54","55","56","57","58","59","5a","5b","5c","5d","5e","5f","60","61","62","63","64","65","66","67","68","69","6a","6b","6c","6d","6e","6f","70","71","72","73","74","75","76","77","78","79","7a","7b","7c","7d","7e","7f","80","81","82","83","84","85","86","87","88","89","8a","8b","8c","8d","8e","8f","90","91","92","93","94","95","96","97","98","99","9a","9b","9c","9d","9e","9f","a0","a1","a2","a3","a4","a5","a6","a7","a8","a9","aa","ab","ac","ad","ae","af","b0","b1","b2","b3","b4","b5","b6","b7","b8","b9","ba","bb","bc","bd","be","bf","c0","c1","c2","c3","c4","c5","c6","c7","c8","c9","ca","cb","cc","cd","ce","cf","d0","d1","d2","d3","d4","d5","d6","d7","d8","d9","da","db","dc","dd","de","df","e0","e1","e2","e3","e4","e5","e6","e7","e8","e9","ea","eb","ec","ed","ee","ef","f0","f1","f2","f3","f4","f5","f6","f7","f8","f9","fa","fb","fc","fd","fe","ff"];let Dv=1234567;const dr=Math.PI/180,Uo=180/Math.PI;function Mi(){const s=Math.random()*4294967295|0,t=Math.random()*4294967295|0,e=Math.random()*4294967295|0,n=Math.random()*4294967295|0;return(On[s&255]+On[s>>8&255]+On[s>>16&255]+On[s>>24&255]+"-"+On[t&255]+On[t>>8&255]+"-"+On[t>>16&15|64]+On[t>>24&255]+"-"+On[e&63|128]+On[e>>8&255]+"-"+On[e>>16&255]+On[e>>24&255]+On[n&255]+On[n>>8&255]+On[n>>16&255]+On[n>>24&255]).toLowerCase()}function de(s,t,e){return Math.max(t,Math.min(e,s))}function zm(s,t){return(s%t+t)%t}function eT(s,t,e,n,i){return n+(s-t)*(i-n)/(e-t)}function nT(s,t,e){return s!==t?(e-s)/(t-s):0}function Fl(s,t,e){return(1-e)*s+e*t}function iT(s,t,e,n){return Fl(s,t,1-Math.exp(-e*n))}function sT(s,t=1){return t-Math.abs(zm(s,t*2)-t)}function aT(s,t,e){return s<=t?0:s>=e?1:(s=(s-t)/(e-t),s*s*(3-2*s))}function rT(s,t,e){return s<=t?0:s>=e?1:(s=(s-t)/(e-t),s*s*s*(s*(s*6-15)+10))}function oT(s,t){return s+Math.floor(Math.random()*(t-s+1))}function lT(s,t){return s+Math.random()*(t-s)}function cT(s){return s*(.5-Math.random())}function uT(s){s!==void 0&&(Dv=s);let t=Dv+=1831565813;return t=Math.imul(t^t>>>15,t|1),t^=t+Math.imul(t^t>>>7,t|61),((t^t>>>14)>>>0)/4294967296}function hT(s){return s*dr}function fT(s){return s*Uo}function dT(s){return(s&s-1)===0&&s!==0}function pT(s){return Math.pow(2,Math.ceil(Math.log(s)/Math.LN2))}function mT(s){return Math.pow(2,Math.floor(Math.log(s)/Math.LN2))}function gT(s,t,e,n,i){const o=Math.cos,l=Math.sin,c=o(e/2),h=l(e/2),f=o((t+n)/2),p=l((t+n)/2),m=o((t-n)/2),g=l((t-n)/2),v=o((n-t)/2),x=l((n-t)/2);switch(i){case"XYX":s.set(c*p,h*m,h*g,c*f);break;case"YZY":s.set(h*g,c*p,h*m,c*f);break;case"ZXZ":s.set(h*m,h*g,c*p,c*f);break;case"XZX":s.set(c*p,h*x,h*v,c*f);break;case"YXY":s.set(h*v,c*p,h*x,c*f);break;case"ZYZ":s.set(h*x,h*v,c*p,c*f);break;default:console.warn("THREE.MathUtils: .setQuaternionFromProperEuler() encountered an unknown order: "+i)}}function Jn(s,t){switch(t.constructor){case Float32Array:return s;case Uint32Array:return s/4294967295;case Uint16Array:return s/65535;case Uint8Array:return s/255;case Int32Array:return Math.max(s/2147483647,-1);case Int16Array:return Math.max(s/32767,-1);case Int8Array:return Math.max(s/127,-1);default:throw new Error("Invalid component type.")}}function ye(s,t){switch(t.constructor){case Float32Array:return s;case Uint32Array:return Math.round(s*4294967295);case Uint16Array:return Math.round(s*65535);case Uint8Array:return Math.round(s*255);case Int32Array:return Math.round(s*2147483647);case Int16Array:return Math.round(s*32767);case Int8Array:return Math.round(s*127);default:throw new Error("Invalid component type.")}}const vT={DEG2RAD:dr,RAD2DEG:Uo,generateUUID:Mi,clamp:de,euclideanModulo:zm,mapLinear:eT,inverseLerp:nT,lerp:Fl,damp:iT,pingpong:sT,smoothstep:aT,smootherstep:rT,randInt:oT,randFloat:lT,randFloatSpread:cT,seededRandom:uT,degToRad:hT,radToDeg:fT,isPowerOfTwo:dT,ceilPowerOfTwo:pT,floorPowerOfTwo:mT,setQuaternionFromProperEuler:gT,normalize:ye,denormalize:Jn};class dt{constructor(t=0,e=0){dt.prototype.isVector2=!0,this.x=t,this.y=e}get width(){return this.x}set width(t){this.x=t}get height(){return this.y}set height(t){this.y=t}set(t,e){return this.x=t,this.y=e,this}setScalar(t){return this.x=t,this.y=t,this}setX(t){return this.x=t,this}setY(t){return this.y=t,this}setComponent(t,e){switch(t){case 0:this.x=e;break;case 1:this.y=e;break;default:throw new Error("index is out of range: "+t)}return this}getComponent(t){switch(t){case 0:return this.x;case 1:return this.y;default:throw new Error("index is out of range: "+t)}}clone(){return new this.constructor(this.x,this.y)}copy(t){return this.x=t.x,this.y=t.y,this}add(t){return this.x+=t.x,this.y+=t.y,this}addScalar(t){return this.x+=t,this.y+=t,this}addVectors(t,e){return this.x=t.x+e.x,this.y=t.y+e.y,this}addScaledVector(t,e){return this.x+=t.x*e,this.y+=t.y*e,this}sub(t){return this.x-=t.x,this.y-=t.y,this}subScalar(t){return this.x-=t,this.y-=t,this}subVectors(t,e){return this.x=t.x-e.x,this.y=t.y-e.y,this}multiply(t){return this.x*=t.x,this.y*=t.y,this}multiplyScalar(t){return this.x*=t,this.y*=t,this}divide(t){return this.x/=t.x,this.y/=t.y,this}divideScalar(t){return this.multiplyScalar(1/t)}applyMatrix3(t){const e=this.x,n=this.y,i=t.elements;return this.x=i[0]*e+i[3]*n+i[6],this.y=i[1]*e+i[4]*n+i[7],this}min(t){return this.x=Math.min(this.x,t.x),this.y=Math.min(this.y,t.y),this}max(t){return this.x=Math.max(this.x,t.x),this.y=Math.max(this.y,t.y),this}clamp(t,e){return this.x=de(this.x,t.x,e.x),this.y=de(this.y,t.y,e.y),this}clampScalar(t,e){return this.x=de(this.x,t,e),this.y=de(this.y,t,e),this}clampLength(t,e){const n=this.length();return this.divideScalar(n||1).multiplyScalar(de(n,t,e))}floor(){return this.x=Math.floor(this.x),this.y=Math.floor(this.y),this}ceil(){return this.x=Math.ceil(this.x),this.y=Math.ceil(this.y),this}round(){return this.x=Math.round(this.x),this.y=Math.round(this.y),this}roundToZero(){return this.x=Math.trunc(this.x),this.y=Math.trunc(this.y),this}negate(){return this.x=-this.x,this.y=-this.y,this}dot(t){return this.x*t.x+this.y*t.y}cross(t){return this.x*t.y-this.y*t.x}lengthSq(){return this.x*this.x+this.y*this.y}length(){return Math.sqrt(this.x*this.x+this.y*this.y)}manhattanLength(){return Math.abs(this.x)+Math.abs(this.y)}normalize(){return this.divideScalar(this.length()||1)}angle(){return Math.atan2(-this.y,-this.x)+Math.PI}angleTo(t){const e=Math.sqrt(this.lengthSq()*t.lengthSq());if(e===0)return Math.PI/2;const n=this.dot(t)/e;return Math.acos(de(n,-1,1))}distanceTo(t){return Math.sqrt(this.distanceToSquared(t))}distanceToSquared(t){const e=this.x-t.x,n=this.y-t.y;return e*e+n*n}manhattanDistanceTo(t){return Math.abs(this.x-t.x)+Math.abs(this.y-t.y)}setLength(t){return this.normalize().multiplyScalar(t)}lerp(t,e){return this.x+=(t.x-this.x)*e,this.y+=(t.y-this.y)*e,this}lerpVectors(t,e,n){return this.x=t.x+(e.x-t.x)*n,this.y=t.y+(e.y-t.y)*n,this}equals(t){return t.x===this.x&&t.y===this.y}fromArray(t,e=0){return this.x=t[e],this.y=t[e+1],this}toArray(t=[],e=0){return t[e]=this.x,t[e+1]=this.y,t}fromBufferAttribute(t,e){return this.x=t.getX(e),this.y=t.getY(e),this}rotateAround(t,e){const n=Math.cos(e),i=Math.sin(e),o=this.x-t.x,l=this.y-t.y;return this.x=o*n-l*i+t.x,this.y=o*i+l*n+t.y,this}random(){return this.x=Math.random(),this.y=Math.random(),this}*[Symbol.iterator](){yield this.x,yield this.y}}class Vn{constructor(t=0,e=0,n=0,i=1){this.isQuaternion=!0,this._x=t,this._y=e,this._z=n,this._w=i}static slerpFlat(t,e,n,i,o,l,c){let h=n[i+0],f=n[i+1],p=n[i+2],m=n[i+3];const g=o[l+0],v=o[l+1],x=o[l+2],b=o[l+3];if(c===0){t[e+0]=h,t[e+1]=f,t[e+2]=p,t[e+3]=m;return}if(c===1){t[e+0]=g,t[e+1]=v,t[e+2]=x,t[e+3]=b;return}if(m!==b||h!==g||f!==v||p!==x){let S=1-c;const _=h*g+f*v+p*x+m*b,E=_>=0?1:-1,A=1-_*_;if(A>Number.EPSILON){const U=Math.sqrt(A),D=Math.atan2(U,_*E);S=Math.sin(S*D)/U,c=Math.sin(c*D)/U}const T=c*E;if(h=h*S+g*T,f=f*S+v*T,p=p*S+x*T,m=m*S+b*T,S===1-c){const U=1/Math.sqrt(h*h+f*f+p*p+m*m);h*=U,f*=U,p*=U,m*=U}}t[e]=h,t[e+1]=f,t[e+2]=p,t[e+3]=m}static multiplyQuaternionsFlat(t,e,n,i,o,l){const c=n[i],h=n[i+1],f=n[i+2],p=n[i+3],m=o[l],g=o[l+1],v=o[l+2],x=o[l+3];return t[e]=c*x+p*m+h*v-f*g,t[e+1]=h*x+p*g+f*m-c*v,t[e+2]=f*x+p*v+c*g-h*m,t[e+3]=p*x-c*m-h*g-f*v,t}get x(){return this._x}set x(t){this._x=t,this._onChangeCallback()}get y(){return this._y}set y(t){this._y=t,this._onChangeCallback()}get z(){return this._z}set z(t){this._z=t,this._onChangeCallback()}get w(){return this._w}set w(t){this._w=t,this._onChangeCallback()}set(t,e,n,i){return this._x=t,this._y=e,this._z=n,this._w=i,this._onChangeCallback(),this}clone(){return new this.constructor(this._x,this._y,this._z,this._w)}copy(t){return this._x=t.x,this._y=t.y,this._z=t.z,this._w=t.w,this._onChangeCallback(),this}setFromEuler(t,e=!0){const n=t._x,i=t._y,o=t._z,l=t._order,c=Math.cos,h=Math.sin,f=c(n/2),p=c(i/2),m=c(o/2),g=h(n/2),v=h(i/2),x=h(o/2);switch(l){case"XYZ":this._x=g*p*m+f*v*x,this._y=f*v*m-g*p*x,this._z=f*p*x+g*v*m,this._w=f*p*m-g*v*x;break;case"YXZ":this._x=g*p*m+f*v*x,this._y=f*v*m-g*p*x,this._z=f*p*x-g*v*m,this._w=f*p*m+g*v*x;break;case"ZXY":this._x=g*p*m-f*v*x,this._y=f*v*m+g*p*x,this._z=f*p*x+g*v*m,this._w=f*p*m-g*v*x;break;case"ZYX":this._x=g*p*m-f*v*x,this._y=f*v*m+g*p*x,this._z=f*p*x-g*v*m,this._w=f*p*m+g*v*x;break;case"YZX":this._x=g*p*m+f*v*x,this._y=f*v*m+g*p*x,this._z=f*p*x-g*v*m,this._w=f*p*m-g*v*x;break;case"XZY":this._x=g*p*m-f*v*x,this._y=f*v*m-g*p*x,this._z=f*p*x+g*v*m,this._w=f*p*m+g*v*x;break;default:console.warn("THREE.Quaternion: .setFromEuler() encountered an unknown order: "+l)}return e===!0&&this._onChangeCallback(),this}setFromAxisAngle(t,e){const n=e/2,i=Math.sin(n);return this._x=t.x*i,this._y=t.y*i,this._z=t.z*i,this._w=Math.cos(n),this._onChangeCallback(),this}setFromRotationMatrix(t){const e=t.elements,n=e[0],i=e[4],o=e[8],l=e[1],c=e[5],h=e[9],f=e[2],p=e[6],m=e[10],g=n+c+m;if(g>0){const v=.5/Math.sqrt(g+1);this._w=.25/v,this._x=(p-h)*v,this._y=(o-f)*v,this._z=(l-i)*v}else if(n>c&&n>m){const v=2*Math.sqrt(1+n-c-m);this._w=(p-h)/v,this._x=.25*v,this._y=(i+l)/v,this._z=(o+f)/v}else if(c>m){const v=2*Math.sqrt(1+c-n-m);this._w=(o-f)/v,this._x=(i+l)/v,this._y=.25*v,this._z=(h+p)/v}else{const v=2*Math.sqrt(1+m-n-c);this._w=(l-i)/v,this._x=(o+f)/v,this._y=(h+p)/v,this._z=.25*v}return this._onChangeCallback(),this}setFromUnitVectors(t,e){let n=t.dot(e)+1;return n<1e-8?(n=0,Math.abs(t.x)>Math.abs(t.z)?(this._x=-t.y,this._y=t.x,this._z=0,this._w=n):(this._x=0,this._y=-t.z,this._z=t.y,this._w=n)):(this._x=t.y*e.z-t.z*e.y,this._y=t.z*e.x-t.x*e.z,this._z=t.x*e.y-t.y*e.x,this._w=n),this.normalize()}angleTo(t){return 2*Math.acos(Math.abs(de(this.dot(t),-1,1)))}rotateTowards(t,e){const n=this.angleTo(t);if(n===0)return this;const i=Math.min(1,e/n);return this.slerp(t,i),this}identity(){return this.set(0,0,0,1)}invert(){return this.conjugate()}conjugate(){return this._x*=-1,this._y*=-1,this._z*=-1,this._onChangeCallback(),this}dot(t){return this._x*t._x+this._y*t._y+this._z*t._z+this._w*t._w}lengthSq(){return this._x*this._x+this._y*this._y+this._z*this._z+this._w*this._w}length(){return Math.sqrt(this._x*this._x+this._y*this._y+this._z*this._z+this._w*this._w)}normalize(){let t=this.length();return t===0?(this._x=0,this._y=0,this._z=0,this._w=1):(t=1/t,this._x=this._x*t,this._y=this._y*t,this._z=this._z*t,this._w=this._w*t),this._onChangeCallback(),this}multiply(t){return this.multiplyQuaternions(this,t)}premultiply(t){return this.multiplyQuaternions(t,this)}multiplyQuaternions(t,e){const n=t._x,i=t._y,o=t._z,l=t._w,c=e._x,h=e._y,f=e._z,p=e._w;return this._x=n*p+l*c+i*f-o*h,this._y=i*p+l*h+o*c-n*f,this._z=o*p+l*f+n*h-i*c,this._w=l*p-n*c-i*h-o*f,this._onChangeCallback(),this}slerp(t,e){if(e===0)return this;if(e===1)return this.copy(t);const n=this._x,i=this._y,o=this._z,l=this._w;let c=l*t._w+n*t._x+i*t._y+o*t._z;if(c<0?(this._w=-t._w,this._x=-t._x,this._y=-t._y,this._z=-t._z,c=-c):this.copy(t),c>=1)return this._w=l,this._x=n,this._y=i,this._z=o,this;const h=1-c*c;if(h<=Number.EPSILON){const v=1-e;return this._w=v*l+e*this._w,this._x=v*n+e*this._x,this._y=v*i+e*this._y,this._z=v*o+e*this._z,this.normalize(),this}const f=Math.sqrt(h),p=Math.atan2(f,c),m=Math.sin((1-e)*p)/f,g=Math.sin(e*p)/f;return this._w=l*m+this._w*g,this._x=n*m+this._x*g,this._y=i*m+this._y*g,this._z=o*m+this._z*g,this._onChangeCallback(),this}slerpQuaternions(t,e,n){return this.copy(t).slerp(e,n)}random(){const t=2*Math.PI*Math.random(),e=2*Math.PI*Math.random(),n=Math.random(),i=Math.sqrt(1-n),o=Math.sqrt(n);return this.set(i*Math.sin(t),i*Math.cos(t),o*Math.sin(e),o*Math.cos(e))}equals(t){return t._x===this._x&&t._y===this._y&&t._z===this._z&&t._w===this._w}fromArray(t,e=0){return this._x=t[e],this._y=t[e+1],this._z=t[e+2],this._w=t[e+3],this._onChangeCallback(),this}toArray(t=[],e=0){return t[e]=this._x,t[e+1]=this._y,t[e+2]=this._z,t[e+3]=this._w,t}fromBufferAttribute(t,e){return this._x=t.getX(e),this._y=t.getY(e),this._z=t.getZ(e),this._w=t.getW(e),this._onChangeCallback(),this}toJSON(){return this.toArray()}_onChange(t){return this._onChangeCallback=t,this}_onChangeCallback(){}*[Symbol.iterator](){yield this._x,yield this._y,yield this._z,yield this._w}}class I{constructor(t=0,e=0,n=0){I.prototype.isVector3=!0,this.x=t,this.y=e,this.z=n}set(t,e,n){return n===void 0&&(n=this.z),this.x=t,this.y=e,this.z=n,this}setScalar(t){return this.x=t,this.y=t,this.z=t,this}setX(t){return this.x=t,this}setY(t){return this.y=t,this}setZ(t){return this.z=t,this}setComponent(t,e){switch(t){case 0:this.x=e;break;case 1:this.y=e;break;case 2:this.z=e;break;default:throw new Error("index is out of range: "+t)}return this}getComponent(t){switch(t){case 0:return this.x;case 1:return this.y;case 2:return this.z;default:throw new Error("index is out of range: "+t)}}clone(){return new this.constructor(this.x,this.y,this.z)}copy(t){return this.x=t.x,this.y=t.y,this.z=t.z,this}add(t){return this.x+=t.x,this.y+=t.y,this.z+=t.z,this}addScalar(t){return this.x+=t,this.y+=t,this.z+=t,this}addVectors(t,e){return this.x=t.x+e.x,this.y=t.y+e.y,this.z=t.z+e.z,this}addScaledVector(t,e){return this.x+=t.x*e,this.y+=t.y*e,this.z+=t.z*e,this}sub(t){return this.x-=t.x,this.y-=t.y,this.z-=t.z,this}subScalar(t){return this.x-=t,this.y-=t,this.z-=t,this}subVectors(t,e){return this.x=t.x-e.x,this.y=t.y-e.y,this.z=t.z-e.z,this}multiply(t){return this.x*=t.x,this.y*=t.y,this.z*=t.z,this}multiplyScalar(t){return this.x*=t,this.y*=t,this.z*=t,this}multiplyVectors(t,e){return this.x=t.x*e.x,this.y=t.y*e.y,this.z=t.z*e.z,this}applyEuler(t){return this.applyQuaternion(Uv.setFromEuler(t))}applyAxisAngle(t,e){return this.applyQuaternion(Uv.setFromAxisAngle(t,e))}applyMatrix3(t){const e=this.x,n=this.y,i=this.z,o=t.elements;return this.x=o[0]*e+o[3]*n+o[6]*i,this.y=o[1]*e+o[4]*n+o[7]*i,this.z=o[2]*e+o[5]*n+o[8]*i,this}applyNormalMatrix(t){return this.applyMatrix3(t).normalize()}applyMatrix4(t){const e=this.x,n=this.y,i=this.z,o=t.elements,l=1/(o[3]*e+o[7]*n+o[11]*i+o[15]);return this.x=(o[0]*e+o[4]*n+o[8]*i+o[12])*l,this.y=(o[1]*e+o[5]*n+o[9]*i+o[13])*l,this.z=(o[2]*e+o[6]*n+o[10]*i+o[14])*l,this}applyQuaternion(t){const e=this.x,n=this.y,i=this.z,o=t.x,l=t.y,c=t.z,h=t.w,f=2*(l*i-c*n),p=2*(c*e-o*i),m=2*(o*n-l*e);return this.x=e+h*f+l*m-c*p,this.y=n+h*p+c*f-o*m,this.z=i+h*m+o*p-l*f,this}project(t){return this.applyMatrix4(t.matrixWorldInverse).applyMatrix4(t.projectionMatrix)}unproject(t){return this.applyMatrix4(t.projectionMatrixInverse).applyMatrix4(t.matrixWorld)}transformDirection(t){const e=this.x,n=this.y,i=this.z,o=t.elements;return this.x=o[0]*e+o[4]*n+o[8]*i,this.y=o[1]*e+o[5]*n+o[9]*i,this.z=o[2]*e+o[6]*n+o[10]*i,this.normalize()}divide(t){return this.x/=t.x,this.y/=t.y,this.z/=t.z,this}divideScalar(t){return this.multiplyScalar(1/t)}min(t){return this.x=Math.min(this.x,t.x),this.y=Math.min(this.y,t.y),this.z=Math.min(this.z,t.z),this}max(t){return this.x=Math.max(this.x,t.x),this.y=Math.max(this.y,t.y),this.z=Math.max(this.z,t.z),this}clamp(t,e){return this.x=de(this.x,t.x,e.x),this.y=de(this.y,t.y,e.y),this.z=de(this.z,t.z,e.z),this}clampScalar(t,e){return this.x=de(this.x,t,e),this.y=de(this.y,t,e),this.z=de(this.z,t,e),this}clampLength(t,e){const n=this.length();return this.divideScalar(n||1).multiplyScalar(de(n,t,e))}floor(){return this.x=Math.floor(this.x),this.y=Math.floor(this.y),this.z=Math.floor(this.z),this}ceil(){return this.x=Math.ceil(this.x),this.y=Math.ceil(this.y),this.z=Math.ceil(this.z),this}round(){return this.x=Math.round(this.x),this.y=Math.round(this.y),this.z=Math.round(this.z),this}roundToZero(){return this.x=Math.trunc(this.x),this.y=Math.trunc(this.y),this.z=Math.trunc(this.z),this}negate(){return this.x=-this.x,this.y=-this.y,this.z=-this.z,this}dot(t){return this.x*t.x+this.y*t.y+this.z*t.z}lengthSq(){return this.x*this.x+this.y*this.y+this.z*this.z}length(){return Math.sqrt(this.x*this.x+this.y*this.y+this.z*this.z)}manhattanLength(){return Math.abs(this.x)+Math.abs(this.y)+Math.abs(this.z)}normalize(){return this.divideScalar(this.length()||1)}setLength(t){return this.normalize().multiplyScalar(t)}lerp(t,e){return this.x+=(t.x-this.x)*e,this.y+=(t.y-this.y)*e,this.z+=(t.z-this.z)*e,this}lerpVectors(t,e,n){return this.x=t.x+(e.x-t.x)*n,this.y=t.y+(e.y-t.y)*n,this.z=t.z+(e.z-t.z)*n,this}cross(t){return this.crossVectors(this,t)}crossVectors(t,e){const n=t.x,i=t.y,o=t.z,l=e.x,c=e.y,h=e.z;return this.x=i*h-o*c,this.y=o*l-n*h,this.z=n*c-i*l,this}projectOnVector(t){const e=t.lengthSq();if(e===0)return this.set(0,0,0);const n=t.dot(this)/e;return this.copy(t).multiplyScalar(n)}projectOnPlane(t){return Kd.copy(this).projectOnVector(t),this.sub(Kd)}reflect(t){return this.sub(Kd.copy(t).multiplyScalar(2*this.dot(t)))}angleTo(t){const e=Math.sqrt(this.lengthSq()*t.lengthSq());if(e===0)return Math.PI/2;const n=this.dot(t)/e;return Math.acos(de(n,-1,1))}distanceTo(t){return Math.sqrt(this.distanceToSquared(t))}distanceToSquared(t){const e=this.x-t.x,n=this.y-t.y,i=this.z-t.z;return e*e+n*n+i*i}manhattanDistanceTo(t){return Math.abs(this.x-t.x)+Math.abs(this.y-t.y)+Math.abs(this.z-t.z)}setFromSpherical(t){return this.setFromSphericalCoords(t.radius,t.phi,t.theta)}setFromSphericalCoords(t,e,n){const i=Math.sin(e)*t;return this.x=i*Math.sin(n),this.y=Math.cos(e)*t,this.z=i*Math.cos(n),this}setFromCylindrical(t){return this.setFromCylindricalCoords(t.radius,t.theta,t.y)}setFromCylindricalCoords(t,e,n){return this.x=t*Math.sin(e),this.y=n,this.z=t*Math.cos(e),this}setFromMatrixPosition(t){const e=t.elements;return this.x=e[12],this.y=e[13],this.z=e[14],this}setFromMatrixScale(t){const e=this.setFromMatrixColumn(t,0).length(),n=this.setFromMatrixColumn(t,1).length(),i=this.setFromMatrixColumn(t,2).length();return this.x=e,this.y=n,this.z=i,this}setFromMatrixColumn(t,e){return this.fromArray(t.elements,e*4)}setFromMatrix3Column(t,e){return this.fromArray(t.elements,e*3)}setFromEuler(t){return this.x=t._x,this.y=t._y,this.z=t._z,this}setFromColor(t){return this.x=t.r,this.y=t.g,this.z=t.b,this}equals(t){return t.x===this.x&&t.y===this.y&&t.z===this.z}fromArray(t,e=0){return this.x=t[e],this.y=t[e+1],this.z=t[e+2],this}toArray(t=[],e=0){return t[e]=this.x,t[e+1]=this.y,t[e+2]=this.z,t}fromBufferAttribute(t,e){return this.x=t.getX(e),this.y=t.getY(e),this.z=t.getZ(e),this}random(){return this.x=Math.random(),this.y=Math.random(),this.z=Math.random(),this}randomDirection(){const t=Math.random()*Math.PI*2,e=Math.random()*2-1,n=Math.sqrt(1-e*e);return this.x=n*Math.cos(t),this.y=e,this.z=n*Math.sin(t),this}*[Symbol.iterator](){yield this.x,yield this.y,yield this.z}}const Kd=new I,Uv=new Vn;class ve{constructor(t,e,n,i,o,l,c,h,f){ve.prototype.isMatrix3=!0,this.elements=[1,0,0,0,1,0,0,0,1],t!==void 0&&this.set(t,e,n,i,o,l,c,h,f)}set(t,e,n,i,o,l,c,h,f){const p=this.elements;return p[0]=t,p[1]=i,p[2]=c,p[3]=e,p[4]=o,p[5]=h,p[6]=n,p[7]=l,p[8]=f,this}identity(){return this.set(1,0,0,0,1,0,0,0,1),this}copy(t){const e=this.elements,n=t.elements;return e[0]=n[0],e[1]=n[1],e[2]=n[2],e[3]=n[3],e[4]=n[4],e[5]=n[5],e[6]=n[6],e[7]=n[7],e[8]=n[8],this}extractBasis(t,e,n){return t.setFromMatrix3Column(this,0),e.setFromMatrix3Column(this,1),n.setFromMatrix3Column(this,2),this}setFromMatrix4(t){const e=t.elements;return this.set(e[0],e[4],e[8],e[1],e[5],e[9],e[2],e[6],e[10]),this}multiply(t){return this.multiplyMatrices(this,t)}premultiply(t){return this.multiplyMatrices(t,this)}multiplyMatrices(t,e){const n=t.elements,i=e.elements,o=this.elements,l=n[0],c=n[3],h=n[6],f=n[1],p=n[4],m=n[7],g=n[2],v=n[5],x=n[8],b=i[0],S=i[3],_=i[6],E=i[1],A=i[4],T=i[7],U=i[2],D=i[5],P=i[8];return o[0]=l*b+c*E+h*U,o[3]=l*S+c*A+h*D,o[6]=l*_+c*T+h*P,o[1]=f*b+p*E+m*U,o[4]=f*S+p*A+m*D,o[7]=f*_+p*T+m*P,o[2]=g*b+v*E+x*U,o[5]=g*S+v*A+x*D,o[8]=g*_+v*T+x*P,this}multiplyScalar(t){const e=this.elements;return e[0]*=t,e[3]*=t,e[6]*=t,e[1]*=t,e[4]*=t,e[7]*=t,e[2]*=t,e[5]*=t,e[8]*=t,this}determinant(){const t=this.elements,e=t[0],n=t[1],i=t[2],o=t[3],l=t[4],c=t[5],h=t[6],f=t[7],p=t[8];return e*l*p-e*c*f-n*o*p+n*c*h+i*o*f-i*l*h}invert(){const t=this.elements,e=t[0],n=t[1],i=t[2],o=t[3],l=t[4],c=t[5],h=t[6],f=t[7],p=t[8],m=p*l-c*f,g=c*h-p*o,v=f*o-l*h,x=e*m+n*g+i*v;if(x===0)return this.set(0,0,0,0,0,0,0,0,0);const b=1/x;return t[0]=m*b,t[1]=(i*f-p*n)*b,t[2]=(c*n-i*l)*b,t[3]=g*b,t[4]=(p*e-i*h)*b,t[5]=(i*o-c*e)*b,t[6]=v*b,t[7]=(n*h-f*e)*b,t[8]=(l*e-n*o)*b,this}transpose(){let t;const e=this.elements;return t=e[1],e[1]=e[3],e[3]=t,t=e[2],e[2]=e[6],e[6]=t,t=e[5],e[5]=e[7],e[7]=t,this}getNormalMatrix(t){return this.setFromMatrix4(t).invert().transpose()}transposeIntoArray(t){const e=this.elements;return t[0]=e[0],t[1]=e[3],t[2]=e[6],t[3]=e[1],t[4]=e[4],t[5]=e[7],t[6]=e[2],t[7]=e[5],t[8]=e[8],this}setUvTransform(t,e,n,i,o,l,c){const h=Math.cos(o),f=Math.sin(o);return this.set(n*h,n*f,-n*(h*l+f*c)+l+t,-i*f,i*h,-i*(-f*l+h*c)+c+e,0,0,1),this}scale(t,e){return this.premultiply(Jd.makeScale(t,e)),this}rotate(t){return this.premultiply(Jd.makeRotation(-t)),this}translate(t,e){return this.premultiply(Jd.makeTranslation(t,e)),this}makeTranslation(t,e){return t.isVector2?this.set(1,0,t.x,0,1,t.y,0,0,1):this.set(1,0,t,0,1,e,0,0,1),this}makeRotation(t){const e=Math.cos(t),n=Math.sin(t);return this.set(e,-n,0,n,e,0,0,0,1),this}makeScale(t,e){return this.set(t,0,0,0,e,0,0,0,1),this}equals(t){const e=this.elements,n=t.elements;for(let i=0;i<9;i++)if(e[i]!==n[i])return!1;return!0}fromArray(t,e=0){for(let n=0;n<9;n++)this.elements[n]=t[n+e];return this}toArray(t=[],e=0){const n=this.elements;return t[e]=n[0],t[e+1]=n[1],t[e+2]=n[2],t[e+3]=n[3],t[e+4]=n[4],t[e+5]=n[5],t[e+6]=n[6],t[e+7]=n[7],t[e+8]=n[8],t}clone(){return new this.constructor().fromArray(this.elements)}}const Jd=new ve;function xx(s){for(let t=s.length-1;t>=0;--t)if(s[t]>=65535)return!0;return!1}const _T={Int8Array,Uint8Array,Uint8ClampedArray,Int16Array,Uint16Array,Int32Array,Uint32Array,Float32Array,Float64Array};function So(s,t){return new _T[s](t)}function Jl(s){return document.createElementNS("http://www.w3.org/1999/xhtml",s)}function Sx(){const s=Jl("canvas");return s.style.display="block",s}const Nv={};function Eo(s){s in Nv||(Nv[s]=!0,console.warn(s))}function yT(s,t,e){return new Promise(function(n,i){function o(){switch(s.clientWaitSync(t,s.SYNC_FLUSH_COMMANDS_BIT,0)){case s.WAIT_FAILED:i();break;case s.TIMEOUT_EXPIRED:setTimeout(o,e);break;default:n()}}setTimeout(o,e)})}const Lv=new ve().set(.4123908,.3575843,.1804808,.212639,.7151687,.0721923,.0193308,.1191948,.9505322),Pv=new ve().set(3.2409699,-1.5373832,-.4986108,-.9692436,1.8759675,.0415551,.0556301,-.203977,1.0569715);function xT(){const s={enabled:!0,workingColorSpace:va,spaces:{},convert:function(i,o,l){return this.enabled===!1||o===l||!o||!l||(this.spaces[o].transfer===Ve&&(i.r=Bs(i.r),i.g=Bs(i.g),i.b=Bs(i.b)),this.spaces[o].primaries!==this.spaces[l].primaries&&(i.applyMatrix3(this.spaces[o].toXYZ),i.applyMatrix3(this.spaces[l].fromXYZ)),this.spaces[l].transfer===Ve&&(i.r=To(i.r),i.g=To(i.g),i.b=To(i.b))),i},workingToColorSpace:function(i,o){return this.convert(i,this.workingColorSpace,o)},colorSpaceToWorking:function(i,o){return this.convert(i,o,this.workingColorSpace)},getPrimaries:function(i){return this.spaces[i].primaries},getTransfer:function(i){return i===Ps?Zl:this.spaces[i].transfer},getLuminanceCoefficients:function(i,o=this.workingColorSpace){return i.fromArray(this.spaces[o].luminanceCoefficients)},define:function(i){Object.assign(this.spaces,i)},_getMatrix:function(i,o,l){return i.copy(this.spaces[o].toXYZ).multiply(this.spaces[l].fromXYZ)},_getDrawingBufferColorSpace:function(i){return this.spaces[i].outputColorSpaceConfig.drawingBufferColorSpace},_getUnpackColorSpace:function(i=this.workingColorSpace){return this.spaces[i].workingColorSpaceConfig.unpackColorSpace},fromWorkingColorSpace:function(i,o){return Eo("THREE.ColorManagement: .fromWorkingColorSpace() has been renamed to .workingToColorSpace()."),s.workingToColorSpace(i,o)},toWorkingColorSpace:function(i,o){return Eo("THREE.ColorManagement: .toWorkingColorSpace() has been renamed to .colorSpaceToWorking()."),s.colorSpaceToWorking(i,o)}},t=[.64,.33,.3,.6,.15,.06],e=[.2126,.7152,.0722],n=[.3127,.329];return s.define({[va]:{primaries:t,whitePoint:n,transfer:Zl,toXYZ:Lv,fromXYZ:Pv,luminanceCoefficients:e,workingColorSpaceConfig:{unpackColorSpace:Fn},outputColorSpaceConfig:{drawingBufferColorSpace:Fn}},[Fn]:{primaries:t,whitePoint:n,transfer:Ve,toXYZ:Lv,fromXYZ:Pv,luminanceCoefficients:e,outputColorSpaceConfig:{drawingBufferColorSpace:Fn}}}),s}const Re=xT();function Bs(s){return s<.04045?s*.0773993808:Math.pow(s*.9478672986+.0521327014,2.4)}function To(s){return s<.0031308?s*12.92:1.055*Math.pow(s,.41666)-.055}let Zr;class Mx{static getDataURL(t,e="image/png"){if(/^data:/i.test(t.src)||typeof HTMLCanvasElement>"u")return t.src;let n;if(t instanceof HTMLCanvasElement)n=t;else{Zr===void 0&&(Zr=Jl("canvas")),Zr.width=t.width,Zr.height=t.height;const i=Zr.getContext("2d");t instanceof ImageData?i.putImageData(t,0,0):i.drawImage(t,0,0,t.width,t.height),n=Zr}return n.toDataURL(e)}static sRGBToLinear(t){if(typeof HTMLImageElement<"u"&&t instanceof HTMLImageElement||typeof HTMLCanvasElement<"u"&&t instanceof HTMLCanvasElement||typeof ImageBitmap<"u"&&t instanceof ImageBitmap){const e=Jl("canvas");e.width=t.width,e.height=t.height;const n=e.getContext("2d");n.drawImage(t,0,0,t.width,t.height);const i=n.getImageData(0,0,t.width,t.height),o=i.data;for(let l=0;l<o.length;l++)o[l]=Bs(o[l]/255)*255;return n.putImageData(i,0,0),e}else if(t.data){const e=t.data.slice(0);for(let n=0;n<e.length;n++)e instanceof Uint8Array||e instanceof Uint8ClampedArray?e[n]=Math.floor(Bs(e[n]/255)*255):e[n]=Bs(e[n]);return{data:e,width:t.width,height:t.height}}else return console.warn("THREE.ImageUtils.sRGBToLinear(): Unsupported image type. No color space conversion applied."),t}}let ST=0;class pa{constructor(t=null){this.isSource=!0,Object.defineProperty(this,"id",{value:ST++}),this.uuid=Mi(),this.data=t,this.dataReady=!0,this.version=0}getSize(t){const e=this.data;return e instanceof HTMLVideoElement?t.set(e.videoWidth,e.videoHeight,0):e instanceof VideoFrame?t.set(e.displayHeight,e.displayWidth,0):e!==null?t.set(e.width,e.height,e.depth||0):t.set(0,0,0),t}set needsUpdate(t){t===!0&&this.version++}toJSON(t){const e=t===void 0||typeof t=="string";if(!e&&t.images[this.uuid]!==void 0)return t.images[this.uuid];const n={uuid:this.uuid,url:""},i=this.data;if(i!==null){let o;if(Array.isArray(i)){o=[];for(let l=0,c=i.length;l<c;l++)i[l].isDataTexture?o.push(Qd(i[l].image)):o.push(Qd(i[l]))}else o=Qd(i);n.url=o}return e||(t.images[this.uuid]=n),n}}function Qd(s){return typeof HTMLImageElement<"u"&&s instanceof HTMLImageElement||typeof HTMLCanvasElement<"u"&&s instanceof HTMLCanvasElement||typeof ImageBitmap<"u"&&s instanceof ImageBitmap?Mx.getDataURL(s):s.data?{data:Array.from(s.data),width:s.width,height:s.height,type:s.data.constructor.name}:(console.warn("THREE.Texture: Unable to serialize Texture."),{})}let MT=0;const $d=new I;class on extends hs{constructor(t=on.DEFAULT_IMAGE,e=on.DEFAULT_MAPPING,n=Pi,i=Pi,o=mn,l=rs,c=Hn,h=Ii,f=on.DEFAULT_ANISOTROPY,p=Ps){super(),this.isTexture=!0,Object.defineProperty(this,"id",{value:MT++}),this.uuid=Mi(),this.name="",this.source=new pa(t),this.mipmaps=[],this.mapping=e,this.channel=0,this.wrapS=n,this.wrapT=i,this.magFilter=o,this.minFilter=l,this.anisotropy=f,this.format=c,this.internalFormat=null,this.type=h,this.offset=new dt(0,0),this.repeat=new dt(1,1),this.center=new dt(0,0),this.rotation=0,this.matrixAutoUpdate=!0,this.matrix=new ve,this.generateMipmaps=!0,this.premultiplyAlpha=!1,this.flipY=!0,this.unpackAlignment=4,this.colorSpace=p,this.userData={},this.updateRanges=[],this.version=0,this.onUpdate=null,this.renderTarget=null,this.isRenderTargetTexture=!1,this.isArrayTexture=!!(t&&t.depth&&t.depth>1),this.pmremVersion=0}get width(){return this.source.getSize($d).x}get height(){return this.source.getSize($d).y}get depth(){return this.source.getSize($d).z}get image(){return this.source.data}set image(t=null){this.source.data=t}updateMatrix(){this.matrix.setUvTransform(this.offset.x,this.offset.y,this.repeat.x,this.repeat.y,this.rotation,this.center.x,this.center.y)}addUpdateRange(t,e){this.updateRanges.push({start:t,count:e})}clearUpdateRanges(){this.updateRanges.length=0}clone(){return new this.constructor().copy(this)}copy(t){return this.name=t.name,this.source=t.source,this.mipmaps=t.mipmaps.slice(0),this.mapping=t.mapping,this.channel=t.channel,this.wrapS=t.wrapS,this.wrapT=t.wrapT,this.magFilter=t.magFilter,this.minFilter=t.minFilter,this.anisotropy=t.anisotropy,this.format=t.format,this.internalFormat=t.internalFormat,this.type=t.type,this.offset.copy(t.offset),this.repeat.copy(t.repeat),this.center.copy(t.center),this.rotation=t.rotation,this.matrixAutoUpdate=t.matrixAutoUpdate,this.matrix.copy(t.matrix),this.generateMipmaps=t.generateMipmaps,this.premultiplyAlpha=t.premultiplyAlpha,this.flipY=t.flipY,this.unpackAlignment=t.unpackAlignment,this.colorSpace=t.colorSpace,this.renderTarget=t.renderTarget,this.isRenderTargetTexture=t.isRenderTargetTexture,this.isArrayTexture=t.isArrayTexture,this.userData=JSON.parse(JSON.stringify(t.userData)),this.needsUpdate=!0,this}setValues(t){for(const e in t){const n=t[e];if(n===void 0){console.warn(`THREE.Texture.setValues(): parameter '${e}' has value of undefined.`);continue}const i=this[e];if(i===void 0){console.warn(`THREE.Texture.setValues(): property '${e}' does not exist.`);continue}i&&n&&i.isVector2&&n.isVector2||i&&n&&i.isVector3&&n.isVector3||i&&n&&i.isMatrix3&&n.isMatrix3?i.copy(n):this[e]=n}}toJSON(t){const e=t===void 0||typeof t=="string";if(!e&&t.textures[this.uuid]!==void 0)return t.textures[this.uuid];const n={metadata:{version:4.7,type:"Texture",generator:"Texture.toJSON"},uuid:this.uuid,name:this.name,image:this.source.toJSON(t).uuid,mapping:this.mapping,channel:this.channel,repeat:[this.repeat.x,this.repeat.y],offset:[this.offset.x,this.offset.y],center:[this.center.x,this.center.y],rotation:this.rotation,wrap:[this.wrapS,this.wrapT],format:this.format,internalFormat:this.internalFormat,type:this.type,colorSpace:this.colorSpace,minFilter:this.minFilter,magFilter:this.magFilter,anisotropy:this.anisotropy,flipY:this.flipY,generateMipmaps:this.generateMipmaps,premultiplyAlpha:this.premultiplyAlpha,unpackAlignment:this.unpackAlignment};return Object.keys(this.userData).length>0&&(n.userData=this.userData),e||(t.textures[this.uuid]=n),n}dispose(){this.dispatchEvent({type:"dispose"})}transformUv(t){if(this.mapping!==Yh)return t;if(t.applyMatrix3(this.matrix),t.x<0||t.x>1)switch(this.wrapS){case Xl:t.x=t.x-Math.floor(t.x);break;case Pi:t.x=t.x<0?0:1;break;case ql:Math.abs(Math.floor(t.x)%2)===1?t.x=Math.ceil(t.x)-t.x:t.x=t.x-Math.floor(t.x);break}if(t.y<0||t.y>1)switch(this.wrapT){case Xl:t.y=t.y-Math.floor(t.y);break;case Pi:t.y=t.y<0?0:1;break;case ql:Math.abs(Math.floor(t.y)%2)===1?t.y=Math.ceil(t.y)-t.y:t.y=t.y-Math.floor(t.y);break}return this.flipY&&(t.y=1-t.y),t}set needsUpdate(t){t===!0&&(this.version++,this.source.needsUpdate=!0)}set needsPMREMUpdate(t){t===!0&&this.pmremVersion++}}on.DEFAULT_IMAGE=null;on.DEFAULT_MAPPING=Yh;on.DEFAULT_ANISOTROPY=1;class Ne{constructor(t=0,e=0,n=0,i=1){Ne.prototype.isVector4=!0,this.x=t,this.y=e,this.z=n,this.w=i}get width(){return this.z}set width(t){this.z=t}get height(){return this.w}set height(t){this.w=t}set(t,e,n,i){return this.x=t,this.y=e,this.z=n,this.w=i,this}setScalar(t){return this.x=t,this.y=t,this.z=t,this.w=t,this}setX(t){return this.x=t,this}setY(t){return this.y=t,this}setZ(t){return this.z=t,this}setW(t){return this.w=t,this}setComponent(t,e){switch(t){case 0:this.x=e;break;case 1:this.y=e;break;case 2:this.z=e;break;case 3:this.w=e;break;default:throw new Error("index is out of range: "+t)}return this}getComponent(t){switch(t){case 0:return this.x;case 1:return this.y;case 2:return this.z;case 3:return this.w;default:throw new Error("index is out of range: "+t)}}clone(){return new this.constructor(this.x,this.y,this.z,this.w)}copy(t){return this.x=t.x,this.y=t.y,this.z=t.z,this.w=t.w!==void 0?t.w:1,this}add(t){return this.x+=t.x,this.y+=t.y,this.z+=t.z,this.w+=t.w,this}addScalar(t){return this.x+=t,this.y+=t,this.z+=t,this.w+=t,this}addVectors(t,e){return this.x=t.x+e.x,this.y=t.y+e.y,this.z=t.z+e.z,this.w=t.w+e.w,this}addScaledVector(t,e){return this.x+=t.x*e,this.y+=t.y*e,this.z+=t.z*e,this.w+=t.w*e,this}sub(t){return this.x-=t.x,this.y-=t.y,this.z-=t.z,this.w-=t.w,this}subScalar(t){return this.x-=t,this.y-=t,this.z-=t,this.w-=t,this}subVectors(t,e){return this.x=t.x-e.x,this.y=t.y-e.y,this.z=t.z-e.z,this.w=t.w-e.w,this}multiply(t){return this.x*=t.x,this.y*=t.y,this.z*=t.z,this.w*=t.w,this}multiplyScalar(t){return this.x*=t,this.y*=t,this.z*=t,this.w*=t,this}applyMatrix4(t){const e=this.x,n=this.y,i=this.z,o=this.w,l=t.elements;return this.x=l[0]*e+l[4]*n+l[8]*i+l[12]*o,this.y=l[1]*e+l[5]*n+l[9]*i+l[13]*o,this.z=l[2]*e+l[6]*n+l[10]*i+l[14]*o,this.w=l[3]*e+l[7]*n+l[11]*i+l[15]*o,this}divide(t){return this.x/=t.x,this.y/=t.y,this.z/=t.z,this.w/=t.w,this}divideScalar(t){return this.multiplyScalar(1/t)}setAxisAngleFromQuaternion(t){this.w=2*Math.acos(t.w);const e=Math.sqrt(1-t.w*t.w);return e<1e-4?(this.x=1,this.y=0,this.z=0):(this.x=t.x/e,this.y=t.y/e,this.z=t.z/e),this}setAxisAngleFromRotationMatrix(t){let e,n,i,o;const h=t.elements,f=h[0],p=h[4],m=h[8],g=h[1],v=h[5],x=h[9],b=h[2],S=h[6],_=h[10];if(Math.abs(p-g)<.01&&Math.abs(m-b)<.01&&Math.abs(x-S)<.01){if(Math.abs(p+g)<.1&&Math.abs(m+b)<.1&&Math.abs(x+S)<.1&&Math.abs(f+v+_-3)<.1)return this.set(1,0,0,0),this;e=Math.PI;const A=(f+1)/2,T=(v+1)/2,U=(_+1)/2,D=(p+g)/4,P=(m+b)/4,O=(x+S)/4;return A>T&&A>U?A<.01?(n=0,i=.707106781,o=.707106781):(n=Math.sqrt(A),i=D/n,o=P/n):T>U?T<.01?(n=.707106781,i=0,o=.707106781):(i=Math.sqrt(T),n=D/i,o=O/i):U<.01?(n=.707106781,i=.707106781,o=0):(o=Math.sqrt(U),n=P/o,i=O/o),this.set(n,i,o,e),this}let E=Math.sqrt((S-x)*(S-x)+(m-b)*(m-b)+(g-p)*(g-p));return Math.abs(E)<.001&&(E=1),this.x=(S-x)/E,this.y=(m-b)/E,this.z=(g-p)/E,this.w=Math.acos((f+v+_-1)/2),this}setFromMatrixPosition(t){const e=t.elements;return this.x=e[12],this.y=e[13],this.z=e[14],this.w=e[15],this}min(t){return this.x=Math.min(this.x,t.x),this.y=Math.min(this.y,t.y),this.z=Math.min(this.z,t.z),this.w=Math.min(this.w,t.w),this}max(t){return this.x=Math.max(this.x,t.x),this.y=Math.max(this.y,t.y),this.z=Math.max(this.z,t.z),this.w=Math.max(this.w,t.w),this}clamp(t,e){return this.x=de(this.x,t.x,e.x),this.y=de(this.y,t.y,e.y),this.z=de(this.z,t.z,e.z),this.w=de(this.w,t.w,e.w),this}clampScalar(t,e){return this.x=de(this.x,t,e),this.y=de(this.y,t,e),this.z=de(this.z,t,e),this.w=de(this.w,t,e),this}clampLength(t,e){const n=this.length();return this.divideScalar(n||1).multiplyScalar(de(n,t,e))}floor(){return this.x=Math.floor(this.x),this.y=Math.floor(this.y),this.z=Math.floor(this.z),this.w=Math.floor(this.w),this}ceil(){return this.x=Math.ceil(this.x),this.y=Math.ceil(this.y),this.z=Math.ceil(this.z),this.w=Math.ceil(this.w),this}round(){return this.x=Math.round(this.x),this.y=Math.round(this.y),this.z=Math.round(this.z),this.w=Math.round(this.w),this}roundToZero(){return this.x=Math.trunc(this.x),this.y=Math.trunc(this.y),this.z=Math.trunc(this.z),this.w=Math.trunc(this.w),this}negate(){return this.x=-this.x,this.y=-this.y,this.z=-this.z,this.w=-this.w,this}dot(t){return this.x*t.x+this.y*t.y+this.z*t.z+this.w*t.w}lengthSq(){return this.x*this.x+this.y*this.y+this.z*this.z+this.w*this.w}length(){return Math.sqrt(this.x*this.x+this.y*this.y+this.z*this.z+this.w*this.w)}manhattanLength(){return Math.abs(this.x)+Math.abs(this.y)+Math.abs(this.z)+Math.abs(this.w)}normalize(){return this.divideScalar(this.length()||1)}setLength(t){return this.normalize().multiplyScalar(t)}lerp(t,e){return this.x+=(t.x-this.x)*e,this.y+=(t.y-this.y)*e,this.z+=(t.z-this.z)*e,this.w+=(t.w-this.w)*e,this}lerpVectors(t,e,n){return this.x=t.x+(e.x-t.x)*n,this.y=t.y+(e.y-t.y)*n,this.z=t.z+(e.z-t.z)*n,this.w=t.w+(e.w-t.w)*n,this}equals(t){return t.x===this.x&&t.y===this.y&&t.z===this.z&&t.w===this.w}fromArray(t,e=0){return this.x=t[e],this.y=t[e+1],this.z=t[e+2],this.w=t[e+3],this}toArray(t=[],e=0){return t[e]=this.x,t[e+1]=this.y,t[e+2]=this.z,t[e+3]=this.w,t}fromBufferAttribute(t,e){return this.x=t.getX(e),this.y=t.getY(e),this.z=t.getZ(e),this.w=t.getW(e),this}random(){return this.x=Math.random(),this.y=Math.random(),this.z=Math.random(),this.w=Math.random(),this}*[Symbol.iterator](){yield this.x,yield this.y,yield this.z,yield this.w}}class Fm extends hs{constructor(t=1,e=1,n={}){super(),n=Object.assign({generateMipmaps:!1,internalFormat:null,minFilter:mn,depthBuffer:!0,stencilBuffer:!1,resolveDepthBuffer:!0,resolveStencilBuffer:!0,depthTexture:null,samples:0,count:1,depth:1,multiview:!1},n),this.isRenderTarget=!0,this.width=t,this.height=e,this.depth=n.depth,this.scissor=new Ne(0,0,t,e),this.scissorTest=!1,this.viewport=new Ne(0,0,t,e);const i={width:t,height:e,depth:n.depth},o=new on(i);this.textures=[];const l=n.count;for(let c=0;c<l;c++)this.textures[c]=o.clone(),this.textures[c].isRenderTargetTexture=!0,this.textures[c].renderTarget=this;this._setTextureOptions(n),this.depthBuffer=n.depthBuffer,this.stencilBuffer=n.stencilBuffer,this.resolveDepthBuffer=n.resolveDepthBuffer,this.resolveStencilBuffer=n.resolveStencilBuffer,this._depthTexture=null,this.depthTexture=n.depthTexture,this.samples=n.samples,this.multiview=n.multiview}_setTextureOptions(t={}){const e={minFilter:mn,generateMipmaps:!1,flipY:!1,internalFormat:null};t.mapping!==void 0&&(e.mapping=t.mapping),t.wrapS!==void 0&&(e.wrapS=t.wrapS),t.wrapT!==void 0&&(e.wrapT=t.wrapT),t.wrapR!==void 0&&(e.wrapR=t.wrapR),t.magFilter!==void 0&&(e.magFilter=t.magFilter),t.minFilter!==void 0&&(e.minFilter=t.minFilter),t.format!==void 0&&(e.format=t.format),t.type!==void 0&&(e.type=t.type),t.anisotropy!==void 0&&(e.anisotropy=t.anisotropy),t.colorSpace!==void 0&&(e.colorSpace=t.colorSpace),t.flipY!==void 0&&(e.flipY=t.flipY),t.generateMipmaps!==void 0&&(e.generateMipmaps=t.generateMipmaps),t.internalFormat!==void 0&&(e.internalFormat=t.internalFormat);for(let n=0;n<this.textures.length;n++)this.textures[n].setValues(e)}get texture(){return this.textures[0]}set texture(t){this.textures[0]=t}set depthTexture(t){this._depthTexture!==null&&(this._depthTexture.renderTarget=null),t!==null&&(t.renderTarget=this),this._depthTexture=t}get depthTexture(){return this._depthTexture}setSize(t,e,n=1){if(this.width!==t||this.height!==e||this.depth!==n){this.width=t,this.height=e,this.depth=n;for(let i=0,o=this.textures.length;i<o;i++)this.textures[i].image.width=t,this.textures[i].image.height=e,this.textures[i].image.depth=n,this.textures[i].isArrayTexture=this.textures[i].image.depth>1;this.dispose()}this.viewport.set(0,0,t,e),this.scissor.set(0,0,t,e)}clone(){return new this.constructor().copy(this)}copy(t){this.width=t.width,this.height=t.height,this.depth=t.depth,this.scissor.copy(t.scissor),this.scissorTest=t.scissorTest,this.viewport.copy(t.viewport),this.textures.length=0;for(let e=0,n=t.textures.length;e<n;e++){this.textures[e]=t.textures[e].clone(),this.textures[e].isRenderTargetTexture=!0,this.textures[e].renderTarget=this;const i=Object.assign({},t.textures[e].image);this.textures[e].source=new pa(i)}return this.depthBuffer=t.depthBuffer,this.stencilBuffer=t.stencilBuffer,this.resolveDepthBuffer=t.resolveDepthBuffer,this.resolveStencilBuffer=t.resolveStencilBuffer,t.depthTexture!==null&&(this.depthTexture=t.depthTexture.clone()),this.samples=t.samples,this}dispose(){this.dispatchEvent({type:"dispose"})}}class us extends Fm{constructor(t=1,e=1,n={}){super(t,e,n),this.isWebGLRenderTarget=!0}}class ef extends on{constructor(t=null,e=1,n=1,i=1){super(null),this.isDataArrayTexture=!0,this.image={data:t,width:e,height:n,depth:i},this.magFilter=Cn,this.minFilter=Cn,this.wrapR=Pi,this.generateMipmaps=!1,this.flipY=!1,this.unpackAlignment=1,this.layerUpdates=new Set}addLayerUpdate(t){this.layerUpdates.add(t)}clearLayerUpdates(){this.layerUpdates.clear()}}class bT extends us{constructor(t=1,e=1,n=1,i={}){super(t,e,i),this.isWebGLArrayRenderTarget=!0,this.depth=n,this.texture=new ef(null,t,e,n),this._setTextureOptions(i),this.texture.isRenderTargetTexture=!0}}class nf extends on{constructor(t=null,e=1,n=1,i=1){super(null),this.isData3DTexture=!0,this.image={data:t,width:e,height:n,depth:i},this.magFilter=Cn,this.minFilter=Cn,this.wrapR=Pi,this.generateMipmaps=!1,this.flipY=!1,this.unpackAlignment=1}}class ET extends us{constructor(t=1,e=1,n=1,i={}){super(t,e,i),this.isWebGL3DRenderTarget=!0,this.depth=n,this.texture=new nf(null,t,e,n),this._setTextureOptions(i),this.texture.isRenderTargetTexture=!0}}class Gn{constructor(t=new I(1/0,1/0,1/0),e=new I(-1/0,-1/0,-1/0)){this.isBox3=!0,this.min=t,this.max=e}set(t,e){return this.min.copy(t),this.max.copy(e),this}setFromArray(t){this.makeEmpty();for(let e=0,n=t.length;e<n;e+=3)this.expandByPoint(ki.fromArray(t,e));return this}setFromBufferAttribute(t){this.makeEmpty();for(let e=0,n=t.count;e<n;e++)this.expandByPoint(ki.fromBufferAttribute(t,e));return this}setFromPoints(t){this.makeEmpty();for(let e=0,n=t.length;e<n;e++)this.expandByPoint(t[e]);return this}setFromCenterAndSize(t,e){const n=ki.copy(e).multiplyScalar(.5);return this.min.copy(t).sub(n),this.max.copy(t).add(n),this}setFromObject(t,e=!1){return this.makeEmpty(),this.expandByObject(t,e)}clone(){return new this.constructor().copy(this)}copy(t){return this.min.copy(t.min),this.max.copy(t.max),this}makeEmpty(){return this.min.x=this.min.y=this.min.z=1/0,this.max.x=this.max.y=this.max.z=-1/0,this}isEmpty(){return this.max.x<this.min.x||this.max.y<this.min.y||this.max.z<this.min.z}getCenter(t){return this.isEmpty()?t.set(0,0,0):t.addVectors(this.min,this.max).multiplyScalar(.5)}getSize(t){return this.isEmpty()?t.set(0,0,0):t.subVectors(this.max,this.min)}expandByPoint(t){return this.min.min(t),this.max.max(t),this}expandByVector(t){return this.min.sub(t),this.max.add(t),this}expandByScalar(t){return this.min.addScalar(-t),this.max.addScalar(t),this}expandByObject(t,e=!1){t.updateWorldMatrix(!1,!1);const n=t.geometry;if(n!==void 0){const o=n.getAttribute("position");if(e===!0&&o!==void 0&&t.isInstancedMesh!==!0)for(let l=0,c=o.count;l<c;l++)t.isMesh===!0?t.getVertexPosition(l,ki):ki.fromBufferAttribute(o,l),ki.applyMatrix4(t.matrixWorld),this.expandByPoint(ki);else t.boundingBox!==void 0?(t.boundingBox===null&&t.computeBoundingBox(),tu.copy(t.boundingBox)):(n.boundingBox===null&&n.computeBoundingBox(),tu.copy(n.boundingBox)),tu.applyMatrix4(t.matrixWorld),this.union(tu)}const i=t.children;for(let o=0,l=i.length;o<l;o++)this.expandByObject(i[o],e);return this}containsPoint(t){return t.x>=this.min.x&&t.x<=this.max.x&&t.y>=this.min.y&&t.y<=this.max.y&&t.z>=this.min.z&&t.z<=this.max.z}containsBox(t){return this.min.x<=t.min.x&&t.max.x<=this.max.x&&this.min.y<=t.min.y&&t.max.y<=this.max.y&&this.min.z<=t.min.z&&t.max.z<=this.max.z}getParameter(t,e){return e.set((t.x-this.min.x)/(this.max.x-this.min.x),(t.y-this.min.y)/(this.max.y-this.min.y),(t.z-this.min.z)/(this.max.z-this.min.z))}intersectsBox(t){return t.max.x>=this.min.x&&t.min.x<=this.max.x&&t.max.y>=this.min.y&&t.min.y<=this.max.y&&t.max.z>=this.min.z&&t.min.z<=this.max.z}intersectsSphere(t){return this.clampPoint(t.center,ki),ki.distanceToSquared(t.center)<=t.radius*t.radius}intersectsPlane(t){let e,n;return t.normal.x>0?(e=t.normal.x*this.min.x,n=t.normal.x*this.max.x):(e=t.normal.x*this.max.x,n=t.normal.x*this.min.x),t.normal.y>0?(e+=t.normal.y*this.min.y,n+=t.normal.y*this.max.y):(e+=t.normal.y*this.max.y,n+=t.normal.y*this.min.y),t.normal.z>0?(e+=t.normal.z*this.min.z,n+=t.normal.z*this.max.z):(e+=t.normal.z*this.max.z,n+=t.normal.z*this.min.z),e<=-t.constant&&n>=-t.constant}intersectsTriangle(t){if(this.isEmpty())return!1;this.getCenter(vl),eu.subVectors(this.max,vl),Kr.subVectors(t.a,vl),Jr.subVectors(t.b,vl),Qr.subVectors(t.c,vl),sa.subVectors(Jr,Kr),aa.subVectors(Qr,Jr),Ga.subVectors(Kr,Qr);let e=[0,-sa.z,sa.y,0,-aa.z,aa.y,0,-Ga.z,Ga.y,sa.z,0,-sa.x,aa.z,0,-aa.x,Ga.z,0,-Ga.x,-sa.y,sa.x,0,-aa.y,aa.x,0,-Ga.y,Ga.x,0];return!tp(e,Kr,Jr,Qr,eu)||(e=[1,0,0,0,1,0,0,0,1],!tp(e,Kr,Jr,Qr,eu))?!1:(nu.crossVectors(sa,aa),e=[nu.x,nu.y,nu.z],tp(e,Kr,Jr,Qr,eu))}clampPoint(t,e){return e.copy(t).clamp(this.min,this.max)}distanceToPoint(t){return this.clampPoint(t,ki).distanceTo(t)}getBoundingSphere(t){return this.isEmpty()?t.makeEmpty():(this.getCenter(t.center),t.radius=this.getSize(ki).length()*.5),t}intersect(t){return this.min.max(t.min),this.max.min(t.max),this.isEmpty()&&this.makeEmpty(),this}union(t){return this.min.min(t.min),this.max.max(t.max),this}applyMatrix4(t){return this.isEmpty()?this:(ws[0].set(this.min.x,this.min.y,this.min.z).applyMatrix4(t),ws[1].set(this.min.x,this.min.y,this.max.z).applyMatrix4(t),ws[2].set(this.min.x,this.max.y,this.min.z).applyMatrix4(t),ws[3].set(this.min.x,this.max.y,this.max.z).applyMatrix4(t),ws[4].set(this.max.x,this.min.y,this.min.z).applyMatrix4(t),ws[5].set(this.max.x,this.min.y,this.max.z).applyMatrix4(t),ws[6].set(this.max.x,this.max.y,this.min.z).applyMatrix4(t),ws[7].set(this.max.x,this.max.y,this.max.z).applyMatrix4(t),this.setFromPoints(ws),this)}translate(t){return this.min.add(t),this.max.add(t),this}equals(t){return t.min.equals(this.min)&&t.max.equals(this.max)}toJSON(){return{min:this.min.toArray(),max:this.max.toArray()}}fromJSON(t){return this.min.fromArray(t.min),this.max.fromArray(t.max),this}}const ws=[new I,new I,new I,new I,new I,new I,new I,new I],ki=new I,tu=new Gn,Kr=new I,Jr=new I,Qr=new I,sa=new I,aa=new I,Ga=new I,vl=new I,eu=new I,nu=new I,ka=new I;function tp(s,t,e,n,i){for(let o=0,l=s.length-3;o<=l;o+=3){ka.fromArray(s,o);const c=i.x*Math.abs(ka.x)+i.y*Math.abs(ka.y)+i.z*Math.abs(ka.z),h=t.dot(ka),f=e.dot(ka),p=n.dot(ka);if(Math.max(-Math.max(h,f,p),Math.min(h,f,p))>c)return!1}return!0}const TT=new Gn,_l=new I,ep=new I;let Rn=class{constructor(t=new I,e=-1){this.isSphere=!0,this.center=t,this.radius=e}set(t,e){return this.center.copy(t),this.radius=e,this}setFromPoints(t,e){const n=this.center;e!==void 0?n.copy(e):TT.setFromPoints(t).getCenter(n);let i=0;for(let o=0,l=t.length;o<l;o++)i=Math.max(i,n.distanceToSquared(t[o]));return this.radius=Math.sqrt(i),this}copy(t){return this.center.copy(t.center),this.radius=t.radius,this}isEmpty(){return this.radius<0}makeEmpty(){return this.center.set(0,0,0),this.radius=-1,this}containsPoint(t){return t.distanceToSquared(this.center)<=this.radius*this.radius}distanceToPoint(t){return t.distanceTo(this.center)-this.radius}intersectsSphere(t){const e=this.radius+t.radius;return t.center.distanceToSquared(this.center)<=e*e}intersectsBox(t){return t.intersectsSphere(this)}intersectsPlane(t){return Math.abs(t.distanceToPoint(this.center))<=this.radius}clampPoint(t,e){const n=this.center.distanceToSquared(t);return e.copy(t),n>this.radius*this.radius&&(e.sub(this.center).normalize(),e.multiplyScalar(this.radius).add(this.center)),e}getBoundingBox(t){return this.isEmpty()?(t.makeEmpty(),t):(t.set(this.center,this.center),t.expandByScalar(this.radius),t)}applyMatrix4(t){return this.center.applyMatrix4(t),this.radius=this.radius*t.getMaxScaleOnAxis(),this}translate(t){return this.center.add(t),this}expandByPoint(t){if(this.isEmpty())return this.center.copy(t),this.radius=0,this;_l.subVectors(t,this.center);const e=_l.lengthSq();if(e>this.radius*this.radius){const n=Math.sqrt(e),i=(n-this.radius)*.5;this.center.addScaledVector(_l,i/n),this.radius+=i}return this}union(t){return t.isEmpty()?this:this.isEmpty()?(this.copy(t),this):(this.center.equals(t.center)===!0?this.radius=Math.max(this.radius,t.radius):(ep.subVectors(t.center,this.center).setLength(t.radius),this.expandByPoint(_l.copy(t.center).add(ep)),this.expandByPoint(_l.copy(t.center).sub(ep))),this)}equals(t){return t.center.equals(this.center)&&t.radius===this.radius}clone(){return new this.constructor().copy(this)}toJSON(){return{radius:this.radius,center:this.center.toArray()}}fromJSON(t){return this.radius=t.radius,this.center.fromArray(t.center),this}};const Cs=new I,np=new I,iu=new I,ra=new I,ip=new I,su=new I,sp=new I;class yr{constructor(t=new I,e=new I(0,0,-1)){this.origin=t,this.direction=e}set(t,e){return this.origin.copy(t),this.direction.copy(e),this}copy(t){return this.origin.copy(t.origin),this.direction.copy(t.direction),this}at(t,e){return e.copy(this.origin).addScaledVector(this.direction,t)}lookAt(t){return this.direction.copy(t).sub(this.origin).normalize(),this}recast(t){return this.origin.copy(this.at(t,Cs)),this}closestPointToPoint(t,e){e.subVectors(t,this.origin);const n=e.dot(this.direction);return n<0?e.copy(this.origin):e.copy(this.origin).addScaledVector(this.direction,n)}distanceToPoint(t){return Math.sqrt(this.distanceSqToPoint(t))}distanceSqToPoint(t){const e=Cs.subVectors(t,this.origin).dot(this.direction);return e<0?this.origin.distanceToSquared(t):(Cs.copy(this.origin).addScaledVector(this.direction,e),Cs.distanceToSquared(t))}distanceSqToSegment(t,e,n,i){np.copy(t).add(e).multiplyScalar(.5),iu.copy(e).sub(t).normalize(),ra.copy(this.origin).sub(np);const o=t.distanceTo(e)*.5,l=-this.direction.dot(iu),c=ra.dot(this.direction),h=-ra.dot(iu),f=ra.lengthSq(),p=Math.abs(1-l*l);let m,g,v,x;if(p>0)if(m=l*h-c,g=l*c-h,x=o*p,m>=0)if(g>=-x)if(g<=x){const b=1/p;m*=b,g*=b,v=m*(m+l*g+2*c)+g*(l*m+g+2*h)+f}else g=o,m=Math.max(0,-(l*g+c)),v=-m*m+g*(g+2*h)+f;else g=-o,m=Math.max(0,-(l*g+c)),v=-m*m+g*(g+2*h)+f;else g<=-x?(m=Math.max(0,-(-l*o+c)),g=m>0?-o:Math.min(Math.max(-o,-h),o),v=-m*m+g*(g+2*h)+f):g<=x?(m=0,g=Math.min(Math.max(-o,-h),o),v=g*(g+2*h)+f):(m=Math.max(0,-(l*o+c)),g=m>0?o:Math.min(Math.max(-o,-h),o),v=-m*m+g*(g+2*h)+f);else g=l>0?-o:o,m=Math.max(0,-(l*g+c)),v=-m*m+g*(g+2*h)+f;return n&&n.copy(this.origin).addScaledVector(this.direction,m),i&&i.copy(np).addScaledVector(iu,g),v}intersectSphere(t,e){Cs.subVectors(t.center,this.origin);const n=Cs.dot(this.direction),i=Cs.dot(Cs)-n*n,o=t.radius*t.radius;if(i>o)return null;const l=Math.sqrt(o-i),c=n-l,h=n+l;return h<0?null:c<0?this.at(h,e):this.at(c,e)}intersectsSphere(t){return t.radius<0?!1:this.distanceSqToPoint(t.center)<=t.radius*t.radius}distanceToPlane(t){const e=t.normal.dot(this.direction);if(e===0)return t.distanceToPoint(this.origin)===0?0:null;const n=-(this.origin.dot(t.normal)+t.constant)/e;return n>=0?n:null}intersectPlane(t,e){const n=this.distanceToPlane(t);return n===null?null:this.at(n,e)}intersectsPlane(t){const e=t.distanceToPoint(this.origin);return e===0||t.normal.dot(this.direction)*e<0}intersectBox(t,e){let n,i,o,l,c,h;const f=1/this.direction.x,p=1/this.direction.y,m=1/this.direction.z,g=this.origin;return f>=0?(n=(t.min.x-g.x)*f,i=(t.max.x-g.x)*f):(n=(t.max.x-g.x)*f,i=(t.min.x-g.x)*f),p>=0?(o=(t.min.y-g.y)*p,l=(t.max.y-g.y)*p):(o=(t.max.y-g.y)*p,l=(t.min.y-g.y)*p),n>l||o>i||((o>n||isNaN(n))&&(n=o),(l<i||isNaN(i))&&(i=l),m>=0?(c=(t.min.z-g.z)*m,h=(t.max.z-g.z)*m):(c=(t.max.z-g.z)*m,h=(t.min.z-g.z)*m),n>h||c>i)||((c>n||n!==n)&&(n=c),(h<i||i!==i)&&(i=h),i<0)?null:this.at(n>=0?n:i,e)}intersectsBox(t){return this.intersectBox(t,Cs)!==null}intersectTriangle(t,e,n,i,o){ip.subVectors(e,t),su.subVectors(n,t),sp.crossVectors(ip,su);let l=this.direction.dot(sp),c;if(l>0){if(i)return null;c=1}else if(l<0)c=-1,l=-l;else return null;ra.subVectors(this.origin,t);const h=c*this.direction.dot(su.crossVectors(ra,su));if(h<0)return null;const f=c*this.direction.dot(ip.cross(ra));if(f<0||h+f>l)return null;const p=-c*ra.dot(sp);return p<0?null:this.at(p/l,o)}applyMatrix4(t){return this.origin.applyMatrix4(t),this.direction.transformDirection(t),this}equals(t){return t.origin.equals(this.origin)&&t.direction.equals(this.direction)}clone(){return new this.constructor().copy(this)}}class pe{constructor(t,e,n,i,o,l,c,h,f,p,m,g,v,x,b,S){pe.prototype.isMatrix4=!0,this.elements=[1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1],t!==void 0&&this.set(t,e,n,i,o,l,c,h,f,p,m,g,v,x,b,S)}set(t,e,n,i,o,l,c,h,f,p,m,g,v,x,b,S){const _=this.elements;return _[0]=t,_[4]=e,_[8]=n,_[12]=i,_[1]=o,_[5]=l,_[9]=c,_[13]=h,_[2]=f,_[6]=p,_[10]=m,_[14]=g,_[3]=v,_[7]=x,_[11]=b,_[15]=S,this}identity(){return this.set(1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1),this}clone(){return new pe().fromArray(this.elements)}copy(t){const e=this.elements,n=t.elements;return e[0]=n[0],e[1]=n[1],e[2]=n[2],e[3]=n[3],e[4]=n[4],e[5]=n[5],e[6]=n[6],e[7]=n[7],e[8]=n[8],e[9]=n[9],e[10]=n[10],e[11]=n[11],e[12]=n[12],e[13]=n[13],e[14]=n[14],e[15]=n[15],this}copyPosition(t){const e=this.elements,n=t.elements;return e[12]=n[12],e[13]=n[13],e[14]=n[14],this}setFromMatrix3(t){const e=t.elements;return this.set(e[0],e[3],e[6],0,e[1],e[4],e[7],0,e[2],e[5],e[8],0,0,0,0,1),this}extractBasis(t,e,n){return t.setFromMatrixColumn(this,0),e.setFromMatrixColumn(this,1),n.setFromMatrixColumn(this,2),this}makeBasis(t,e,n){return this.set(t.x,e.x,n.x,0,t.y,e.y,n.y,0,t.z,e.z,n.z,0,0,0,0,1),this}extractRotation(t){const e=this.elements,n=t.elements,i=1/$r.setFromMatrixColumn(t,0).length(),o=1/$r.setFromMatrixColumn(t,1).length(),l=1/$r.setFromMatrixColumn(t,2).length();return e[0]=n[0]*i,e[1]=n[1]*i,e[2]=n[2]*i,e[3]=0,e[4]=n[4]*o,e[5]=n[5]*o,e[6]=n[6]*o,e[7]=0,e[8]=n[8]*l,e[9]=n[9]*l,e[10]=n[10]*l,e[11]=0,e[12]=0,e[13]=0,e[14]=0,e[15]=1,this}makeRotationFromEuler(t){const e=this.elements,n=t.x,i=t.y,o=t.z,l=Math.cos(n),c=Math.sin(n),h=Math.cos(i),f=Math.sin(i),p=Math.cos(o),m=Math.sin(o);if(t.order==="XYZ"){const g=l*p,v=l*m,x=c*p,b=c*m;e[0]=h*p,e[4]=-h*m,e[8]=f,e[1]=v+x*f,e[5]=g-b*f,e[9]=-c*h,e[2]=b-g*f,e[6]=x+v*f,e[10]=l*h}else if(t.order==="YXZ"){const g=h*p,v=h*m,x=f*p,b=f*m;e[0]=g+b*c,e[4]=x*c-v,e[8]=l*f,e[1]=l*m,e[5]=l*p,e[9]=-c,e[2]=v*c-x,e[6]=b+g*c,e[10]=l*h}else if(t.order==="ZXY"){const g=h*p,v=h*m,x=f*p,b=f*m;e[0]=g-b*c,e[4]=-l*m,e[8]=x+v*c,e[1]=v+x*c,e[5]=l*p,e[9]=b-g*c,e[2]=-l*f,e[6]=c,e[10]=l*h}else if(t.order==="ZYX"){const g=l*p,v=l*m,x=c*p,b=c*m;e[0]=h*p,e[4]=x*f-v,e[8]=g*f+b,e[1]=h*m,e[5]=b*f+g,e[9]=v*f-x,e[2]=-f,e[6]=c*h,e[10]=l*h}else if(t.order==="YZX"){const g=l*h,v=l*f,x=c*h,b=c*f;e[0]=h*p,e[4]=b-g*m,e[8]=x*m+v,e[1]=m,e[5]=l*p,e[9]=-c*p,e[2]=-f*p,e[6]=v*m+x,e[10]=g-b*m}else if(t.order==="XZY"){const g=l*h,v=l*f,x=c*h,b=c*f;e[0]=h*p,e[4]=-m,e[8]=f*p,e[1]=g*m+b,e[5]=l*p,e[9]=v*m-x,e[2]=x*m-v,e[6]=c*p,e[10]=b*m+g}return e[3]=0,e[7]=0,e[11]=0,e[12]=0,e[13]=0,e[14]=0,e[15]=1,this}makeRotationFromQuaternion(t){return this.compose(AT,t,wT)}lookAt(t,e,n){const i=this.elements;return yi.subVectors(t,e),yi.lengthSq()===0&&(yi.z=1),yi.normalize(),oa.crossVectors(n,yi),oa.lengthSq()===0&&(Math.abs(n.z)===1?yi.x+=1e-4:yi.z+=1e-4,yi.normalize(),oa.crossVectors(n,yi)),oa.normalize(),au.crossVectors(yi,oa),i[0]=oa.x,i[4]=au.x,i[8]=yi.x,i[1]=oa.y,i[5]=au.y,i[9]=yi.y,i[2]=oa.z,i[6]=au.z,i[10]=yi.z,this}multiply(t){return this.multiplyMatrices(this,t)}premultiply(t){return this.multiplyMatrices(t,this)}multiplyMatrices(t,e){const n=t.elements,i=e.elements,o=this.elements,l=n[0],c=n[4],h=n[8],f=n[12],p=n[1],m=n[5],g=n[9],v=n[13],x=n[2],b=n[6],S=n[10],_=n[14],E=n[3],A=n[7],T=n[11],U=n[15],D=i[0],P=i[4],O=i[8],C=i[12],w=i[1],B=i[5],tt=i[9],X=i[13],Z=i[2],ot=i[6],k=i[10],et=i[14],q=i[3],ct=i[7],vt=i[11],xt=i[15];return o[0]=l*D+c*w+h*Z+f*q,o[4]=l*P+c*B+h*ot+f*ct,o[8]=l*O+c*tt+h*k+f*vt,o[12]=l*C+c*X+h*et+f*xt,o[1]=p*D+m*w+g*Z+v*q,o[5]=p*P+m*B+g*ot+v*ct,o[9]=p*O+m*tt+g*k+v*vt,o[13]=p*C+m*X+g*et+v*xt,o[2]=x*D+b*w+S*Z+_*q,o[6]=x*P+b*B+S*ot+_*ct,o[10]=x*O+b*tt+S*k+_*vt,o[14]=x*C+b*X+S*et+_*xt,o[3]=E*D+A*w+T*Z+U*q,o[7]=E*P+A*B+T*ot+U*ct,o[11]=E*O+A*tt+T*k+U*vt,o[15]=E*C+A*X+T*et+U*xt,this}multiplyScalar(t){const e=this.elements;return e[0]*=t,e[4]*=t,e[8]*=t,e[12]*=t,e[1]*=t,e[5]*=t,e[9]*=t,e[13]*=t,e[2]*=t,e[6]*=t,e[10]*=t,e[14]*=t,e[3]*=t,e[7]*=t,e[11]*=t,e[15]*=t,this}determinant(){const t=this.elements,e=t[0],n=t[4],i=t[8],o=t[12],l=t[1],c=t[5],h=t[9],f=t[13],p=t[2],m=t[6],g=t[10],v=t[14],x=t[3],b=t[7],S=t[11],_=t[15];return x*(+o*h*m-i*f*m-o*c*g+n*f*g+i*c*v-n*h*v)+b*(+e*h*v-e*f*g+o*l*g-i*l*v+i*f*p-o*h*p)+S*(+e*f*m-e*c*v-o*l*m+n*l*v+o*c*p-n*f*p)+_*(-i*c*p-e*h*m+e*c*g+i*l*m-n*l*g+n*h*p)}transpose(){const t=this.elements;let e;return e=t[1],t[1]=t[4],t[4]=e,e=t[2],t[2]=t[8],t[8]=e,e=t[6],t[6]=t[9],t[9]=e,e=t[3],t[3]=t[12],t[12]=e,e=t[7],t[7]=t[13],t[13]=e,e=t[11],t[11]=t[14],t[14]=e,this}setPosition(t,e,n){const i=this.elements;return t.isVector3?(i[12]=t.x,i[13]=t.y,i[14]=t.z):(i[12]=t,i[13]=e,i[14]=n),this}invert(){const t=this.elements,e=t[0],n=t[1],i=t[2],o=t[3],l=t[4],c=t[5],h=t[6],f=t[7],p=t[8],m=t[9],g=t[10],v=t[11],x=t[12],b=t[13],S=t[14],_=t[15],E=m*S*f-b*g*f+b*h*v-c*S*v-m*h*_+c*g*_,A=x*g*f-p*S*f-x*h*v+l*S*v+p*h*_-l*g*_,T=p*b*f-x*m*f+x*c*v-l*b*v-p*c*_+l*m*_,U=x*m*h-p*b*h-x*c*g+l*b*g+p*c*S-l*m*S,D=e*E+n*A+i*T+o*U;if(D===0)return this.set(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0);const P=1/D;return t[0]=E*P,t[1]=(b*g*o-m*S*o-b*i*v+n*S*v+m*i*_-n*g*_)*P,t[2]=(c*S*o-b*h*o+b*i*f-n*S*f-c*i*_+n*h*_)*P,t[3]=(m*h*o-c*g*o-m*i*f+n*g*f+c*i*v-n*h*v)*P,t[4]=A*P,t[5]=(p*S*o-x*g*o+x*i*v-e*S*v-p*i*_+e*g*_)*P,t[6]=(x*h*o-l*S*o-x*i*f+e*S*f+l*i*_-e*h*_)*P,t[7]=(l*g*o-p*h*o+p*i*f-e*g*f-l*i*v+e*h*v)*P,t[8]=T*P,t[9]=(x*m*o-p*b*o-x*n*v+e*b*v+p*n*_-e*m*_)*P,t[10]=(l*b*o-x*c*o+x*n*f-e*b*f-l*n*_+e*c*_)*P,t[11]=(p*c*o-l*m*o-p*n*f+e*m*f+l*n*v-e*c*v)*P,t[12]=U*P,t[13]=(p*b*i-x*m*i+x*n*g-e*b*g-p*n*S+e*m*S)*P,t[14]=(x*c*i-l*b*i-x*n*h+e*b*h+l*n*S-e*c*S)*P,t[15]=(l*m*i-p*c*i+p*n*h-e*m*h-l*n*g+e*c*g)*P,this}scale(t){const e=this.elements,n=t.x,i=t.y,o=t.z;return e[0]*=n,e[4]*=i,e[8]*=o,e[1]*=n,e[5]*=i,e[9]*=o,e[2]*=n,e[6]*=i,e[10]*=o,e[3]*=n,e[7]*=i,e[11]*=o,this}getMaxScaleOnAxis(){const t=this.elements,e=t[0]*t[0]+t[1]*t[1]+t[2]*t[2],n=t[4]*t[4]+t[5]*t[5]+t[6]*t[6],i=t[8]*t[8]+t[9]*t[9]+t[10]*t[10];return Math.sqrt(Math.max(e,n,i))}makeTranslation(t,e,n){return t.isVector3?this.set(1,0,0,t.x,0,1,0,t.y,0,0,1,t.z,0,0,0,1):this.set(1,0,0,t,0,1,0,e,0,0,1,n,0,0,0,1),this}makeRotationX(t){const e=Math.cos(t),n=Math.sin(t);return this.set(1,0,0,0,0,e,-n,0,0,n,e,0,0,0,0,1),this}makeRotationY(t){const e=Math.cos(t),n=Math.sin(t);return this.set(e,0,n,0,0,1,0,0,-n,0,e,0,0,0,0,1),this}makeRotationZ(t){const e=Math.cos(t),n=Math.sin(t);return this.set(e,-n,0,0,n,e,0,0,0,0,1,0,0,0,0,1),this}makeRotationAxis(t,e){const n=Math.cos(e),i=Math.sin(e),o=1-n,l=t.x,c=t.y,h=t.z,f=o*l,p=o*c;return this.set(f*l+n,f*c-i*h,f*h+i*c,0,f*c+i*h,p*c+n,p*h-i*l,0,f*h-i*c,p*h+i*l,o*h*h+n,0,0,0,0,1),this}makeScale(t,e,n){return this.set(t,0,0,0,0,e,0,0,0,0,n,0,0,0,0,1),this}makeShear(t,e,n,i,o,l){return this.set(1,n,o,0,t,1,l,0,e,i,1,0,0,0,0,1),this}compose(t,e,n){const i=this.elements,o=e._x,l=e._y,c=e._z,h=e._w,f=o+o,p=l+l,m=c+c,g=o*f,v=o*p,x=o*m,b=l*p,S=l*m,_=c*m,E=h*f,A=h*p,T=h*m,U=n.x,D=n.y,P=n.z;return i[0]=(1-(b+_))*U,i[1]=(v+T)*U,i[2]=(x-A)*U,i[3]=0,i[4]=(v-T)*D,i[5]=(1-(g+_))*D,i[6]=(S+E)*D,i[7]=0,i[8]=(x+A)*P,i[9]=(S-E)*P,i[10]=(1-(g+b))*P,i[11]=0,i[12]=t.x,i[13]=t.y,i[14]=t.z,i[15]=1,this}decompose(t,e,n){const i=this.elements;let o=$r.set(i[0],i[1],i[2]).length();const l=$r.set(i[4],i[5],i[6]).length(),c=$r.set(i[8],i[9],i[10]).length();this.determinant()<0&&(o=-o),t.x=i[12],t.y=i[13],t.z=i[14],Wi.copy(this);const f=1/o,p=1/l,m=1/c;return Wi.elements[0]*=f,Wi.elements[1]*=f,Wi.elements[2]*=f,Wi.elements[4]*=p,Wi.elements[5]*=p,Wi.elements[6]*=p,Wi.elements[8]*=m,Wi.elements[9]*=m,Wi.elements[10]*=m,e.setFromRotationMatrix(Wi),n.x=o,n.y=l,n.z=c,this}makePerspective(t,e,n,i,o,l,c=Si,h=!1){const f=this.elements,p=2*o/(e-t),m=2*o/(n-i),g=(e+t)/(e-t),v=(n+i)/(n-i);let x,b;if(h)x=o/(l-o),b=l*o/(l-o);else if(c===Si)x=-(l+o)/(l-o),b=-2*l*o/(l-o);else if(c===Do)x=-l/(l-o),b=-l*o/(l-o);else throw new Error("THREE.Matrix4.makePerspective(): Invalid coordinate system: "+c);return f[0]=p,f[4]=0,f[8]=g,f[12]=0,f[1]=0,f[5]=m,f[9]=v,f[13]=0,f[2]=0,f[6]=0,f[10]=x,f[14]=b,f[3]=0,f[7]=0,f[11]=-1,f[15]=0,this}makeOrthographic(t,e,n,i,o,l,c=Si,h=!1){const f=this.elements,p=2/(e-t),m=2/(n-i),g=-(e+t)/(e-t),v=-(n+i)/(n-i);let x,b;if(h)x=1/(l-o),b=l/(l-o);else if(c===Si)x=-2/(l-o),b=-(l+o)/(l-o);else if(c===Do)x=-1/(l-o),b=-o/(l-o);else throw new Error("THREE.Matrix4.makeOrthographic(): Invalid coordinate system: "+c);return f[0]=p,f[4]=0,f[8]=0,f[12]=g,f[1]=0,f[5]=m,f[9]=0,f[13]=v,f[2]=0,f[6]=0,f[10]=x,f[14]=b,f[3]=0,f[7]=0,f[11]=0,f[15]=1,this}equals(t){const e=this.elements,n=t.elements;for(let i=0;i<16;i++)if(e[i]!==n[i])return!1;return!0}fromArray(t,e=0){for(let n=0;n<16;n++)this.elements[n]=t[n+e];return this}toArray(t=[],e=0){const n=this.elements;return t[e]=n[0],t[e+1]=n[1],t[e+2]=n[2],t[e+3]=n[3],t[e+4]=n[4],t[e+5]=n[5],t[e+6]=n[6],t[e+7]=n[7],t[e+8]=n[8],t[e+9]=n[9],t[e+10]=n[10],t[e+11]=n[11],t[e+12]=n[12],t[e+13]=n[13],t[e+14]=n[14],t[e+15]=n[15],t}}const $r=new I,Wi=new pe,AT=new I(0,0,0),wT=new I(1,1,1),oa=new I,au=new I,yi=new I,Iv=new pe,Ov=new Vn;class bi{constructor(t=0,e=0,n=0,i=bi.DEFAULT_ORDER){this.isEuler=!0,this._x=t,this._y=e,this._z=n,this._order=i}get x(){return this._x}set x(t){this._x=t,this._onChangeCallback()}get y(){return this._y}set y(t){this._y=t,this._onChangeCallback()}get z(){return this._z}set z(t){this._z=t,this._onChangeCallback()}get order(){return this._order}set order(t){this._order=t,this._onChangeCallback()}set(t,e,n,i=this._order){return this._x=t,this._y=e,this._z=n,this._order=i,this._onChangeCallback(),this}clone(){return new this.constructor(this._x,this._y,this._z,this._order)}copy(t){return this._x=t._x,this._y=t._y,this._z=t._z,this._order=t._order,this._onChangeCallback(),this}setFromRotationMatrix(t,e=this._order,n=!0){const i=t.elements,o=i[0],l=i[4],c=i[8],h=i[1],f=i[5],p=i[9],m=i[2],g=i[6],v=i[10];switch(e){case"XYZ":this._y=Math.asin(de(c,-1,1)),Math.abs(c)<.9999999?(this._x=Math.atan2(-p,v),this._z=Math.atan2(-l,o)):(this._x=Math.atan2(g,f),this._z=0);break;case"YXZ":this._x=Math.asin(-de(p,-1,1)),Math.abs(p)<.9999999?(this._y=Math.atan2(c,v),this._z=Math.atan2(h,f)):(this._y=Math.atan2(-m,o),this._z=0);break;case"ZXY":this._x=Math.asin(de(g,-1,1)),Math.abs(g)<.9999999?(this._y=Math.atan2(-m,v),this._z=Math.atan2(-l,f)):(this._y=0,this._z=Math.atan2(h,o));break;case"ZYX":this._y=Math.asin(-de(m,-1,1)),Math.abs(m)<.9999999?(this._x=Math.atan2(g,v),this._z=Math.atan2(h,o)):(this._x=0,this._z=Math.atan2(-l,f));break;case"YZX":this._z=Math.asin(de(h,-1,1)),Math.abs(h)<.9999999?(this._x=Math.atan2(-p,f),this._y=Math.atan2(-m,o)):(this._x=0,this._y=Math.atan2(c,v));break;case"XZY":this._z=Math.asin(-de(l,-1,1)),Math.abs(l)<.9999999?(this._x=Math.atan2(g,f),this._y=Math.atan2(c,o)):(this._x=Math.atan2(-p,v),this._y=0);break;default:console.warn("THREE.Euler: .setFromRotationMatrix() encountered an unknown order: "+e)}return this._order=e,n===!0&&this._onChangeCallback(),this}setFromQuaternion(t,e,n){return Iv.makeRotationFromQuaternion(t),this.setFromRotationMatrix(Iv,e,n)}setFromVector3(t,e=this._order){return this.set(t.x,t.y,t.z,e)}reorder(t){return Ov.setFromEuler(this),this.setFromQuaternion(Ov,t)}equals(t){return t._x===this._x&&t._y===this._y&&t._z===this._z&&t._order===this._order}fromArray(t){return this._x=t[0],this._y=t[1],this._z=t[2],t[3]!==void 0&&(this._order=t[3]),this._onChangeCallback(),this}toArray(t=[],e=0){return t[e]=this._x,t[e+1]=this._y,t[e+2]=this._z,t[e+3]=this._order,t}_onChange(t){return this._onChangeCallback=t,this}_onChangeCallback(){}*[Symbol.iterator](){yield this._x,yield this._y,yield this._z,yield this._order}}bi.DEFAULT_ORDER="XYZ";class No{constructor(){this.mask=1}set(t){this.mask=(1<<t|0)>>>0}enable(t){this.mask|=1<<t|0}enableAll(){this.mask=-1}toggle(t){this.mask^=1<<t|0}disable(t){this.mask&=~(1<<t|0)}disableAll(){this.mask=0}test(t){return(this.mask&t.mask)!==0}isEnabled(t){return(this.mask&(1<<t|0))!==0}}let CT=0;const Bv=new I,to=new Vn,Rs=new pe,ru=new I,yl=new I,RT=new I,DT=new Vn,zv=new I(1,0,0),Fv=new I(0,1,0),Hv=new I(0,0,1),Vv={type:"added"},UT={type:"removed"},eo={type:"childadded",child:null},ap={type:"childremoved",child:null};class Le extends hs{constructor(){super(),this.isObject3D=!0,Object.defineProperty(this,"id",{value:CT++}),this.uuid=Mi(),this.name="",this.type="Object3D",this.parent=null,this.children=[],this.up=Le.DEFAULT_UP.clone();const t=new I,e=new bi,n=new Vn,i=new I(1,1,1);function o(){n.setFromEuler(e,!1)}function l(){e.setFromQuaternion(n,void 0,!1)}e._onChange(o),n._onChange(l),Object.defineProperties(this,{position:{configurable:!0,enumerable:!0,value:t},rotation:{configurable:!0,enumerable:!0,value:e},quaternion:{configurable:!0,enumerable:!0,value:n},scale:{configurable:!0,enumerable:!0,value:i},modelViewMatrix:{value:new pe},normalMatrix:{value:new ve}}),this.matrix=new pe,this.matrixWorld=new pe,this.matrixAutoUpdate=Le.DEFAULT_MATRIX_AUTO_UPDATE,this.matrixWorldAutoUpdate=Le.DEFAULT_MATRIX_WORLD_AUTO_UPDATE,this.matrixWorldNeedsUpdate=!1,this.layers=new No,this.visible=!0,this.castShadow=!1,this.receiveShadow=!1,this.frustumCulled=!0,this.renderOrder=0,this.animations=[],this.customDepthMaterial=void 0,this.customDistanceMaterial=void 0,this.userData={}}onBeforeShadow(){}onAfterShadow(){}onBeforeRender(){}onAfterRender(){}applyMatrix4(t){this.matrixAutoUpdate&&this.updateMatrix(),this.matrix.premultiply(t),this.matrix.decompose(this.position,this.quaternion,this.scale)}applyQuaternion(t){return this.quaternion.premultiply(t),this}setRotationFromAxisAngle(t,e){this.quaternion.setFromAxisAngle(t,e)}setRotationFromEuler(t){this.quaternion.setFromEuler(t,!0)}setRotationFromMatrix(t){this.quaternion.setFromRotationMatrix(t)}setRotationFromQuaternion(t){this.quaternion.copy(t)}rotateOnAxis(t,e){return to.setFromAxisAngle(t,e),this.quaternion.multiply(to),this}rotateOnWorldAxis(t,e){return to.setFromAxisAngle(t,e),this.quaternion.premultiply(to),this}rotateX(t){return this.rotateOnAxis(zv,t)}rotateY(t){return this.rotateOnAxis(Fv,t)}rotateZ(t){return this.rotateOnAxis(Hv,t)}translateOnAxis(t,e){return Bv.copy(t).applyQuaternion(this.quaternion),this.position.add(Bv.multiplyScalar(e)),this}translateX(t){return this.translateOnAxis(zv,t)}translateY(t){return this.translateOnAxis(Fv,t)}translateZ(t){return this.translateOnAxis(Hv,t)}localToWorld(t){return this.updateWorldMatrix(!0,!1),t.applyMatrix4(this.matrixWorld)}worldToLocal(t){return this.updateWorldMatrix(!0,!1),t.applyMatrix4(Rs.copy(this.matrixWorld).invert())}lookAt(t,e,n){t.isVector3?ru.copy(t):ru.set(t,e,n);const i=this.parent;this.updateWorldMatrix(!0,!1),yl.setFromMatrixPosition(this.matrixWorld),this.isCamera||this.isLight?Rs.lookAt(yl,ru,this.up):Rs.lookAt(ru,yl,this.up),this.quaternion.setFromRotationMatrix(Rs),i&&(Rs.extractRotation(i.matrixWorld),to.setFromRotationMatrix(Rs),this.quaternion.premultiply(to.invert()))}add(t){if(arguments.length>1){for(let e=0;e<arguments.length;e++)this.add(arguments[e]);return this}return t===this?(console.error("THREE.Object3D.add: object can't be added as a child of itself.",t),this):(t&&t.isObject3D?(t.removeFromParent(),t.parent=this,this.children.push(t),t.dispatchEvent(Vv),eo.child=t,this.dispatchEvent(eo),eo.child=null):console.error("THREE.Object3D.add: object not an instance of THREE.Object3D.",t),this)}remove(t){if(arguments.length>1){for(let n=0;n<arguments.length;n++)this.remove(arguments[n]);return this}const e=this.children.indexOf(t);return e!==-1&&(t.parent=null,this.children.splice(e,1),t.dispatchEvent(UT),ap.child=t,this.dispatchEvent(ap),ap.child=null),this}removeFromParent(){const t=this.parent;return t!==null&&t.remove(this),this}clear(){return this.remove(...this.children)}attach(t){return this.updateWorldMatrix(!0,!1),Rs.copy(this.matrixWorld).invert(),t.parent!==null&&(t.parent.updateWorldMatrix(!0,!1),Rs.multiply(t.parent.matrixWorld)),t.applyMatrix4(Rs),t.removeFromParent(),t.parent=this,this.children.push(t),t.updateWorldMatrix(!1,!0),t.dispatchEvent(Vv),eo.child=t,this.dispatchEvent(eo),eo.child=null,this}getObjectById(t){return this.getObjectByProperty("id",t)}getObjectByName(t){return this.getObjectByProperty("name",t)}getObjectByProperty(t,e){if(this[t]===e)return this;for(let n=0,i=this.children.length;n<i;n++){const l=this.children[n].getObjectByProperty(t,e);if(l!==void 0)return l}}getObjectsByProperty(t,e,n=[]){this[t]===e&&n.push(this);const i=this.children;for(let o=0,l=i.length;o<l;o++)i[o].getObjectsByProperty(t,e,n);return n}getWorldPosition(t){return this.updateWorldMatrix(!0,!1),t.setFromMatrixPosition(this.matrixWorld)}getWorldQuaternion(t){return this.updateWorldMatrix(!0,!1),this.matrixWorld.decompose(yl,t,RT),t}getWorldScale(t){return this.updateWorldMatrix(!0,!1),this.matrixWorld.decompose(yl,DT,t),t}getWorldDirection(t){this.updateWorldMatrix(!0,!1);const e=this.matrixWorld.elements;return t.set(e[8],e[9],e[10]).normalize()}raycast(){}traverse(t){t(this);const e=this.children;for(let n=0,i=e.length;n<i;n++)e[n].traverse(t)}traverseVisible(t){if(this.visible===!1)return;t(this);const e=this.children;for(let n=0,i=e.length;n<i;n++)e[n].traverseVisible(t)}traverseAncestors(t){const e=this.parent;e!==null&&(t(e),e.traverseAncestors(t))}updateMatrix(){this.matrix.compose(this.position,this.quaternion,this.scale),this.matrixWorldNeedsUpdate=!0}updateMatrixWorld(t){this.matrixAutoUpdate&&this.updateMatrix(),(this.matrixWorldNeedsUpdate||t)&&(this.matrixWorldAutoUpdate===!0&&(this.parent===null?this.matrixWorld.copy(this.matrix):this.matrixWorld.multiplyMatrices(this.parent.matrixWorld,this.matrix)),this.matrixWorldNeedsUpdate=!1,t=!0);const e=this.children;for(let n=0,i=e.length;n<i;n++)e[n].updateMatrixWorld(t)}updateWorldMatrix(t,e){const n=this.parent;if(t===!0&&n!==null&&n.updateWorldMatrix(!0,!1),this.matrixAutoUpdate&&this.updateMatrix(),this.matrixWorldAutoUpdate===!0&&(this.parent===null?this.matrixWorld.copy(this.matrix):this.matrixWorld.multiplyMatrices(this.parent.matrixWorld,this.matrix)),e===!0){const i=this.children;for(let o=0,l=i.length;o<l;o++)i[o].updateWorldMatrix(!1,!0)}}toJSON(t){const e=t===void 0||typeof t=="string",n={};e&&(t={geometries:{},materials:{},textures:{},images:{},shapes:{},skeletons:{},animations:{},nodes:{}},n.metadata={version:4.7,type:"Object",generator:"Object3D.toJSON"});const i={};i.uuid=this.uuid,i.type=this.type,this.name!==""&&(i.name=this.name),this.castShadow===!0&&(i.castShadow=!0),this.receiveShadow===!0&&(i.receiveShadow=!0),this.visible===!1&&(i.visible=!1),this.frustumCulled===!1&&(i.frustumCulled=!1),this.renderOrder!==0&&(i.renderOrder=this.renderOrder),Object.keys(this.userData).length>0&&(i.userData=this.userData),i.layers=this.layers.mask,i.matrix=this.matrix.toArray(),i.up=this.up.toArray(),this.matrixAutoUpdate===!1&&(i.matrixAutoUpdate=!1),this.isInstancedMesh&&(i.type="InstancedMesh",i.count=this.count,i.instanceMatrix=this.instanceMatrix.toJSON(),this.instanceColor!==null&&(i.instanceColor=this.instanceColor.toJSON())),this.isBatchedMesh&&(i.type="BatchedMesh",i.perObjectFrustumCulled=this.perObjectFrustumCulled,i.sortObjects=this.sortObjects,i.drawRanges=this._drawRanges,i.reservedRanges=this._reservedRanges,i.geometryInfo=this._geometryInfo.map(c=>({...c,boundingBox:c.boundingBox?c.boundingBox.toJSON():void 0,boundingSphere:c.boundingSphere?c.boundingSphere.toJSON():void 0})),i.instanceInfo=this._instanceInfo.map(c=>({...c})),i.availableInstanceIds=this._availableInstanceIds.slice(),i.availableGeometryIds=this._availableGeometryIds.slice(),i.nextIndexStart=this._nextIndexStart,i.nextVertexStart=this._nextVertexStart,i.geometryCount=this._geometryCount,i.maxInstanceCount=this._maxInstanceCount,i.maxVertexCount=this._maxVertexCount,i.maxIndexCount=this._maxIndexCount,i.geometryInitialized=this._geometryInitialized,i.matricesTexture=this._matricesTexture.toJSON(t),i.indirectTexture=this._indirectTexture.toJSON(t),this._colorsTexture!==null&&(i.colorsTexture=this._colorsTexture.toJSON(t)),this.boundingSphere!==null&&(i.boundingSphere=this.boundingSphere.toJSON()),this.boundingBox!==null&&(i.boundingBox=this.boundingBox.toJSON()));function o(c,h){return c[h.uuid]===void 0&&(c[h.uuid]=h.toJSON(t)),h.uuid}if(this.isScene)this.background&&(this.background.isColor?i.background=this.background.toJSON():this.background.isTexture&&(i.background=this.background.toJSON(t).uuid)),this.environment&&this.environment.isTexture&&this.environment.isRenderTargetTexture!==!0&&(i.environment=this.environment.toJSON(t).uuid);else if(this.isMesh||this.isLine||this.isPoints){i.geometry=o(t.geometries,this.geometry);const c=this.geometry.parameters;if(c!==void 0&&c.shapes!==void 0){const h=c.shapes;if(Array.isArray(h))for(let f=0,p=h.length;f<p;f++){const m=h[f];o(t.shapes,m)}else o(t.shapes,h)}}if(this.isSkinnedMesh&&(i.bindMode=this.bindMode,i.bindMatrix=this.bindMatrix.toArray(),this.skeleton!==void 0&&(o(t.skeletons,this.skeleton),i.skeleton=this.skeleton.uuid)),this.material!==void 0)if(Array.isArray(this.material)){const c=[];for(let h=0,f=this.material.length;h<f;h++)c.push(o(t.materials,this.material[h]));i.material=c}else i.material=o(t.materials,this.material);if(this.children.length>0){i.children=[];for(let c=0;c<this.children.length;c++)i.children.push(this.children[c].toJSON(t).object)}if(this.animations.length>0){i.animations=[];for(let c=0;c<this.animations.length;c++){const h=this.animations[c];i.animations.push(o(t.animations,h))}}if(e){const c=l(t.geometries),h=l(t.materials),f=l(t.textures),p=l(t.images),m=l(t.shapes),g=l(t.skeletons),v=l(t.animations),x=l(t.nodes);c.length>0&&(n.geometries=c),h.length>0&&(n.materials=h),f.length>0&&(n.textures=f),p.length>0&&(n.images=p),m.length>0&&(n.shapes=m),g.length>0&&(n.skeletons=g),v.length>0&&(n.animations=v),x.length>0&&(n.nodes=x)}return n.object=i,n;function l(c){const h=[];for(const f in c){const p=c[f];delete p.metadata,h.push(p)}return h}}clone(t){return new this.constructor().copy(this,t)}copy(t,e=!0){if(this.name=t.name,this.up.copy(t.up),this.position.copy(t.position),this.rotation.order=t.rotation.order,this.quaternion.copy(t.quaternion),this.scale.copy(t.scale),this.matrix.copy(t.matrix),this.matrixWorld.copy(t.matrixWorld),this.matrixAutoUpdate=t.matrixAutoUpdate,this.matrixWorldAutoUpdate=t.matrixWorldAutoUpdate,this.matrixWorldNeedsUpdate=t.matrixWorldNeedsUpdate,this.layers.mask=t.layers.mask,this.visible=t.visible,this.castShadow=t.castShadow,this.receiveShadow=t.receiveShadow,this.frustumCulled=t.frustumCulled,this.renderOrder=t.renderOrder,this.animations=t.animations.slice(),this.userData=JSON.parse(JSON.stringify(t.userData)),e===!0)for(let n=0;n<t.children.length;n++){const i=t.children[n];this.add(i.clone())}return this}}Le.DEFAULT_UP=new I(0,1,0);Le.DEFAULT_MATRIX_AUTO_UPDATE=!0;Le.DEFAULT_MATRIX_WORLD_AUTO_UPDATE=!0;const Xi=new I,Ds=new I,rp=new I,Us=new I,no=new I,io=new I,Gv=new I,op=new I,lp=new I,cp=new I,up=new Ne,hp=new Ne,fp=new Ne;class ai{constructor(t=new I,e=new I,n=new I){this.a=t,this.b=e,this.c=n}static getNormal(t,e,n,i){i.subVectors(n,e),Xi.subVectors(t,e),i.cross(Xi);const o=i.lengthSq();return o>0?i.multiplyScalar(1/Math.sqrt(o)):i.set(0,0,0)}static getBarycoord(t,e,n,i,o){Xi.subVectors(i,e),Ds.subVectors(n,e),rp.subVectors(t,e);const l=Xi.dot(Xi),c=Xi.dot(Ds),h=Xi.dot(rp),f=Ds.dot(Ds),p=Ds.dot(rp),m=l*f-c*c;if(m===0)return o.set(0,0,0),null;const g=1/m,v=(f*h-c*p)*g,x=(l*p-c*h)*g;return o.set(1-v-x,x,v)}static containsPoint(t,e,n,i){return this.getBarycoord(t,e,n,i,Us)===null?!1:Us.x>=0&&Us.y>=0&&Us.x+Us.y<=1}static getInterpolation(t,e,n,i,o,l,c,h){return this.getBarycoord(t,e,n,i,Us)===null?(h.x=0,h.y=0,"z"in h&&(h.z=0),"w"in h&&(h.w=0),null):(h.setScalar(0),h.addScaledVector(o,Us.x),h.addScaledVector(l,Us.y),h.addScaledVector(c,Us.z),h)}static getInterpolatedAttribute(t,e,n,i,o,l){return up.setScalar(0),hp.setScalar(0),fp.setScalar(0),up.fromBufferAttribute(t,e),hp.fromBufferAttribute(t,n),fp.fromBufferAttribute(t,i),l.setScalar(0),l.addScaledVector(up,o.x),l.addScaledVector(hp,o.y),l.addScaledVector(fp,o.z),l}static isFrontFacing(t,e,n,i){return Xi.subVectors(n,e),Ds.subVectors(t,e),Xi.cross(Ds).dot(i)<0}set(t,e,n){return this.a.copy(t),this.b.copy(e),this.c.copy(n),this}setFromPointsAndIndices(t,e,n,i){return this.a.copy(t[e]),this.b.copy(t[n]),this.c.copy(t[i]),this}setFromAttributeAndIndices(t,e,n,i){return this.a.fromBufferAttribute(t,e),this.b.fromBufferAttribute(t,n),this.c.fromBufferAttribute(t,i),this}clone(){return new this.constructor().copy(this)}copy(t){return this.a.copy(t.a),this.b.copy(t.b),this.c.copy(t.c),this}getArea(){return Xi.subVectors(this.c,this.b),Ds.subVectors(this.a,this.b),Xi.cross(Ds).length()*.5}getMidpoint(t){return t.addVectors(this.a,this.b).add(this.c).multiplyScalar(1/3)}getNormal(t){return ai.getNormal(this.a,this.b,this.c,t)}getPlane(t){return t.setFromCoplanarPoints(this.a,this.b,this.c)}getBarycoord(t,e){return ai.getBarycoord(t,this.a,this.b,this.c,e)}getInterpolation(t,e,n,i,o){return ai.getInterpolation(t,this.a,this.b,this.c,e,n,i,o)}containsPoint(t){return ai.containsPoint(t,this.a,this.b,this.c)}isFrontFacing(t){return ai.isFrontFacing(this.a,this.b,this.c,t)}intersectsBox(t){return t.intersectsTriangle(this)}closestPointToPoint(t,e){const n=this.a,i=this.b,o=this.c;let l,c;no.subVectors(i,n),io.subVectors(o,n),op.subVectors(t,n);const h=no.dot(op),f=io.dot(op);if(h<=0&&f<=0)return e.copy(n);lp.subVectors(t,i);const p=no.dot(lp),m=io.dot(lp);if(p>=0&&m<=p)return e.copy(i);const g=h*m-p*f;if(g<=0&&h>=0&&p<=0)return l=h/(h-p),e.copy(n).addScaledVector(no,l);cp.subVectors(t,o);const v=no.dot(cp),x=io.dot(cp);if(x>=0&&v<=x)return e.copy(o);const b=v*f-h*x;if(b<=0&&f>=0&&x<=0)return c=f/(f-x),e.copy(n).addScaledVector(io,c);const S=p*x-v*m;if(S<=0&&m-p>=0&&v-x>=0)return Gv.subVectors(o,i),c=(m-p)/(m-p+(v-x)),e.copy(i).addScaledVector(Gv,c);const _=1/(S+b+g);return l=b*_,c=g*_,e.copy(n).addScaledVector(no,l).addScaledVector(io,c)}equals(t){return t.a.equals(this.a)&&t.b.equals(this.b)&&t.c.equals(this.c)}}const bx={aliceblue:15792383,antiquewhite:16444375,aqua:65535,aquamarine:8388564,azure:15794175,beige:16119260,bisque:16770244,black:0,blanchedalmond:16772045,blue:255,blueviolet:9055202,brown:10824234,burlywood:14596231,cadetblue:6266528,chartreuse:8388352,chocolate:13789470,coral:16744272,cornflowerblue:6591981,cornsilk:16775388,crimson:14423100,cyan:65535,darkblue:139,darkcyan:35723,darkgoldenrod:12092939,darkgray:11119017,darkgreen:25600,darkgrey:11119017,darkkhaki:12433259,darkmagenta:9109643,darkolivegreen:5597999,darkorange:16747520,darkorchid:10040012,darkred:9109504,darksalmon:15308410,darkseagreen:9419919,darkslateblue:4734347,darkslategray:3100495,darkslategrey:3100495,darkturquoise:52945,darkviolet:9699539,deeppink:16716947,deepskyblue:49151,dimgray:6908265,dimgrey:6908265,dodgerblue:2003199,firebrick:11674146,floralwhite:16775920,forestgreen:2263842,fuchsia:16711935,gainsboro:14474460,ghostwhite:16316671,gold:16766720,goldenrod:14329120,gray:8421504,green:32768,greenyellow:11403055,grey:8421504,honeydew:15794160,hotpink:16738740,indianred:13458524,indigo:4915330,ivory:16777200,khaki:15787660,lavender:15132410,lavenderblush:16773365,lawngreen:8190976,lemonchiffon:16775885,lightblue:11393254,lightcoral:15761536,lightcyan:14745599,lightgoldenrodyellow:16448210,lightgray:13882323,lightgreen:9498256,lightgrey:13882323,lightpink:16758465,lightsalmon:16752762,lightseagreen:2142890,lightskyblue:8900346,lightslategray:7833753,lightslategrey:7833753,lightsteelblue:11584734,lightyellow:16777184,lime:65280,limegreen:3329330,linen:16445670,magenta:16711935,maroon:8388608,mediumaquamarine:6737322,mediumblue:205,mediumorchid:12211667,mediumpurple:9662683,mediumseagreen:3978097,mediumslateblue:8087790,mediumspringgreen:64154,mediumturquoise:4772300,mediumvioletred:13047173,midnightblue:1644912,mintcream:16121850,mistyrose:16770273,moccasin:16770229,navajowhite:16768685,navy:128,oldlace:16643558,olive:8421376,olivedrab:7048739,orange:16753920,orangered:16729344,orchid:14315734,palegoldenrod:15657130,palegreen:10025880,paleturquoise:11529966,palevioletred:14381203,papayawhip:16773077,peachpuff:16767673,peru:13468991,pink:16761035,plum:14524637,powderblue:11591910,purple:8388736,rebeccapurple:6697881,red:16711680,rosybrown:12357519,royalblue:4286945,saddlebrown:9127187,salmon:16416882,sandybrown:16032864,seagreen:3050327,seashell:16774638,sienna:10506797,silver:12632256,skyblue:8900331,slateblue:6970061,slategray:7372944,slategrey:7372944,snow:16775930,springgreen:65407,steelblue:4620980,tan:13808780,teal:32896,thistle:14204888,tomato:16737095,turquoise:4251856,violet:15631086,wheat:16113331,white:16777215,whitesmoke:16119285,yellow:16776960,yellowgreen:10145074},la={h:0,s:0,l:0},ou={h:0,s:0,l:0};function dp(s,t,e){return e<0&&(e+=1),e>1&&(e-=1),e<1/6?s+(t-s)*6*e:e<1/2?t:e<2/3?s+(t-s)*6*(2/3-e):s}class kt{constructor(t,e,n){return this.isColor=!0,this.r=1,this.g=1,this.b=1,this.set(t,e,n)}set(t,e,n){if(e===void 0&&n===void 0){const i=t;i&&i.isColor?this.copy(i):typeof i=="number"?this.setHex(i):typeof i=="string"&&this.setStyle(i)}else this.setRGB(t,e,n);return this}setScalar(t){return this.r=t,this.g=t,this.b=t,this}setHex(t,e=Fn){return t=Math.floor(t),this.r=(t>>16&255)/255,this.g=(t>>8&255)/255,this.b=(t&255)/255,Re.colorSpaceToWorking(this,e),this}setRGB(t,e,n,i=Re.workingColorSpace){return this.r=t,this.g=e,this.b=n,Re.colorSpaceToWorking(this,i),this}setHSL(t,e,n,i=Re.workingColorSpace){if(t=zm(t,1),e=de(e,0,1),n=de(n,0,1),e===0)this.r=this.g=this.b=n;else{const o=n<=.5?n*(1+e):n+e-n*e,l=2*n-o;this.r=dp(l,o,t+1/3),this.g=dp(l,o,t),this.b=dp(l,o,t-1/3)}return Re.colorSpaceToWorking(this,i),this}setStyle(t,e=Fn){function n(o){o!==void 0&&parseFloat(o)<1&&console.warn("THREE.Color: Alpha component of "+t+" will be ignored.")}let i;if(i=/^(\w+)\(([^\)]*)\)/.exec(t)){let o;const l=i[1],c=i[2];switch(l){case"rgb":case"rgba":if(o=/^\s*(\d+)\s*,\s*(\d+)\s*,\s*(\d+)\s*(?:,\s*(\d*\.?\d+)\s*)?$/.exec(c))return n(o[4]),this.setRGB(Math.min(255,parseInt(o[1],10))/255,Math.min(255,parseInt(o[2],10))/255,Math.min(255,parseInt(o[3],10))/255,e);if(o=/^\s*(\d+)\%\s*,\s*(\d+)\%\s*,\s*(\d+)\%\s*(?:,\s*(\d*\.?\d+)\s*)?$/.exec(c))return n(o[4]),this.setRGB(Math.min(100,parseInt(o[1],10))/100,Math.min(100,parseInt(o[2],10))/100,Math.min(100,parseInt(o[3],10))/100,e);break;case"hsl":case"hsla":if(o=/^\s*(\d*\.?\d+)\s*,\s*(\d*\.?\d+)\%\s*,\s*(\d*\.?\d+)\%\s*(?:,\s*(\d*\.?\d+)\s*)?$/.exec(c))return n(o[4]),this.setHSL(parseFloat(o[1])/360,parseFloat(o[2])/100,parseFloat(o[3])/100,e);break;default:console.warn("THREE.Color: Unknown color model "+t)}}else if(i=/^\#([A-Fa-f\d]+)$/.exec(t)){const o=i[1],l=o.length;if(l===3)return this.setRGB(parseInt(o.charAt(0),16)/15,parseInt(o.charAt(1),16)/15,parseInt(o.charAt(2),16)/15,e);if(l===6)return this.setHex(parseInt(o,16),e);console.warn("THREE.Color: Invalid hex color "+t)}else if(t&&t.length>0)return this.setColorName(t,e);return this}setColorName(t,e=Fn){const n=bx[t.toLowerCase()];return n!==void 0?this.setHex(n,e):console.warn("THREE.Color: Unknown color "+t),this}clone(){return new this.constructor(this.r,this.g,this.b)}copy(t){return this.r=t.r,this.g=t.g,this.b=t.b,this}copySRGBToLinear(t){return this.r=Bs(t.r),this.g=Bs(t.g),this.b=Bs(t.b),this}copyLinearToSRGB(t){return this.r=To(t.r),this.g=To(t.g),this.b=To(t.b),this}convertSRGBToLinear(){return this.copySRGBToLinear(this),this}convertLinearToSRGB(){return this.copyLinearToSRGB(this),this}getHex(t=Fn){return Re.workingToColorSpace(Bn.copy(this),t),Math.round(de(Bn.r*255,0,255))*65536+Math.round(de(Bn.g*255,0,255))*256+Math.round(de(Bn.b*255,0,255))}getHexString(t=Fn){return("000000"+this.getHex(t).toString(16)).slice(-6)}getHSL(t,e=Re.workingColorSpace){Re.workingToColorSpace(Bn.copy(this),e);const n=Bn.r,i=Bn.g,o=Bn.b,l=Math.max(n,i,o),c=Math.min(n,i,o);let h,f;const p=(c+l)/2;if(c===l)h=0,f=0;else{const m=l-c;switch(f=p<=.5?m/(l+c):m/(2-l-c),l){case n:h=(i-o)/m+(i<o?6:0);break;case i:h=(o-n)/m+2;break;case o:h=(n-i)/m+4;break}h/=6}return t.h=h,t.s=f,t.l=p,t}getRGB(t,e=Re.workingColorSpace){return Re.workingToColorSpace(Bn.copy(this),e),t.r=Bn.r,t.g=Bn.g,t.b=Bn.b,t}getStyle(t=Fn){Re.workingToColorSpace(Bn.copy(this),t);const e=Bn.r,n=Bn.g,i=Bn.b;return t!==Fn?`color(${t} ${e.toFixed(3)} ${n.toFixed(3)} ${i.toFixed(3)})`:`rgb(${Math.round(e*255)},${Math.round(n*255)},${Math.round(i*255)})`}offsetHSL(t,e,n){return this.getHSL(la),this.setHSL(la.h+t,la.s+e,la.l+n)}add(t){return this.r+=t.r,this.g+=t.g,this.b+=t.b,this}addColors(t,e){return this.r=t.r+e.r,this.g=t.g+e.g,this.b=t.b+e.b,this}addScalar(t){return this.r+=t,this.g+=t,this.b+=t,this}sub(t){return this.r=Math.max(0,this.r-t.r),this.g=Math.max(0,this.g-t.g),this.b=Math.max(0,this.b-t.b),this}multiply(t){return this.r*=t.r,this.g*=t.g,this.b*=t.b,this}multiplyScalar(t){return this.r*=t,this.g*=t,this.b*=t,this}lerp(t,e){return this.r+=(t.r-this.r)*e,this.g+=(t.g-this.g)*e,this.b+=(t.b-this.b)*e,this}lerpColors(t,e,n){return this.r=t.r+(e.r-t.r)*n,this.g=t.g+(e.g-t.g)*n,this.b=t.b+(e.b-t.b)*n,this}lerpHSL(t,e){this.getHSL(la),t.getHSL(ou);const n=Fl(la.h,ou.h,e),i=Fl(la.s,ou.s,e),o=Fl(la.l,ou.l,e);return this.setHSL(n,i,o),this}setFromVector3(t){return this.r=t.x,this.g=t.y,this.b=t.z,this}applyMatrix3(t){const e=this.r,n=this.g,i=this.b,o=t.elements;return this.r=o[0]*e+o[3]*n+o[6]*i,this.g=o[1]*e+o[4]*n+o[7]*i,this.b=o[2]*e+o[5]*n+o[8]*i,this}equals(t){return t.r===this.r&&t.g===this.g&&t.b===this.b}fromArray(t,e=0){return this.r=t[e],this.g=t[e+1],this.b=t[e+2],this}toArray(t=[],e=0){return t[e]=this.r,t[e+1]=this.g,t[e+2]=this.b,t}fromBufferAttribute(t,e){return this.r=t.getX(e),this.g=t.getY(e),this.b=t.getZ(e),this}toJSON(){return this.getHex()}*[Symbol.iterator](){yield this.r,yield this.g,yield this.b}}const Bn=new kt;kt.NAMES=bx;let NT=0;class kn extends hs{constructor(){super(),this.isMaterial=!0,Object.defineProperty(this,"id",{value:NT++}),this.uuid=Mi(),this.name="",this.type="Material",this.blending=fr,this.side=zs,this.vertexColors=!1,this.opacity=1,this.transparent=!1,this.alphaHash=!1,this.blendSrc=eh,this.blendDst=nh,this.blendEquation=fa,this.blendSrcAlpha=null,this.blendDstAlpha=null,this.blendEquationAlpha=null,this.blendColor=new kt(0,0,0),this.blendAlpha=0,this.depthFunc=mr,this.depthTest=!0,this.depthWrite=!0,this.stencilWriteMask=255,this.stencilFunc=lm,this.stencilRef=0,this.stencilFuncMask=255,this.stencilFail=sr,this.stencilZFail=sr,this.stencilZPass=sr,this.stencilWrite=!1,this.clippingPlanes=null,this.clipIntersection=!1,this.clipShadows=!1,this.shadowSide=null,this.colorWrite=!0,this.precision=null,this.polygonOffset=!1,this.polygonOffsetFactor=0,this.polygonOffsetUnits=0,this.dithering=!1,this.alphaToCoverage=!1,this.premultipliedAlpha=!1,this.forceSinglePass=!1,this.allowOverride=!0,this.visible=!0,this.toneMapped=!0,this.userData={},this.version=0,this._alphaTest=0}get alphaTest(){return this._alphaTest}set alphaTest(t){this._alphaTest>0!=t>0&&this.version++,this._alphaTest=t}onBeforeRender(){}onBeforeCompile(){}customProgramCacheKey(){return this.onBeforeCompile.toString()}setValues(t){if(t!==void 0)for(const e in t){const n=t[e];if(n===void 0){console.warn(`THREE.Material: parameter '${e}' has value of undefined.`);continue}const i=this[e];if(i===void 0){console.warn(`THREE.Material: '${e}' is not a property of THREE.${this.type}.`);continue}i&&i.isColor?i.set(n):i&&i.isVector3&&n&&n.isVector3?i.copy(n):this[e]=n}}toJSON(t){const e=t===void 0||typeof t=="string";e&&(t={textures:{},images:{}});const n={metadata:{version:4.7,type:"Material",generator:"Material.toJSON"}};n.uuid=this.uuid,n.type=this.type,this.name!==""&&(n.name=this.name),this.color&&this.color.isColor&&(n.color=this.color.getHex()),this.roughness!==void 0&&(n.roughness=this.roughness),this.metalness!==void 0&&(n.metalness=this.metalness),this.sheen!==void 0&&(n.sheen=this.sheen),this.sheenColor&&this.sheenColor.isColor&&(n.sheenColor=this.sheenColor.getHex()),this.sheenRoughness!==void 0&&(n.sheenRoughness=this.sheenRoughness),this.emissive&&this.emissive.isColor&&(n.emissive=this.emissive.getHex()),this.emissiveIntensity!==void 0&&this.emissiveIntensity!==1&&(n.emissiveIntensity=this.emissiveIntensity),this.specular&&this.specular.isColor&&(n.specular=this.specular.getHex()),this.specularIntensity!==void 0&&(n.specularIntensity=this.specularIntensity),this.specularColor&&this.specularColor.isColor&&(n.specularColor=this.specularColor.getHex()),this.shininess!==void 0&&(n.shininess=this.shininess),this.clearcoat!==void 0&&(n.clearcoat=this.clearcoat),this.clearcoatRoughness!==void 0&&(n.clearcoatRoughness=this.clearcoatRoughness),this.clearcoatMap&&this.clearcoatMap.isTexture&&(n.clearcoatMap=this.clearcoatMap.toJSON(t).uuid),this.clearcoatRoughnessMap&&this.clearcoatRoughnessMap.isTexture&&(n.clearcoatRoughnessMap=this.clearcoatRoughnessMap.toJSON(t).uuid),this.clearcoatNormalMap&&this.clearcoatNormalMap.isTexture&&(n.clearcoatNormalMap=this.clearcoatNormalMap.toJSON(t).uuid,n.clearcoatNormalScale=this.clearcoatNormalScale.toArray()),this.dispersion!==void 0&&(n.dispersion=this.dispersion),this.iridescence!==void 0&&(n.iridescence=this.iridescence),this.iridescenceIOR!==void 0&&(n.iridescenceIOR=this.iridescenceIOR),this.iridescenceThicknessRange!==void 0&&(n.iridescenceThicknessRange=this.iridescenceThicknessRange),this.iridescenceMap&&this.iridescenceMap.isTexture&&(n.iridescenceMap=this.iridescenceMap.toJSON(t).uuid),this.iridescenceThicknessMap&&this.iridescenceThicknessMap.isTexture&&(n.iridescenceThicknessMap=this.iridescenceThicknessMap.toJSON(t).uuid),this.anisotropy!==void 0&&(n.anisotropy=this.anisotropy),this.anisotropyRotation!==void 0&&(n.anisotropyRotation=this.anisotropyRotation),this.anisotropyMap&&this.anisotropyMap.isTexture&&(n.anisotropyMap=this.anisotropyMap.toJSON(t).uuid),this.map&&this.map.isTexture&&(n.map=this.map.toJSON(t).uuid),this.matcap&&this.matcap.isTexture&&(n.matcap=this.matcap.toJSON(t).uuid),this.alphaMap&&this.alphaMap.isTexture&&(n.alphaMap=this.alphaMap.toJSON(t).uuid),this.lightMap&&this.lightMap.isTexture&&(n.lightMap=this.lightMap.toJSON(t).uuid,n.lightMapIntensity=this.lightMapIntensity),this.aoMap&&this.aoMap.isTexture&&(n.aoMap=this.aoMap.toJSON(t).uuid,n.aoMapIntensity=this.aoMapIntensity),this.bumpMap&&this.bumpMap.isTexture&&(n.bumpMap=this.bumpMap.toJSON(t).uuid,n.bumpScale=this.bumpScale),this.normalMap&&this.normalMap.isTexture&&(n.normalMap=this.normalMap.toJSON(t).uuid,n.normalMapType=this.normalMapType,n.normalScale=this.normalScale.toArray()),this.displacementMap&&this.displacementMap.isTexture&&(n.displacementMap=this.displacementMap.toJSON(t).uuid,n.displacementScale=this.displacementScale,n.displacementBias=this.displacementBias),this.roughnessMap&&this.roughnessMap.isTexture&&(n.roughnessMap=this.roughnessMap.toJSON(t).uuid),this.metalnessMap&&this.metalnessMap.isTexture&&(n.metalnessMap=this.metalnessMap.toJSON(t).uuid),this.emissiveMap&&this.emissiveMap.isTexture&&(n.emissiveMap=this.emissiveMap.toJSON(t).uuid),this.specularMap&&this.specularMap.isTexture&&(n.specularMap=this.specularMap.toJSON(t).uuid),this.specularIntensityMap&&this.specularIntensityMap.isTexture&&(n.specularIntensityMap=this.specularIntensityMap.toJSON(t).uuid),this.specularColorMap&&this.specularColorMap.isTexture&&(n.specularColorMap=this.specularColorMap.toJSON(t).uuid),this.envMap&&this.envMap.isTexture&&(n.envMap=this.envMap.toJSON(t).uuid,this.combine!==void 0&&(n.combine=this.combine)),this.envMapRotation!==void 0&&(n.envMapRotation=this.envMapRotation.toArray()),this.envMapIntensity!==void 0&&(n.envMapIntensity=this.envMapIntensity),this.reflectivity!==void 0&&(n.reflectivity=this.reflectivity),this.refractionRatio!==void 0&&(n.refractionRatio=this.refractionRatio),this.gradientMap&&this.gradientMap.isTexture&&(n.gradientMap=this.gradientMap.toJSON(t).uuid),this.transmission!==void 0&&(n.transmission=this.transmission),this.transmissionMap&&this.transmissionMap.isTexture&&(n.transmissionMap=this.transmissionMap.toJSON(t).uuid),this.thickness!==void 0&&(n.thickness=this.thickness),this.thicknessMap&&this.thicknessMap.isTexture&&(n.thicknessMap=this.thicknessMap.toJSON(t).uuid),this.attenuationDistance!==void 0&&this.attenuationDistance!==1/0&&(n.attenuationDistance=this.attenuationDistance),this.attenuationColor!==void 0&&(n.attenuationColor=this.attenuationColor.getHex()),this.size!==void 0&&(n.size=this.size),this.shadowSide!==null&&(n.shadowSide=this.shadowSide),this.sizeAttenuation!==void 0&&(n.sizeAttenuation=this.sizeAttenuation),this.blending!==fr&&(n.blending=this.blending),this.side!==zs&&(n.side=this.side),this.vertexColors===!0&&(n.vertexColors=!0),this.opacity<1&&(n.opacity=this.opacity),this.transparent===!0&&(n.transparent=!0),this.blendSrc!==eh&&(n.blendSrc=this.blendSrc),this.blendDst!==nh&&(n.blendDst=this.blendDst),this.blendEquation!==fa&&(n.blendEquation=this.blendEquation),this.blendSrcAlpha!==null&&(n.blendSrcAlpha=this.blendSrcAlpha),this.blendDstAlpha!==null&&(n.blendDstAlpha=this.blendDstAlpha),this.blendEquationAlpha!==null&&(n.blendEquationAlpha=this.blendEquationAlpha),this.blendColor&&this.blendColor.isColor&&(n.blendColor=this.blendColor.getHex()),this.blendAlpha!==0&&(n.blendAlpha=this.blendAlpha),this.depthFunc!==mr&&(n.depthFunc=this.depthFunc),this.depthTest===!1&&(n.depthTest=this.depthTest),this.depthWrite===!1&&(n.depthWrite=this.depthWrite),this.colorWrite===!1&&(n.colorWrite=this.colorWrite),this.stencilWriteMask!==255&&(n.stencilWriteMask=this.stencilWriteMask),this.stencilFunc!==lm&&(n.stencilFunc=this.stencilFunc),this.stencilRef!==0&&(n.stencilRef=this.stencilRef),this.stencilFuncMask!==255&&(n.stencilFuncMask=this.stencilFuncMask),this.stencilFail!==sr&&(n.stencilFail=this.stencilFail),this.stencilZFail!==sr&&(n.stencilZFail=this.stencilZFail),this.stencilZPass!==sr&&(n.stencilZPass=this.stencilZPass),this.stencilWrite===!0&&(n.stencilWrite=this.stencilWrite),this.rotation!==void 0&&this.rotation!==0&&(n.rotation=this.rotation),this.polygonOffset===!0&&(n.polygonOffset=!0),this.polygonOffsetFactor!==0&&(n.polygonOffsetFactor=this.polygonOffsetFactor),this.polygonOffsetUnits!==0&&(n.polygonOffsetUnits=this.polygonOffsetUnits),this.linewidth!==void 0&&this.linewidth!==1&&(n.linewidth=this.linewidth),this.dashSize!==void 0&&(n.dashSize=this.dashSize),this.gapSize!==void 0&&(n.gapSize=this.gapSize),this.scale!==void 0&&(n.scale=this.scale),this.dithering===!0&&(n.dithering=!0),this.alphaTest>0&&(n.alphaTest=this.alphaTest),this.alphaHash===!0&&(n.alphaHash=!0),this.alphaToCoverage===!0&&(n.alphaToCoverage=!0),this.premultipliedAlpha===!0&&(n.premultipliedAlpha=!0),this.forceSinglePass===!0&&(n.forceSinglePass=!0),this.wireframe===!0&&(n.wireframe=!0),this.wireframeLinewidth>1&&(n.wireframeLinewidth=this.wireframeLinewidth),this.wireframeLinecap!=="round"&&(n.wireframeLinecap=this.wireframeLinecap),this.wireframeLinejoin!=="round"&&(n.wireframeLinejoin=this.wireframeLinejoin),this.flatShading===!0&&(n.flatShading=!0),this.visible===!1&&(n.visible=!1),this.toneMapped===!1&&(n.toneMapped=!1),this.fog===!1&&(n.fog=!1),Object.keys(this.userData).length>0&&(n.userData=this.userData);function i(o){const l=[];for(const c in o){const h=o[c];delete h.metadata,l.push(h)}return l}if(e){const o=i(t.textures),l=i(t.images);o.length>0&&(n.textures=o),l.length>0&&(n.images=l)}return n}clone(){return new this.constructor().copy(this)}copy(t){this.name=t.name,this.blending=t.blending,this.side=t.side,this.vertexColors=t.vertexColors,this.opacity=t.opacity,this.transparent=t.transparent,this.blendSrc=t.blendSrc,this.blendDst=t.blendDst,this.blendEquation=t.blendEquation,this.blendSrcAlpha=t.blendSrcAlpha,this.blendDstAlpha=t.blendDstAlpha,this.blendEquationAlpha=t.blendEquationAlpha,this.blendColor.copy(t.blendColor),this.blendAlpha=t.blendAlpha,this.depthFunc=t.depthFunc,this.depthTest=t.depthTest,this.depthWrite=t.depthWrite,this.stencilWriteMask=t.stencilWriteMask,this.stencilFunc=t.stencilFunc,this.stencilRef=t.stencilRef,this.stencilFuncMask=t.stencilFuncMask,this.stencilFail=t.stencilFail,this.stencilZFail=t.stencilZFail,this.stencilZPass=t.stencilZPass,this.stencilWrite=t.stencilWrite;const e=t.clippingPlanes;let n=null;if(e!==null){const i=e.length;n=new Array(i);for(let o=0;o!==i;++o)n[o]=e[o].clone()}return this.clippingPlanes=n,this.clipIntersection=t.clipIntersection,this.clipShadows=t.clipShadows,this.shadowSide=t.shadowSide,this.colorWrite=t.colorWrite,this.precision=t.precision,this.polygonOffset=t.polygonOffset,this.polygonOffsetFactor=t.polygonOffsetFactor,this.polygonOffsetUnits=t.polygonOffsetUnits,this.dithering=t.dithering,this.alphaTest=t.alphaTest,this.alphaHash=t.alphaHash,this.alphaToCoverage=t.alphaToCoverage,this.premultipliedAlpha=t.premultipliedAlpha,this.forceSinglePass=t.forceSinglePass,this.visible=t.visible,this.toneMapped=t.toneMapped,this.userData=JSON.parse(JSON.stringify(t.userData)),this}dispose(){this.dispatchEvent({type:"dispose"})}set needsUpdate(t){t===!0&&this.version++}}class xa extends kn{constructor(t){super(),this.isMeshBasicMaterial=!0,this.type="MeshBasicMaterial",this.color=new kt(16777215),this.map=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.specularMap=null,this.alphaMap=null,this.envMap=null,this.envMapRotation=new bi,this.combine=oc,this.reflectivity=1,this.refractionRatio=.98,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.fog=!0,this.setValues(t)}copy(t){return super.copy(t),this.color.copy(t.color),this.map=t.map,this.lightMap=t.lightMap,this.lightMapIntensity=t.lightMapIntensity,this.aoMap=t.aoMap,this.aoMapIntensity=t.aoMapIntensity,this.specularMap=t.specularMap,this.alphaMap=t.alphaMap,this.envMap=t.envMap,this.envMapRotation.copy(t.envMapRotation),this.combine=t.combine,this.reflectivity=t.reflectivity,this.refractionRatio=t.refractionRatio,this.wireframe=t.wireframe,this.wireframeLinewidth=t.wireframeLinewidth,this.wireframeLinecap=t.wireframeLinecap,this.wireframeLinejoin=t.wireframeLinejoin,this.fog=t.fog,this}}const Is=LT();function LT(){const s=new ArrayBuffer(4),t=new Float32Array(s),e=new Uint32Array(s),n=new Uint32Array(512),i=new Uint32Array(512);for(let h=0;h<256;++h){const f=h-127;f<-27?(n[h]=0,n[h|256]=32768,i[h]=24,i[h|256]=24):f<-14?(n[h]=1024>>-f-14,n[h|256]=1024>>-f-14|32768,i[h]=-f-1,i[h|256]=-f-1):f<=15?(n[h]=f+15<<10,n[h|256]=f+15<<10|32768,i[h]=13,i[h|256]=13):f<128?(n[h]=31744,n[h|256]=64512,i[h]=24,i[h|256]=24):(n[h]=31744,n[h|256]=64512,i[h]=13,i[h|256]=13)}const o=new Uint32Array(2048),l=new Uint32Array(64),c=new Uint32Array(64);for(let h=1;h<1024;++h){let f=h<<13,p=0;for(;(f&8388608)===0;)f<<=1,p-=8388608;f&=-8388609,p+=947912704,o[h]=f|p}for(let h=1024;h<2048;++h)o[h]=939524096+(h-1024<<13);for(let h=1;h<31;++h)l[h]=h<<23;l[31]=1199570944,l[32]=2147483648;for(let h=33;h<63;++h)l[h]=2147483648+(h-32<<23);l[63]=3347054592;for(let h=1;h<64;++h)h!==32&&(c[h]=1024);return{floatView:t,uint32View:e,baseTable:n,shiftTable:i,mantissaTable:o,exponentTable:l,offsetTable:c}}function si(s){Math.abs(s)>65504&&console.warn("THREE.DataUtils.toHalfFloat(): Value out of range."),s=de(s,-65504,65504),Is.floatView[0]=s;const t=Is.uint32View[0],e=t>>23&511;return Is.baseTable[e]+((t&8388607)>>Is.shiftTable[e])}function Rl(s){const t=s>>10;return Is.uint32View[0]=Is.mantissaTable[Is.offsetTable[t]+(s&1023)]+Is.exponentTable[t],Is.floatView[0]}class PT{static toHalfFloat(t){return si(t)}static fromHalfFloat(t){return Rl(t)}}const fn=new I,lu=new dt;let IT=0;class Xe{constructor(t,e,n=!1){if(Array.isArray(t))throw new TypeError("THREE.BufferAttribute: array should be a Typed Array.");this.isBufferAttribute=!0,Object.defineProperty(this,"id",{value:IT++}),this.name="",this.array=t,this.itemSize=e,this.count=t!==void 0?t.length/e:0,this.normalized=n,this.usage=Kl,this.updateRanges=[],this.gpuType=ri,this.version=0}onUploadCallback(){}set needsUpdate(t){t===!0&&this.version++}setUsage(t){return this.usage=t,this}addUpdateRange(t,e){this.updateRanges.push({start:t,count:e})}clearUpdateRanges(){this.updateRanges.length=0}copy(t){return this.name=t.name,this.array=new t.array.constructor(t.array),this.itemSize=t.itemSize,this.count=t.count,this.normalized=t.normalized,this.usage=t.usage,this.gpuType=t.gpuType,this}copyAt(t,e,n){t*=this.itemSize,n*=e.itemSize;for(let i=0,o=this.itemSize;i<o;i++)this.array[t+i]=e.array[n+i];return this}copyArray(t){return this.array.set(t),this}applyMatrix3(t){if(this.itemSize===2)for(let e=0,n=this.count;e<n;e++)lu.fromBufferAttribute(this,e),lu.applyMatrix3(t),this.setXY(e,lu.x,lu.y);else if(this.itemSize===3)for(let e=0,n=this.count;e<n;e++)fn.fromBufferAttribute(this,e),fn.applyMatrix3(t),this.setXYZ(e,fn.x,fn.y,fn.z);return this}applyMatrix4(t){for(let e=0,n=this.count;e<n;e++)fn.fromBufferAttribute(this,e),fn.applyMatrix4(t),this.setXYZ(e,fn.x,fn.y,fn.z);return this}applyNormalMatrix(t){for(let e=0,n=this.count;e<n;e++)fn.fromBufferAttribute(this,e),fn.applyNormalMatrix(t),this.setXYZ(e,fn.x,fn.y,fn.z);return this}transformDirection(t){for(let e=0,n=this.count;e<n;e++)fn.fromBufferAttribute(this,e),fn.transformDirection(t),this.setXYZ(e,fn.x,fn.y,fn.z);return this}set(t,e=0){return this.array.set(t,e),this}getComponent(t,e){let n=this.array[t*this.itemSize+e];return this.normalized&&(n=Jn(n,this.array)),n}setComponent(t,e,n){return this.normalized&&(n=ye(n,this.array)),this.array[t*this.itemSize+e]=n,this}getX(t){let e=this.array[t*this.itemSize];return this.normalized&&(e=Jn(e,this.array)),e}setX(t,e){return this.normalized&&(e=ye(e,this.array)),this.array[t*this.itemSize]=e,this}getY(t){let e=this.array[t*this.itemSize+1];return this.normalized&&(e=Jn(e,this.array)),e}setY(t,e){return this.normalized&&(e=ye(e,this.array)),this.array[t*this.itemSize+1]=e,this}getZ(t){let e=this.array[t*this.itemSize+2];return this.normalized&&(e=Jn(e,this.array)),e}setZ(t,e){return this.normalized&&(e=ye(e,this.array)),this.array[t*this.itemSize+2]=e,this}getW(t){let e=this.array[t*this.itemSize+3];return this.normalized&&(e=Jn(e,this.array)),e}setW(t,e){return this.normalized&&(e=ye(e,this.array)),this.array[t*this.itemSize+3]=e,this}setXY(t,e,n){return t*=this.itemSize,this.normalized&&(e=ye(e,this.array),n=ye(n,this.array)),this.array[t+0]=e,this.array[t+1]=n,this}setXYZ(t,e,n,i){return t*=this.itemSize,this.normalized&&(e=ye(e,this.array),n=ye(n,this.array),i=ye(i,this.array)),this.array[t+0]=e,this.array[t+1]=n,this.array[t+2]=i,this}setXYZW(t,e,n,i,o){return t*=this.itemSize,this.normalized&&(e=ye(e,this.array),n=ye(n,this.array),i=ye(i,this.array),o=ye(o,this.array)),this.array[t+0]=e,this.array[t+1]=n,this.array[t+2]=i,this.array[t+3]=o,this}onUpload(t){return this.onUploadCallback=t,this}clone(){return new this.constructor(this.array,this.itemSize).copy(this)}toJSON(){const t={itemSize:this.itemSize,type:this.array.constructor.name,array:Array.from(this.array),normalized:this.normalized};return this.name!==""&&(t.name=this.name),this.usage!==Kl&&(t.usage=this.usage),t}}class OT extends Xe{constructor(t,e,n){super(new Int8Array(t),e,n)}}class BT extends Xe{constructor(t,e,n){super(new Uint8Array(t),e,n)}}class zT extends Xe{constructor(t,e,n){super(new Uint8ClampedArray(t),e,n)}}class FT extends Xe{constructor(t,e,n){super(new Int16Array(t),e,n)}}class Hm extends Xe{constructor(t,e,n){super(new Uint16Array(t),e,n)}}class HT extends Xe{constructor(t,e,n){super(new Int32Array(t),e,n)}}class Vm extends Xe{constructor(t,e,n){super(new Uint32Array(t),e,n)}}class VT extends Xe{constructor(t,e,n){super(new Uint16Array(t),e,n),this.isFloat16BufferAttribute=!0}getX(t){let e=Rl(this.array[t*this.itemSize]);return this.normalized&&(e=Jn(e,this.array)),e}setX(t,e){return this.normalized&&(e=ye(e,this.array)),this.array[t*this.itemSize]=si(e),this}getY(t){let e=Rl(this.array[t*this.itemSize+1]);return this.normalized&&(e=Jn(e,this.array)),e}setY(t,e){return this.normalized&&(e=ye(e,this.array)),this.array[t*this.itemSize+1]=si(e),this}getZ(t){let e=Rl(this.array[t*this.itemSize+2]);return this.normalized&&(e=Jn(e,this.array)),e}setZ(t,e){return this.normalized&&(e=ye(e,this.array)),this.array[t*this.itemSize+2]=si(e),this}getW(t){let e=Rl(this.array[t*this.itemSize+3]);return this.normalized&&(e=Jn(e,this.array)),e}setW(t,e){return this.normalized&&(e=ye(e,this.array)),this.array[t*this.itemSize+3]=si(e),this}setXY(t,e,n){return t*=this.itemSize,this.normalized&&(e=ye(e,this.array),n=ye(n,this.array)),this.array[t+0]=si(e),this.array[t+1]=si(n),this}setXYZ(t,e,n,i){return t*=this.itemSize,this.normalized&&(e=ye(e,this.array),n=ye(n,this.array),i=ye(i,this.array)),this.array[t+0]=si(e),this.array[t+1]=si(n),this.array[t+2]=si(i),this}setXYZW(t,e,n,i,o){return t*=this.itemSize,this.normalized&&(e=ye(e,this.array),n=ye(n,this.array),i=ye(i,this.array),o=ye(o,this.array)),this.array[t+0]=si(e),this.array[t+1]=si(n),this.array[t+2]=si(i),this.array[t+3]=si(o),this}}class Jt extends Xe{constructor(t,e,n){super(new Float32Array(t),e,n)}}let GT=0;const Li=new pe,pp=new Le,so=new I,xi=new Gn,xl=new Gn,En=new I;class xe extends hs{constructor(){super(),this.isBufferGeometry=!0,Object.defineProperty(this,"id",{value:GT++}),this.uuid=Mi(),this.name="",this.type="BufferGeometry",this.index=null,this.indirect=null,this.attributes={},this.morphAttributes={},this.morphTargetsRelative=!1,this.groups=[],this.boundingBox=null,this.boundingSphere=null,this.drawRange={start:0,count:1/0},this.userData={}}getIndex(){return this.index}setIndex(t){return Array.isArray(t)?this.index=new(xx(t)?Vm:Hm)(t,1):this.index=t,this}setIndirect(t){return this.indirect=t,this}getIndirect(){return this.indirect}getAttribute(t){return this.attributes[t]}setAttribute(t,e){return this.attributes[t]=e,this}deleteAttribute(t){return delete this.attributes[t],this}hasAttribute(t){return this.attributes[t]!==void 0}addGroup(t,e,n=0){this.groups.push({start:t,count:e,materialIndex:n})}clearGroups(){this.groups=[]}setDrawRange(t,e){this.drawRange.start=t,this.drawRange.count=e}applyMatrix4(t){const e=this.attributes.position;e!==void 0&&(e.applyMatrix4(t),e.needsUpdate=!0);const n=this.attributes.normal;if(n!==void 0){const o=new ve().getNormalMatrix(t);n.applyNormalMatrix(o),n.needsUpdate=!0}const i=this.attributes.tangent;return i!==void 0&&(i.transformDirection(t),i.needsUpdate=!0),this.boundingBox!==null&&this.computeBoundingBox(),this.boundingSphere!==null&&this.computeBoundingSphere(),this}applyQuaternion(t){return Li.makeRotationFromQuaternion(t),this.applyMatrix4(Li),this}rotateX(t){return Li.makeRotationX(t),this.applyMatrix4(Li),this}rotateY(t){return Li.makeRotationY(t),this.applyMatrix4(Li),this}rotateZ(t){return Li.makeRotationZ(t),this.applyMatrix4(Li),this}translate(t,e,n){return Li.makeTranslation(t,e,n),this.applyMatrix4(Li),this}scale(t,e,n){return Li.makeScale(t,e,n),this.applyMatrix4(Li),this}lookAt(t){return pp.lookAt(t),pp.updateMatrix(),this.applyMatrix4(pp.matrix),this}center(){return this.computeBoundingBox(),this.boundingBox.getCenter(so).negate(),this.translate(so.x,so.y,so.z),this}setFromPoints(t){const e=this.getAttribute("position");if(e===void 0){const n=[];for(let i=0,o=t.length;i<o;i++){const l=t[i];n.push(l.x,l.y,l.z||0)}this.setAttribute("position",new Jt(n,3))}else{const n=Math.min(t.length,e.count);for(let i=0;i<n;i++){const o=t[i];e.setXYZ(i,o.x,o.y,o.z||0)}t.length>e.count&&console.warn("THREE.BufferGeometry: Buffer size too small for points data. Use .dispose() and create a new geometry."),e.needsUpdate=!0}return this}computeBoundingBox(){this.boundingBox===null&&(this.boundingBox=new Gn);const t=this.attributes.position,e=this.morphAttributes.position;if(t&&t.isGLBufferAttribute){console.error("THREE.BufferGeometry.computeBoundingBox(): GLBufferAttribute requires a manual bounding box.",this),this.boundingBox.set(new I(-1/0,-1/0,-1/0),new I(1/0,1/0,1/0));return}if(t!==void 0){if(this.boundingBox.setFromBufferAttribute(t),e)for(let n=0,i=e.length;n<i;n++){const o=e[n];xi.setFromBufferAttribute(o),this.morphTargetsRelative?(En.addVectors(this.boundingBox.min,xi.min),this.boundingBox.expandByPoint(En),En.addVectors(this.boundingBox.max,xi.max),this.boundingBox.expandByPoint(En)):(this.boundingBox.expandByPoint(xi.min),this.boundingBox.expandByPoint(xi.max))}}else this.boundingBox.makeEmpty();(isNaN(this.boundingBox.min.x)||isNaN(this.boundingBox.min.y)||isNaN(this.boundingBox.min.z))&&console.error('THREE.BufferGeometry.computeBoundingBox(): Computed min/max have NaN values. The "position" attribute is likely to have NaN values.',this)}computeBoundingSphere(){this.boundingSphere===null&&(this.boundingSphere=new Rn);const t=this.attributes.position,e=this.morphAttributes.position;if(t&&t.isGLBufferAttribute){console.error("THREE.BufferGeometry.computeBoundingSphere(): GLBufferAttribute requires a manual bounding sphere.",this),this.boundingSphere.set(new I,1/0);return}if(t){const n=this.boundingSphere.center;if(xi.setFromBufferAttribute(t),e)for(let o=0,l=e.length;o<l;o++){const c=e[o];xl.setFromBufferAttribute(c),this.morphTargetsRelative?(En.addVectors(xi.min,xl.min),xi.expandByPoint(En),En.addVectors(xi.max,xl.max),xi.expandByPoint(En)):(xi.expandByPoint(xl.min),xi.expandByPoint(xl.max))}xi.getCenter(n);let i=0;for(let o=0,l=t.count;o<l;o++)En.fromBufferAttribute(t,o),i=Math.max(i,n.distanceToSquared(En));if(e)for(let o=0,l=e.length;o<l;o++){const c=e[o],h=this.morphTargetsRelative;for(let f=0,p=c.count;f<p;f++)En.fromBufferAttribute(c,f),h&&(so.fromBufferAttribute(t,f),En.add(so)),i=Math.max(i,n.distanceToSquared(En))}this.boundingSphere.radius=Math.sqrt(i),isNaN(this.boundingSphere.radius)&&console.error('THREE.BufferGeometry.computeBoundingSphere(): Computed radius is NaN. The "position" attribute is likely to have NaN values.',this)}}computeTangents(){const t=this.index,e=this.attributes;if(t===null||e.position===void 0||e.normal===void 0||e.uv===void 0){console.error("THREE.BufferGeometry: .computeTangents() failed. Missing required attributes (index, position, normal or uv)");return}const n=e.position,i=e.normal,o=e.uv;this.hasAttribute("tangent")===!1&&this.setAttribute("tangent",new Xe(new Float32Array(4*n.count),4));const l=this.getAttribute("tangent"),c=[],h=[];for(let O=0;O<n.count;O++)c[O]=new I,h[O]=new I;const f=new I,p=new I,m=new I,g=new dt,v=new dt,x=new dt,b=new I,S=new I;function _(O,C,w){f.fromBufferAttribute(n,O),p.fromBufferAttribute(n,C),m.fromBufferAttribute(n,w),g.fromBufferAttribute(o,O),v.fromBufferAttribute(o,C),x.fromBufferAttribute(o,w),p.sub(f),m.sub(f),v.sub(g),x.sub(g);const B=1/(v.x*x.y-x.x*v.y);isFinite(B)&&(b.copy(p).multiplyScalar(x.y).addScaledVector(m,-v.y).multiplyScalar(B),S.copy(m).multiplyScalar(v.x).addScaledVector(p,-x.x).multiplyScalar(B),c[O].add(b),c[C].add(b),c[w].add(b),h[O].add(S),h[C].add(S),h[w].add(S))}let E=this.groups;E.length===0&&(E=[{start:0,count:t.count}]);for(let O=0,C=E.length;O<C;++O){const w=E[O],B=w.start,tt=w.count;for(let X=B,Z=B+tt;X<Z;X+=3)_(t.getX(X+0),t.getX(X+1),t.getX(X+2))}const A=new I,T=new I,U=new I,D=new I;function P(O){U.fromBufferAttribute(i,O),D.copy(U);const C=c[O];A.copy(C),A.sub(U.multiplyScalar(U.dot(C))).normalize(),T.crossVectors(D,C);const B=T.dot(h[O])<0?-1:1;l.setXYZW(O,A.x,A.y,A.z,B)}for(let O=0,C=E.length;O<C;++O){const w=E[O],B=w.start,tt=w.count;for(let X=B,Z=B+tt;X<Z;X+=3)P(t.getX(X+0)),P(t.getX(X+1)),P(t.getX(X+2))}}computeVertexNormals(){const t=this.index,e=this.getAttribute("position");if(e!==void 0){let n=this.getAttribute("normal");if(n===void 0)n=new Xe(new Float32Array(e.count*3),3),this.setAttribute("normal",n);else for(let g=0,v=n.count;g<v;g++)n.setXYZ(g,0,0,0);const i=new I,o=new I,l=new I,c=new I,h=new I,f=new I,p=new I,m=new I;if(t)for(let g=0,v=t.count;g<v;g+=3){const x=t.getX(g+0),b=t.getX(g+1),S=t.getX(g+2);i.fromBufferAttribute(e,x),o.fromBufferAttribute(e,b),l.fromBufferAttribute(e,S),p.subVectors(l,o),m.subVectors(i,o),p.cross(m),c.fromBufferAttribute(n,x),h.fromBufferAttribute(n,b),f.fromBufferAttribute(n,S),c.add(p),h.add(p),f.add(p),n.setXYZ(x,c.x,c.y,c.z),n.setXYZ(b,h.x,h.y,h.z),n.setXYZ(S,f.x,f.y,f.z)}else for(let g=0,v=e.count;g<v;g+=3)i.fromBufferAttribute(e,g+0),o.fromBufferAttribute(e,g+1),l.fromBufferAttribute(e,g+2),p.subVectors(l,o),m.subVectors(i,o),p.cross(m),n.setXYZ(g+0,p.x,p.y,p.z),n.setXYZ(g+1,p.x,p.y,p.z),n.setXYZ(g+2,p.x,p.y,p.z);this.normalizeNormals(),n.needsUpdate=!0}}normalizeNormals(){const t=this.attributes.normal;for(let e=0,n=t.count;e<n;e++)En.fromBufferAttribute(t,e),En.normalize(),t.setXYZ(e,En.x,En.y,En.z)}toNonIndexed(){function t(c,h){const f=c.array,p=c.itemSize,m=c.normalized,g=new f.constructor(h.length*p);let v=0,x=0;for(let b=0,S=h.length;b<S;b++){c.isInterleavedBufferAttribute?v=h[b]*c.data.stride+c.offset:v=h[b]*p;for(let _=0;_<p;_++)g[x++]=f[v++]}return new Xe(g,p,m)}if(this.index===null)return console.warn("THREE.BufferGeometry.toNonIndexed(): BufferGeometry is already non-indexed."),this;const e=new xe,n=this.index.array,i=this.attributes;for(const c in i){const h=i[c],f=t(h,n);e.setAttribute(c,f)}const o=this.morphAttributes;for(const c in o){const h=[],f=o[c];for(let p=0,m=f.length;p<m;p++){const g=f[p],v=t(g,n);h.push(v)}e.morphAttributes[c]=h}e.morphTargetsRelative=this.morphTargetsRelative;const l=this.groups;for(let c=0,h=l.length;c<h;c++){const f=l[c];e.addGroup(f.start,f.count,f.materialIndex)}return e}toJSON(){const t={metadata:{version:4.7,type:"BufferGeometry",generator:"BufferGeometry.toJSON"}};if(t.uuid=this.uuid,t.type=this.type,this.name!==""&&(t.name=this.name),Object.keys(this.userData).length>0&&(t.userData=this.userData),this.parameters!==void 0){const h=this.parameters;for(const f in h)h[f]!==void 0&&(t[f]=h[f]);return t}t.data={attributes:{}};const e=this.index;e!==null&&(t.data.index={type:e.array.constructor.name,array:Array.prototype.slice.call(e.array)});const n=this.attributes;for(const h in n){const f=n[h];t.data.attributes[h]=f.toJSON(t.data)}const i={};let o=!1;for(const h in this.morphAttributes){const f=this.morphAttributes[h],p=[];for(let m=0,g=f.length;m<g;m++){const v=f[m];p.push(v.toJSON(t.data))}p.length>0&&(i[h]=p,o=!0)}o&&(t.data.morphAttributes=i,t.data.morphTargetsRelative=this.morphTargetsRelative);const l=this.groups;l.length>0&&(t.data.groups=JSON.parse(JSON.stringify(l)));const c=this.boundingSphere;return c!==null&&(t.data.boundingSphere=c.toJSON()),t}clone(){return new this.constructor().copy(this)}copy(t){this.index=null,this.attributes={},this.morphAttributes={},this.groups=[],this.boundingBox=null,this.boundingSphere=null;const e={};this.name=t.name;const n=t.index;n!==null&&this.setIndex(n.clone());const i=t.attributes;for(const f in i){const p=i[f];this.setAttribute(f,p.clone(e))}const o=t.morphAttributes;for(const f in o){const p=[],m=o[f];for(let g=0,v=m.length;g<v;g++)p.push(m[g].clone(e));this.morphAttributes[f]=p}this.morphTargetsRelative=t.morphTargetsRelative;const l=t.groups;for(let f=0,p=l.length;f<p;f++){const m=l[f];this.addGroup(m.start,m.count,m.materialIndex)}const c=t.boundingBox;c!==null&&(this.boundingBox=c.clone());const h=t.boundingSphere;return h!==null&&(this.boundingSphere=h.clone()),this.drawRange.start=t.drawRange.start,this.drawRange.count=t.drawRange.count,this.userData=t.userData,this}dispose(){this.dispatchEvent({type:"dispose"})}}const kv=new pe,Wa=new yr,cu=new Rn,Wv=new I,uu=new I,hu=new I,fu=new I,mp=new I,du=new I,Xv=new I,pu=new I;class dn extends Le{constructor(t=new xe,e=new xa){super(),this.isMesh=!0,this.type="Mesh",this.geometry=t,this.material=e,this.morphTargetDictionary=void 0,this.morphTargetInfluences=void 0,this.count=1,this.updateMorphTargets()}copy(t,e){return super.copy(t,e),t.morphTargetInfluences!==void 0&&(this.morphTargetInfluences=t.morphTargetInfluences.slice()),t.morphTargetDictionary!==void 0&&(this.morphTargetDictionary=Object.assign({},t.morphTargetDictionary)),this.material=Array.isArray(t.material)?t.material.slice():t.material,this.geometry=t.geometry,this}updateMorphTargets(){const e=this.geometry.morphAttributes,n=Object.keys(e);if(n.length>0){const i=e[n[0]];if(i!==void 0){this.morphTargetInfluences=[],this.morphTargetDictionary={};for(let o=0,l=i.length;o<l;o++){const c=i[o].name||String(o);this.morphTargetInfluences.push(0),this.morphTargetDictionary[c]=o}}}}getVertexPosition(t,e){const n=this.geometry,i=n.attributes.position,o=n.morphAttributes.position,l=n.morphTargetsRelative;e.fromBufferAttribute(i,t);const c=this.morphTargetInfluences;if(o&&c){du.set(0,0,0);for(let h=0,f=o.length;h<f;h++){const p=c[h],m=o[h];p!==0&&(mp.fromBufferAttribute(m,t),l?du.addScaledVector(mp,p):du.addScaledVector(mp.sub(e),p))}e.add(du)}return e}raycast(t,e){const n=this.geometry,i=this.material,o=this.matrixWorld;i!==void 0&&(n.boundingSphere===null&&n.computeBoundingSphere(),cu.copy(n.boundingSphere),cu.applyMatrix4(o),Wa.copy(t.ray).recast(t.near),!(cu.containsPoint(Wa.origin)===!1&&(Wa.intersectSphere(cu,Wv)===null||Wa.origin.distanceToSquared(Wv)>(t.far-t.near)**2))&&(kv.copy(o).invert(),Wa.copy(t.ray).applyMatrix4(kv),!(n.boundingBox!==null&&Wa.intersectsBox(n.boundingBox)===!1)&&this._computeIntersections(t,e,Wa)))}_computeIntersections(t,e,n){let i;const o=this.geometry,l=this.material,c=o.index,h=o.attributes.position,f=o.attributes.uv,p=o.attributes.uv1,m=o.attributes.normal,g=o.groups,v=o.drawRange;if(c!==null)if(Array.isArray(l))for(let x=0,b=g.length;x<b;x++){const S=g[x],_=l[S.materialIndex],E=Math.max(S.start,v.start),A=Math.min(c.count,Math.min(S.start+S.count,v.start+v.count));for(let T=E,U=A;T<U;T+=3){const D=c.getX(T),P=c.getX(T+1),O=c.getX(T+2);i=mu(this,_,t,n,f,p,m,D,P,O),i&&(i.faceIndex=Math.floor(T/3),i.face.materialIndex=S.materialIndex,e.push(i))}}else{const x=Math.max(0,v.start),b=Math.min(c.count,v.start+v.count);for(let S=x,_=b;S<_;S+=3){const E=c.getX(S),A=c.getX(S+1),T=c.getX(S+2);i=mu(this,l,t,n,f,p,m,E,A,T),i&&(i.faceIndex=Math.floor(S/3),e.push(i))}}else if(h!==void 0)if(Array.isArray(l))for(let x=0,b=g.length;x<b;x++){const S=g[x],_=l[S.materialIndex],E=Math.max(S.start,v.start),A=Math.min(h.count,Math.min(S.start+S.count,v.start+v.count));for(let T=E,U=A;T<U;T+=3){const D=T,P=T+1,O=T+2;i=mu(this,_,t,n,f,p,m,D,P,O),i&&(i.faceIndex=Math.floor(T/3),i.face.materialIndex=S.materialIndex,e.push(i))}}else{const x=Math.max(0,v.start),b=Math.min(h.count,v.start+v.count);for(let S=x,_=b;S<_;S+=3){const E=S,A=S+1,T=S+2;i=mu(this,l,t,n,f,p,m,E,A,T),i&&(i.faceIndex=Math.floor(S/3),e.push(i))}}}}function kT(s,t,e,n,i,o,l,c){let h;if(t.side===Qn?h=n.intersectTriangle(l,o,i,!0,c):h=n.intersectTriangle(i,o,l,t.side===zs,c),h===null)return null;pu.copy(c),pu.applyMatrix4(s.matrixWorld);const f=e.ray.origin.distanceTo(pu);return f<e.near||f>e.far?null:{distance:f,point:pu.clone(),object:s}}function mu(s,t,e,n,i,o,l,c,h,f){s.getVertexPosition(c,uu),s.getVertexPosition(h,hu),s.getVertexPosition(f,fu);const p=kT(s,t,e,n,uu,hu,fu,Xv);if(p){const m=new I;ai.getBarycoord(Xv,uu,hu,fu,m),i&&(p.uv=ai.getInterpolatedAttribute(i,c,h,f,m,new dt)),o&&(p.uv1=ai.getInterpolatedAttribute(o,c,h,f,m,new dt)),l&&(p.normal=ai.getInterpolatedAttribute(l,c,h,f,m,new I),p.normal.dot(n.direction)>0&&p.normal.multiplyScalar(-1));const g={a:c,b:h,c:f,normal:new I,materialIndex:0};ai.getNormal(uu,hu,fu,g.normal),p.face=g,p.barycoord=m}return p}class xr extends xe{constructor(t=1,e=1,n=1,i=1,o=1,l=1){super(),this.type="BoxGeometry",this.parameters={width:t,height:e,depth:n,widthSegments:i,heightSegments:o,depthSegments:l};const c=this;i=Math.floor(i),o=Math.floor(o),l=Math.floor(l);const h=[],f=[],p=[],m=[];let g=0,v=0;x("z","y","x",-1,-1,n,e,t,l,o,0),x("z","y","x",1,-1,n,e,-t,l,o,1),x("x","z","y",1,1,t,n,e,i,l,2),x("x","z","y",1,-1,t,n,-e,i,l,3),x("x","y","z",1,-1,t,e,n,i,o,4),x("x","y","z",-1,-1,t,e,-n,i,o,5),this.setIndex(h),this.setAttribute("position",new Jt(f,3)),this.setAttribute("normal",new Jt(p,3)),this.setAttribute("uv",new Jt(m,2));function x(b,S,_,E,A,T,U,D,P,O,C){const w=T/P,B=U/O,tt=T/2,X=U/2,Z=D/2,ot=P+1,k=O+1;let et=0,q=0;const ct=new I;for(let vt=0;vt<k;vt++){const xt=vt*B-X;for(let Ot=0;Ot<ot;Ot++){const ne=Ot*w-tt;ct[b]=ne*E,ct[S]=xt*A,ct[_]=Z,f.push(ct.x,ct.y,ct.z),ct[b]=0,ct[S]=0,ct[_]=D>0?1:-1,p.push(ct.x,ct.y,ct.z),m.push(Ot/P),m.push(1-vt/O),et+=1}}for(let vt=0;vt<O;vt++)for(let xt=0;xt<P;xt++){const Ot=g+xt+ot*vt,ne=g+xt+ot*(vt+1),jt=g+(xt+1)+ot*(vt+1),at=g+(xt+1)+ot*vt;h.push(Ot,ne,at),h.push(ne,jt,at),q+=6}c.addGroup(v,q,C),v+=q,g+=et}}copy(t){return super.copy(t),this.parameters=Object.assign({},t.parameters),this}static fromJSON(t){return new xr(t.width,t.height,t.depth,t.widthSegments,t.heightSegments,t.depthSegments)}}function Lo(s){const t={};for(const e in s){t[e]={};for(const n in s[e]){const i=s[e][n];i&&(i.isColor||i.isMatrix3||i.isMatrix4||i.isVector2||i.isVector3||i.isVector4||i.isTexture||i.isQuaternion)?i.isRenderTargetTexture?(console.warn("UniformsUtils: Textures of render targets cannot be cloned via cloneUniforms() or mergeUniforms()."),t[e][n]=null):t[e][n]=i.clone():Array.isArray(i)?t[e][n]=i.slice():t[e][n]=i}}return t}function Zn(s){const t={};for(let e=0;e<s.length;e++){const n=Lo(s[e]);for(const i in n)t[i]=n[i]}return t}function WT(s){const t=[];for(let e=0;e<s.length;e++)t.push(s[e].clone());return t}function Ex(s){const t=s.getRenderTarget();return t===null?s.outputColorSpace:t.isXRRenderTarget===!0?t.texture.colorSpace:Re.workingColorSpace}const Tx={clone:Lo,merge:Zn};var XT=`void main() {
	gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );
}`,qT=`void main() {
	gl_FragColor = vec4( 1.0, 0.0, 0.0, 1.0 );
}`;class Zi extends kn{constructor(t){super(),this.isShaderMaterial=!0,this.type="ShaderMaterial",this.defines={},this.uniforms={},this.uniformsGroups=[],this.vertexShader=XT,this.fragmentShader=qT,this.linewidth=1,this.wireframe=!1,this.wireframeLinewidth=1,this.fog=!1,this.lights=!1,this.clipping=!1,this.forceSinglePass=!0,this.extensions={clipCullDistance:!1,multiDraw:!1},this.defaultAttributeValues={color:[1,1,1],uv:[0,0],uv1:[0,0]},this.index0AttributeName=void 0,this.uniformsNeedUpdate=!1,this.glslVersion=null,t!==void 0&&this.setValues(t)}copy(t){return super.copy(t),this.fragmentShader=t.fragmentShader,this.vertexShader=t.vertexShader,this.uniforms=Lo(t.uniforms),this.uniformsGroups=WT(t.uniformsGroups),this.defines=Object.assign({},t.defines),this.wireframe=t.wireframe,this.wireframeLinewidth=t.wireframeLinewidth,this.fog=t.fog,this.lights=t.lights,this.clipping=t.clipping,this.extensions=Object.assign({},t.extensions),this.glslVersion=t.glslVersion,this}toJSON(t){const e=super.toJSON(t);e.glslVersion=this.glslVersion,e.uniforms={};for(const i in this.uniforms){const l=this.uniforms[i].value;l&&l.isTexture?e.uniforms[i]={type:"t",value:l.toJSON(t).uuid}:l&&l.isColor?e.uniforms[i]={type:"c",value:l.getHex()}:l&&l.isVector2?e.uniforms[i]={type:"v2",value:l.toArray()}:l&&l.isVector3?e.uniforms[i]={type:"v3",value:l.toArray()}:l&&l.isVector4?e.uniforms[i]={type:"v4",value:l.toArray()}:l&&l.isMatrix3?e.uniforms[i]={type:"m3",value:l.toArray()}:l&&l.isMatrix4?e.uniforms[i]={type:"m4",value:l.toArray()}:e.uniforms[i]={value:l}}Object.keys(this.defines).length>0&&(e.defines=this.defines),e.vertexShader=this.vertexShader,e.fragmentShader=this.fragmentShader,e.lights=this.lights,e.clipping=this.clipping;const n={};for(const i in this.extensions)this.extensions[i]===!0&&(n[i]=!0);return Object.keys(n).length>0&&(e.extensions=n),e}}class sf extends Le{constructor(){super(),this.isCamera=!0,this.type="Camera",this.matrixWorldInverse=new pe,this.projectionMatrix=new pe,this.projectionMatrixInverse=new pe,this.coordinateSystem=Si,this._reversedDepth=!1}get reversedDepth(){return this._reversedDepth}copy(t,e){return super.copy(t,e),this.matrixWorldInverse.copy(t.matrixWorldInverse),this.projectionMatrix.copy(t.projectionMatrix),this.projectionMatrixInverse.copy(t.projectionMatrixInverse),this.coordinateSystem=t.coordinateSystem,this}getWorldDirection(t){return super.getWorldDirection(t).negate()}updateMatrixWorld(t){super.updateMatrixWorld(t),this.matrixWorldInverse.copy(this.matrixWorld).invert()}updateWorldMatrix(t,e){super.updateWorldMatrix(t,e),this.matrixWorldInverse.copy(this.matrixWorld).invert()}clone(){return new this.constructor().copy(this)}}const ca=new I,qv=new dt,Yv=new dt;class cn extends sf{constructor(t=50,e=1,n=.1,i=2e3){super(),this.isPerspectiveCamera=!0,this.type="PerspectiveCamera",this.fov=t,this.zoom=1,this.near=n,this.far=i,this.focus=10,this.aspect=e,this.view=null,this.filmGauge=35,this.filmOffset=0,this.updateProjectionMatrix()}copy(t,e){return super.copy(t,e),this.fov=t.fov,this.zoom=t.zoom,this.near=t.near,this.far=t.far,this.focus=t.focus,this.aspect=t.aspect,this.view=t.view===null?null:Object.assign({},t.view),this.filmGauge=t.filmGauge,this.filmOffset=t.filmOffset,this}setFocalLength(t){const e=.5*this.getFilmHeight()/t;this.fov=Uo*2*Math.atan(e),this.updateProjectionMatrix()}getFocalLength(){const t=Math.tan(dr*.5*this.fov);return .5*this.getFilmHeight()/t}getEffectiveFOV(){return Uo*2*Math.atan(Math.tan(dr*.5*this.fov)/this.zoom)}getFilmWidth(){return this.filmGauge*Math.min(this.aspect,1)}getFilmHeight(){return this.filmGauge/Math.max(this.aspect,1)}getViewBounds(t,e,n){ca.set(-1,-1,.5).applyMatrix4(this.projectionMatrixInverse),e.set(ca.x,ca.y).multiplyScalar(-t/ca.z),ca.set(1,1,.5).applyMatrix4(this.projectionMatrixInverse),n.set(ca.x,ca.y).multiplyScalar(-t/ca.z)}getViewSize(t,e){return this.getViewBounds(t,qv,Yv),e.subVectors(Yv,qv)}setViewOffset(t,e,n,i,o,l){this.aspect=t/e,this.view===null&&(this.view={enabled:!0,fullWidth:1,fullHeight:1,offsetX:0,offsetY:0,width:1,height:1}),this.view.enabled=!0,this.view.fullWidth=t,this.view.fullHeight=e,this.view.offsetX=n,this.view.offsetY=i,this.view.width=o,this.view.height=l,this.updateProjectionMatrix()}clearViewOffset(){this.view!==null&&(this.view.enabled=!1),this.updateProjectionMatrix()}updateProjectionMatrix(){const t=this.near;let e=t*Math.tan(dr*.5*this.fov)/this.zoom,n=2*e,i=this.aspect*n,o=-.5*i;const l=this.view;if(this.view!==null&&this.view.enabled){const h=l.fullWidth,f=l.fullHeight;o+=l.offsetX*i/h,e-=l.offsetY*n/f,i*=l.width/h,n*=l.height/f}const c=this.filmOffset;c!==0&&(o+=t*c/this.getFilmWidth()),this.projectionMatrix.makePerspective(o,o+i,e,e-n,t,this.far,this.coordinateSystem,this.reversedDepth),this.projectionMatrixInverse.copy(this.projectionMatrix).invert()}toJSON(t){const e=super.toJSON(t);return e.object.fov=this.fov,e.object.zoom=this.zoom,e.object.near=this.near,e.object.far=this.far,e.object.focus=this.focus,e.object.aspect=this.aspect,this.view!==null&&(e.object.view=Object.assign({},this.view)),e.object.filmGauge=this.filmGauge,e.object.filmOffset=this.filmOffset,e}}const ao=-90,ro=1;class Ax extends Le{constructor(t,e,n){super(),this.type="CubeCamera",this.renderTarget=n,this.coordinateSystem=null,this.activeMipmapLevel=0;const i=new cn(ao,ro,t,e);i.layers=this.layers,this.add(i);const o=new cn(ao,ro,t,e);o.layers=this.layers,this.add(o);const l=new cn(ao,ro,t,e);l.layers=this.layers,this.add(l);const c=new cn(ao,ro,t,e);c.layers=this.layers,this.add(c);const h=new cn(ao,ro,t,e);h.layers=this.layers,this.add(h);const f=new cn(ao,ro,t,e);f.layers=this.layers,this.add(f)}updateCoordinateSystem(){const t=this.coordinateSystem,e=this.children.concat(),[n,i,o,l,c,h]=e;for(const f of e)this.remove(f);if(t===Si)n.up.set(0,1,0),n.lookAt(1,0,0),i.up.set(0,1,0),i.lookAt(-1,0,0),o.up.set(0,0,-1),o.lookAt(0,1,0),l.up.set(0,0,1),l.lookAt(0,-1,0),c.up.set(0,1,0),c.lookAt(0,0,1),h.up.set(0,1,0),h.lookAt(0,0,-1);else if(t===Do)n.up.set(0,-1,0),n.lookAt(-1,0,0),i.up.set(0,-1,0),i.lookAt(1,0,0),o.up.set(0,0,1),o.lookAt(0,1,0),l.up.set(0,0,-1),l.lookAt(0,-1,0),c.up.set(0,-1,0),c.lookAt(0,0,1),h.up.set(0,-1,0),h.lookAt(0,0,-1);else throw new Error("THREE.CubeCamera.updateCoordinateSystem(): Invalid coordinate system: "+t);for(const f of e)this.add(f),f.updateMatrixWorld()}update(t,e){this.parent===null&&this.updateMatrixWorld();const{renderTarget:n,activeMipmapLevel:i}=this;this.coordinateSystem!==t.coordinateSystem&&(this.coordinateSystem=t.coordinateSystem,this.updateCoordinateSystem());const[o,l,c,h,f,p]=this.children,m=t.getRenderTarget(),g=t.getActiveCubeFace(),v=t.getActiveMipmapLevel(),x=t.xr.enabled;t.xr.enabled=!1;const b=n.texture.generateMipmaps;n.texture.generateMipmaps=!1,t.setRenderTarget(n,0,i),t.render(e,o),t.setRenderTarget(n,1,i),t.render(e,l),t.setRenderTarget(n,2,i),t.render(e,c),t.setRenderTarget(n,3,i),t.render(e,h),t.setRenderTarget(n,4,i),t.render(e,f),n.texture.generateMipmaps=b,t.setRenderTarget(n,5,i),t.render(e,p),t.setRenderTarget(m,g,v),t.xr.enabled=x,n.texture.needsPMREMUpdate=!0}}class cc extends on{constructor(t=[],e=Fs,n,i,o,l,c,h,f,p){super(t,e,n,i,o,l,c,h,f,p),this.isCubeTexture=!0,this.flipY=!1}get images(){return this.image}set images(t){this.image=t}}class wx extends us{constructor(t=1,e={}){super(t,t,e),this.isWebGLCubeRenderTarget=!0;const n={width:t,height:t,depth:1},i=[n,n,n,n,n,n];this.texture=new cc(i),this._setTextureOptions(e),this.texture.isRenderTargetTexture=!0}fromEquirectangularTexture(t,e){this.texture.type=e.type,this.texture.colorSpace=e.colorSpace,this.texture.generateMipmaps=e.generateMipmaps,this.texture.minFilter=e.minFilter,this.texture.magFilter=e.magFilter;const n={uniforms:{tEquirect:{value:null}},vertexShader:`

				varying vec3 vWorldDirection;

				vec3 transformDirection( in vec3 dir, in mat4 matrix ) {

					return normalize( ( matrix * vec4( dir, 0.0 ) ).xyz );

				}

				void main() {

					vWorldDirection = transformDirection( position, modelMatrix );

					#include <begin_vertex>
					#include <project_vertex>

				}
			`,fragmentShader:`

				uniform sampler2D tEquirect;

				varying vec3 vWorldDirection;

				#include <common>

				void main() {

					vec3 direction = normalize( vWorldDirection );

					vec2 sampleUV = equirectUv( direction );

					gl_FragColor = texture2D( tEquirect, sampleUV );

				}
			`},i=new xr(5,5,5),o=new Zi({name:"CubemapFromEquirect",uniforms:Lo(n.uniforms),vertexShader:n.vertexShader,fragmentShader:n.fragmentShader,side:Qn,blending:Os});o.uniforms.tEquirect.value=e;const l=new dn(i,o),c=e.minFilter;return e.minFilter===rs&&(e.minFilter=mn),new Ax(1,10,this).update(t,l),e.minFilter=c,l.geometry.dispose(),l.material.dispose(),this}clear(t,e=!0,n=!0,i=!0){const o=t.getRenderTarget();for(let l=0;l<6;l++)t.setRenderTarget(this,l),t.clear(e,n,i);t.setRenderTarget(o)}}class Mo extends Le{constructor(){super(),this.isGroup=!0,this.type="Group"}}const YT={type:"move"};class Qu{constructor(){this._targetRay=null,this._grip=null,this._hand=null}getHandSpace(){return this._hand===null&&(this._hand=new Mo,this._hand.matrixAutoUpdate=!1,this._hand.visible=!1,this._hand.joints={},this._hand.inputState={pinching:!1}),this._hand}getTargetRaySpace(){return this._targetRay===null&&(this._targetRay=new Mo,this._targetRay.matrixAutoUpdate=!1,this._targetRay.visible=!1,this._targetRay.hasLinearVelocity=!1,this._targetRay.linearVelocity=new I,this._targetRay.hasAngularVelocity=!1,this._targetRay.angularVelocity=new I),this._targetRay}getGripSpace(){return this._grip===null&&(this._grip=new Mo,this._grip.matrixAutoUpdate=!1,this._grip.visible=!1,this._grip.hasLinearVelocity=!1,this._grip.linearVelocity=new I,this._grip.hasAngularVelocity=!1,this._grip.angularVelocity=new I),this._grip}dispatchEvent(t){return this._targetRay!==null&&this._targetRay.dispatchEvent(t),this._grip!==null&&this._grip.dispatchEvent(t),this._hand!==null&&this._hand.dispatchEvent(t),this}connect(t){if(t&&t.hand){const e=this._hand;if(e)for(const n of t.hand.values())this._getHandJoint(e,n)}return this.dispatchEvent({type:"connected",data:t}),this}disconnect(t){return this.dispatchEvent({type:"disconnected",data:t}),this._targetRay!==null&&(this._targetRay.visible=!1),this._grip!==null&&(this._grip.visible=!1),this._hand!==null&&(this._hand.visible=!1),this}update(t,e,n){let i=null,o=null,l=null;const c=this._targetRay,h=this._grip,f=this._hand;if(t&&e.session.visibilityState!=="visible-blurred"){if(f&&t.hand){l=!0;for(const b of t.hand.values()){const S=e.getJointPose(b,n),_=this._getHandJoint(f,b);S!==null&&(_.matrix.fromArray(S.transform.matrix),_.matrix.decompose(_.position,_.rotation,_.scale),_.matrixWorldNeedsUpdate=!0,_.jointRadius=S.radius),_.visible=S!==null}const p=f.joints["index-finger-tip"],m=f.joints["thumb-tip"],g=p.position.distanceTo(m.position),v=.02,x=.005;f.inputState.pinching&&g>v+x?(f.inputState.pinching=!1,this.dispatchEvent({type:"pinchend",handedness:t.handedness,target:this})):!f.inputState.pinching&&g<=v-x&&(f.inputState.pinching=!0,this.dispatchEvent({type:"pinchstart",handedness:t.handedness,target:this}))}else h!==null&&t.gripSpace&&(o=e.getPose(t.gripSpace,n),o!==null&&(h.matrix.fromArray(o.transform.matrix),h.matrix.decompose(h.position,h.rotation,h.scale),h.matrixWorldNeedsUpdate=!0,o.linearVelocity?(h.hasLinearVelocity=!0,h.linearVelocity.copy(o.linearVelocity)):h.hasLinearVelocity=!1,o.angularVelocity?(h.hasAngularVelocity=!0,h.angularVelocity.copy(o.angularVelocity)):h.hasAngularVelocity=!1));c!==null&&(i=e.getPose(t.targetRaySpace,n),i===null&&o!==null&&(i=o),i!==null&&(c.matrix.fromArray(i.transform.matrix),c.matrix.decompose(c.position,c.rotation,c.scale),c.matrixWorldNeedsUpdate=!0,i.linearVelocity?(c.hasLinearVelocity=!0,c.linearVelocity.copy(i.linearVelocity)):c.hasLinearVelocity=!1,i.angularVelocity?(c.hasAngularVelocity=!0,c.angularVelocity.copy(i.angularVelocity)):c.hasAngularVelocity=!1,this.dispatchEvent(YT)))}return c!==null&&(c.visible=i!==null),h!==null&&(h.visible=o!==null),f!==null&&(f.visible=l!==null),this}_getHandJoint(t,e){if(t.joints[e.jointName]===void 0){const n=new Mo;n.matrixAutoUpdate=!1,n.visible=!1,t.joints[e.jointName]=n,t.add(n)}return t.joints[e.jointName]}}class af{constructor(t,e=25e-5){this.isFogExp2=!0,this.name="",this.color=new kt(t),this.density=e}clone(){return new af(this.color,this.density)}toJSON(){return{type:"FogExp2",name:this.name,color:this.color.getHex(),density:this.density}}}class rf{constructor(t,e=1,n=1e3){this.isFog=!0,this.name="",this.color=new kt(t),this.near=e,this.far=n}clone(){return new rf(this.color,this.near,this.far)}toJSON(){return{type:"Fog",name:this.name,color:this.color.getHex(),near:this.near,far:this.far}}}class Gm extends Le{constructor(){super(),this.isScene=!0,this.type="Scene",this.background=null,this.environment=null,this.fog=null,this.backgroundBlurriness=0,this.backgroundIntensity=1,this.backgroundRotation=new bi,this.environmentIntensity=1,this.environmentRotation=new bi,this.overrideMaterial=null,typeof __THREE_DEVTOOLS__<"u"&&__THREE_DEVTOOLS__.dispatchEvent(new CustomEvent("observe",{detail:this}))}copy(t,e){return super.copy(t,e),t.background!==null&&(this.background=t.background.clone()),t.environment!==null&&(this.environment=t.environment.clone()),t.fog!==null&&(this.fog=t.fog.clone()),this.backgroundBlurriness=t.backgroundBlurriness,this.backgroundIntensity=t.backgroundIntensity,this.backgroundRotation.copy(t.backgroundRotation),this.environmentIntensity=t.environmentIntensity,this.environmentRotation.copy(t.environmentRotation),t.overrideMaterial!==null&&(this.overrideMaterial=t.overrideMaterial.clone()),this.matrixAutoUpdate=t.matrixAutoUpdate,this}toJSON(t){const e=super.toJSON(t);return this.fog!==null&&(e.object.fog=this.fog.toJSON()),this.backgroundBlurriness>0&&(e.object.backgroundBlurriness=this.backgroundBlurriness),this.backgroundIntensity!==1&&(e.object.backgroundIntensity=this.backgroundIntensity),e.object.backgroundRotation=this.backgroundRotation.toArray(),this.environmentIntensity!==1&&(e.object.environmentIntensity=this.environmentIntensity),e.object.environmentRotation=this.environmentRotation.toArray(),e}}class of{constructor(t,e){this.isInterleavedBuffer=!0,this.array=t,this.stride=e,this.count=t!==void 0?t.length/e:0,this.usage=Kl,this.updateRanges=[],this.version=0,this.uuid=Mi()}onUploadCallback(){}set needsUpdate(t){t===!0&&this.version++}setUsage(t){return this.usage=t,this}addUpdateRange(t,e){this.updateRanges.push({start:t,count:e})}clearUpdateRanges(){this.updateRanges.length=0}copy(t){return this.array=new t.array.constructor(t.array),this.count=t.count,this.stride=t.stride,this.usage=t.usage,this}copyAt(t,e,n){t*=this.stride,n*=e.stride;for(let i=0,o=this.stride;i<o;i++)this.array[t+i]=e.array[n+i];return this}set(t,e=0){return this.array.set(t,e),this}clone(t){t.arrayBuffers===void 0&&(t.arrayBuffers={}),this.array.buffer._uuid===void 0&&(this.array.buffer._uuid=Mi()),t.arrayBuffers[this.array.buffer._uuid]===void 0&&(t.arrayBuffers[this.array.buffer._uuid]=this.array.slice(0).buffer);const e=new this.array.constructor(t.arrayBuffers[this.array.buffer._uuid]),n=new this.constructor(e,this.stride);return n.setUsage(this.usage),n}onUpload(t){return this.onUploadCallback=t,this}toJSON(t){return t.arrayBuffers===void 0&&(t.arrayBuffers={}),this.array.buffer._uuid===void 0&&(this.array.buffer._uuid=Mi()),t.arrayBuffers[this.array.buffer._uuid]===void 0&&(t.arrayBuffers[this.array.buffer._uuid]=Array.from(new Uint32Array(this.array.buffer))),{uuid:this.uuid,buffer:this.array.buffer._uuid,type:this.array.constructor.name,stride:this.stride}}}const jn=new I;class gr{constructor(t,e,n,i=!1){this.isInterleavedBufferAttribute=!0,this.name="",this.data=t,this.itemSize=e,this.offset=n,this.normalized=i}get count(){return this.data.count}get array(){return this.data.array}set needsUpdate(t){this.data.needsUpdate=t}applyMatrix4(t){for(let e=0,n=this.data.count;e<n;e++)jn.fromBufferAttribute(this,e),jn.applyMatrix4(t),this.setXYZ(e,jn.x,jn.y,jn.z);return this}applyNormalMatrix(t){for(let e=0,n=this.count;e<n;e++)jn.fromBufferAttribute(this,e),jn.applyNormalMatrix(t),this.setXYZ(e,jn.x,jn.y,jn.z);return this}transformDirection(t){for(let e=0,n=this.count;e<n;e++)jn.fromBufferAttribute(this,e),jn.transformDirection(t),this.setXYZ(e,jn.x,jn.y,jn.z);return this}getComponent(t,e){let n=this.array[t*this.data.stride+this.offset+e];return this.normalized&&(n=Jn(n,this.array)),n}setComponent(t,e,n){return this.normalized&&(n=ye(n,this.array)),this.data.array[t*this.data.stride+this.offset+e]=n,this}setX(t,e){return this.normalized&&(e=ye(e,this.array)),this.data.array[t*this.data.stride+this.offset]=e,this}setY(t,e){return this.normalized&&(e=ye(e,this.array)),this.data.array[t*this.data.stride+this.offset+1]=e,this}setZ(t,e){return this.normalized&&(e=ye(e,this.array)),this.data.array[t*this.data.stride+this.offset+2]=e,this}setW(t,e){return this.normalized&&(e=ye(e,this.array)),this.data.array[t*this.data.stride+this.offset+3]=e,this}getX(t){let e=this.data.array[t*this.data.stride+this.offset];return this.normalized&&(e=Jn(e,this.array)),e}getY(t){let e=this.data.array[t*this.data.stride+this.offset+1];return this.normalized&&(e=Jn(e,this.array)),e}getZ(t){let e=this.data.array[t*this.data.stride+this.offset+2];return this.normalized&&(e=Jn(e,this.array)),e}getW(t){let e=this.data.array[t*this.data.stride+this.offset+3];return this.normalized&&(e=Jn(e,this.array)),e}setXY(t,e,n){return t=t*this.data.stride+this.offset,this.normalized&&(e=ye(e,this.array),n=ye(n,this.array)),this.data.array[t+0]=e,this.data.array[t+1]=n,this}setXYZ(t,e,n,i){return t=t*this.data.stride+this.offset,this.normalized&&(e=ye(e,this.array),n=ye(n,this.array),i=ye(i,this.array)),this.data.array[t+0]=e,this.data.array[t+1]=n,this.data.array[t+2]=i,this}setXYZW(t,e,n,i,o){return t=t*this.data.stride+this.offset,this.normalized&&(e=ye(e,this.array),n=ye(n,this.array),i=ye(i,this.array),o=ye(o,this.array)),this.data.array[t+0]=e,this.data.array[t+1]=n,this.data.array[t+2]=i,this.data.array[t+3]=o,this}clone(t){if(t===void 0){console.log("THREE.InterleavedBufferAttribute.clone(): Cloning an interleaved buffer attribute will de-interleave buffer data.");const e=[];for(let n=0;n<this.count;n++){const i=n*this.data.stride+this.offset;for(let o=0;o<this.itemSize;o++)e.push(this.data.array[i+o])}return new Xe(new this.array.constructor(e),this.itemSize,this.normalized)}else return t.interleavedBuffers===void 0&&(t.interleavedBuffers={}),t.interleavedBuffers[this.data.uuid]===void 0&&(t.interleavedBuffers[this.data.uuid]=this.data.clone(t)),new gr(t.interleavedBuffers[this.data.uuid],this.itemSize,this.offset,this.normalized)}toJSON(t){if(t===void 0){console.log("THREE.InterleavedBufferAttribute.toJSON(): Serializing an interleaved buffer attribute will de-interleave buffer data.");const e=[];for(let n=0;n<this.count;n++){const i=n*this.data.stride+this.offset;for(let o=0;o<this.itemSize;o++)e.push(this.data.array[i+o])}return{itemSize:this.itemSize,type:this.array.constructor.name,array:e,normalized:this.normalized}}else return t.interleavedBuffers===void 0&&(t.interleavedBuffers={}),t.interleavedBuffers[this.data.uuid]===void 0&&(t.interleavedBuffers[this.data.uuid]=this.data.toJSON(t)),{isInterleavedBufferAttribute:!0,itemSize:this.itemSize,data:this.data.uuid,offset:this.offset,normalized:this.normalized}}}class km extends kn{constructor(t){super(),this.isSpriteMaterial=!0,this.type="SpriteMaterial",this.color=new kt(16777215),this.map=null,this.alphaMap=null,this.rotation=0,this.sizeAttenuation=!0,this.transparent=!0,this.fog=!0,this.setValues(t)}copy(t){return super.copy(t),this.color.copy(t.color),this.map=t.map,this.alphaMap=t.alphaMap,this.rotation=t.rotation,this.sizeAttenuation=t.sizeAttenuation,this.fog=t.fog,this}}let oo;const Sl=new I,lo=new I,co=new I,uo=new dt,Ml=new dt,Cx=new pe,gu=new I,bl=new I,vu=new I,jv=new dt,gp=new dt,Zv=new dt;class Rx extends Le{constructor(t=new km){if(super(),this.isSprite=!0,this.type="Sprite",oo===void 0){oo=new xe;const e=new Float32Array([-.5,-.5,0,0,0,.5,-.5,0,1,0,.5,.5,0,1,1,-.5,.5,0,0,1]),n=new of(e,5);oo.setIndex([0,1,2,0,2,3]),oo.setAttribute("position",new gr(n,3,0,!1)),oo.setAttribute("uv",new gr(n,2,3,!1))}this.geometry=oo,this.material=t,this.center=new dt(.5,.5),this.count=1}raycast(t,e){t.camera===null&&console.error('THREE.Sprite: "Raycaster.camera" needs to be set in order to raycast against sprites.'),lo.setFromMatrixScale(this.matrixWorld),Cx.copy(t.camera.matrixWorld),this.modelViewMatrix.multiplyMatrices(t.camera.matrixWorldInverse,this.matrixWorld),co.setFromMatrixPosition(this.modelViewMatrix),t.camera.isPerspectiveCamera&&this.material.sizeAttenuation===!1&&lo.multiplyScalar(-co.z);const n=this.material.rotation;let i,o;n!==0&&(o=Math.cos(n),i=Math.sin(n));const l=this.center;_u(gu.set(-.5,-.5,0),co,l,lo,i,o),_u(bl.set(.5,-.5,0),co,l,lo,i,o),_u(vu.set(.5,.5,0),co,l,lo,i,o),jv.set(0,0),gp.set(1,0),Zv.set(1,1);let c=t.ray.intersectTriangle(gu,bl,vu,!1,Sl);if(c===null&&(_u(bl.set(-.5,.5,0),co,l,lo,i,o),gp.set(0,1),c=t.ray.intersectTriangle(gu,vu,bl,!1,Sl),c===null))return;const h=t.ray.origin.distanceTo(Sl);h<t.near||h>t.far||e.push({distance:h,point:Sl.clone(),uv:ai.getInterpolation(Sl,gu,bl,vu,jv,gp,Zv,new dt),face:null,object:this})}copy(t,e){return super.copy(t,e),t.center!==void 0&&this.center.copy(t.center),this.material=t.material,this}}function _u(s,t,e,n,i,o){uo.subVectors(s,e).addScalar(.5).multiply(n),i!==void 0?(Ml.x=o*uo.x-i*uo.y,Ml.y=i*uo.x+o*uo.y):Ml.copy(uo),s.copy(t),s.x+=Ml.x,s.y+=Ml.y,s.applyMatrix4(Cx)}const yu=new I,Kv=new I;class Dx extends Le{constructor(){super(),this.isLOD=!0,this._currentLevel=0,this.type="LOD",Object.defineProperties(this,{levels:{enumerable:!0,value:[]}}),this.autoUpdate=!0}copy(t){super.copy(t,!1);const e=t.levels;for(let n=0,i=e.length;n<i;n++){const o=e[n];this.addLevel(o.object.clone(),o.distance,o.hysteresis)}return this.autoUpdate=t.autoUpdate,this}addLevel(t,e=0,n=0){e=Math.abs(e);const i=this.levels;let o;for(o=0;o<i.length&&!(e<i[o].distance);o++);return i.splice(o,0,{distance:e,hysteresis:n,object:t}),this.add(t),this}removeLevel(t){const e=this.levels;for(let n=0;n<e.length;n++)if(e[n].distance===t){const i=e.splice(n,1);return this.remove(i[0].object),!0}return!1}getCurrentLevel(){return this._currentLevel}getObjectForDistance(t){const e=this.levels;if(e.length>0){let n,i;for(n=1,i=e.length;n<i;n++){let o=e[n].distance;if(e[n].object.visible&&(o-=o*e[n].hysteresis),t<o)break}return e[n-1].object}return null}raycast(t,e){if(this.levels.length>0){yu.setFromMatrixPosition(this.matrixWorld);const i=t.ray.origin.distanceTo(yu);this.getObjectForDistance(i).raycast(t,e)}}update(t){const e=this.levels;if(e.length>1){yu.setFromMatrixPosition(t.matrixWorld),Kv.setFromMatrixPosition(this.matrixWorld);const n=yu.distanceTo(Kv)/t.zoom;e[0].object.visible=!0;let i,o;for(i=1,o=e.length;i<o;i++){let l=e[i].distance;if(e[i].object.visible&&(l-=l*e[i].hysteresis),n>=l)e[i-1].object.visible=!1,e[i].object.visible=!0;else break}for(this._currentLevel=i-1;i<o;i++)e[i].object.visible=!1}}toJSON(t){const e=super.toJSON(t);this.autoUpdate===!1&&(e.object.autoUpdate=!1),e.object.levels=[];const n=this.levels;for(let i=0,o=n.length;i<o;i++){const l=n[i];e.object.levels.push({object:l.object.uuid,distance:l.distance,hysteresis:l.hysteresis})}return e}}const Jv=new I,Qv=new Ne,$v=new Ne,jT=new I,t_=new pe,xu=new I,vp=new Rn,e_=new pe,_p=new yr;class Ux extends dn{constructor(t,e){super(t,e),this.isSkinnedMesh=!0,this.type="SkinnedMesh",this.bindMode=om,this.bindMatrix=new pe,this.bindMatrixInverse=new pe,this.boundingBox=null,this.boundingSphere=null}computeBoundingBox(){const t=this.geometry;this.boundingBox===null&&(this.boundingBox=new Gn),this.boundingBox.makeEmpty();const e=t.getAttribute("position");for(let n=0;n<e.count;n++)this.getVertexPosition(n,xu),this.boundingBox.expandByPoint(xu)}computeBoundingSphere(){const t=this.geometry;this.boundingSphere===null&&(this.boundingSphere=new Rn),this.boundingSphere.makeEmpty();const e=t.getAttribute("position");for(let n=0;n<e.count;n++)this.getVertexPosition(n,xu),this.boundingSphere.expandByPoint(xu)}copy(t,e){return super.copy(t,e),this.bindMode=t.bindMode,this.bindMatrix.copy(t.bindMatrix),this.bindMatrixInverse.copy(t.bindMatrixInverse),this.skeleton=t.skeleton,t.boundingBox!==null&&(this.boundingBox=t.boundingBox.clone()),t.boundingSphere!==null&&(this.boundingSphere=t.boundingSphere.clone()),this}raycast(t,e){const n=this.material,i=this.matrixWorld;n!==void 0&&(this.boundingSphere===null&&this.computeBoundingSphere(),vp.copy(this.boundingSphere),vp.applyMatrix4(i),t.ray.intersectsSphere(vp)!==!1&&(e_.copy(i).invert(),_p.copy(t.ray).applyMatrix4(e_),!(this.boundingBox!==null&&_p.intersectsBox(this.boundingBox)===!1)&&this._computeIntersections(t,e,_p)))}getVertexPosition(t,e){return super.getVertexPosition(t,e),this.applyBoneTransform(t,e),e}bind(t,e){this.skeleton=t,e===void 0&&(this.updateMatrixWorld(!0),this.skeleton.calculateInverses(),e=this.matrixWorld),this.bindMatrix.copy(e),this.bindMatrixInverse.copy(e).invert()}pose(){this.skeleton.pose()}normalizeSkinWeights(){const t=new Ne,e=this.geometry.attributes.skinWeight;for(let n=0,i=e.count;n<i;n++){t.fromBufferAttribute(e,n);const o=1/t.manhattanLength();o!==1/0?t.multiplyScalar(o):t.set(1,0,0,0),e.setXYZW(n,t.x,t.y,t.z,t.w)}}updateMatrixWorld(t){super.updateMatrixWorld(t),this.bindMode===om?this.bindMatrixInverse.copy(this.matrixWorld).invert():this.bindMode===rx?this.bindMatrixInverse.copy(this.bindMatrix).invert():console.warn("THREE.SkinnedMesh: Unrecognized bindMode: "+this.bindMode)}applyBoneTransform(t,e){const n=this.skeleton,i=this.geometry;Qv.fromBufferAttribute(i.attributes.skinIndex,t),$v.fromBufferAttribute(i.attributes.skinWeight,t),Jv.copy(e).applyMatrix4(this.bindMatrix),e.set(0,0,0);for(let o=0;o<4;o++){const l=$v.getComponent(o);if(l!==0){const c=Qv.getComponent(o);t_.multiplyMatrices(n.bones[c].matrixWorld,n.boneInverses[c]),e.addScaledVector(jT.copy(Jv).applyMatrix4(t_),l)}}return e.applyMatrix4(this.bindMatrixInverse)}}class Wm extends Le{constructor(){super(),this.isBone=!0,this.type="Bone"}}class cs extends on{constructor(t=null,e=1,n=1,i,o,l,c,h,f=Cn,p=Cn,m,g){super(null,l,c,h,f,p,i,o,m,g),this.isDataTexture=!0,this.image={data:t,width:e,height:n},this.generateMipmaps=!1,this.flipY=!1,this.unpackAlignment=1}}const n_=new pe,ZT=new pe;class lf{constructor(t=[],e=[]){this.uuid=Mi(),this.bones=t.slice(0),this.boneInverses=e,this.boneMatrices=null,this.boneTexture=null,this.init()}init(){const t=this.bones,e=this.boneInverses;if(this.boneMatrices=new Float32Array(t.length*16),e.length===0)this.calculateInverses();else if(t.length!==e.length){console.warn("THREE.Skeleton: Number of inverse bone matrices does not match amount of bones."),this.boneInverses=[];for(let n=0,i=this.bones.length;n<i;n++)this.boneInverses.push(new pe)}}calculateInverses(){this.boneInverses.length=0;for(let t=0,e=this.bones.length;t<e;t++){const n=new pe;this.bones[t]&&n.copy(this.bones[t].matrixWorld).invert(),this.boneInverses.push(n)}}pose(){for(let t=0,e=this.bones.length;t<e;t++){const n=this.bones[t];n&&n.matrixWorld.copy(this.boneInverses[t]).invert()}for(let t=0,e=this.bones.length;t<e;t++){const n=this.bones[t];n&&(n.parent&&n.parent.isBone?(n.matrix.copy(n.parent.matrixWorld).invert(),n.matrix.multiply(n.matrixWorld)):n.matrix.copy(n.matrixWorld),n.matrix.decompose(n.position,n.quaternion,n.scale))}}update(){const t=this.bones,e=this.boneInverses,n=this.boneMatrices,i=this.boneTexture;for(let o=0,l=t.length;o<l;o++){const c=t[o]?t[o].matrixWorld:ZT;n_.multiplyMatrices(c,e[o]),n_.toArray(n,o*16)}i!==null&&(i.needsUpdate=!0)}clone(){return new lf(this.bones,this.boneInverses)}computeBoneTexture(){let t=Math.sqrt(this.bones.length*4);t=Math.ceil(t/4)*4,t=Math.max(t,4);const e=new Float32Array(t*t*4);e.set(this.boneMatrices);const n=new cs(e,t,t,Hn,ri);return n.needsUpdate=!0,this.boneMatrices=e,this.boneTexture=n,this}getBoneByName(t){for(let e=0,n=this.bones.length;e<n;e++){const i=this.bones[e];if(i.name===t)return i}}dispose(){this.boneTexture!==null&&(this.boneTexture.dispose(),this.boneTexture=null)}fromJSON(t,e){this.uuid=t.uuid;for(let n=0,i=t.bones.length;n<i;n++){const o=t.bones[n];let l=e[o];l===void 0&&(console.warn("THREE.Skeleton: No bone found with UUID:",o),l=new Wm),this.bones.push(l),this.boneInverses.push(new pe().fromArray(t.boneInverses[n]))}return this.init(),this}toJSON(){const t={metadata:{version:4.7,type:"Skeleton",generator:"Skeleton.toJSON"},bones:[],boneInverses:[]};t.uuid=this.uuid;const e=this.bones,n=this.boneInverses;for(let i=0,o=e.length;i<o;i++){const l=e[i];t.bones.push(l.uuid);const c=n[i];t.boneInverses.push(c.toArray())}return t}}class Po extends Xe{constructor(t,e,n,i=1){super(t,e,n),this.isInstancedBufferAttribute=!0,this.meshPerAttribute=i}copy(t){return super.copy(t),this.meshPerAttribute=t.meshPerAttribute,this}toJSON(){const t=super.toJSON();return t.meshPerAttribute=this.meshPerAttribute,t.isInstancedBufferAttribute=!0,t}}const ho=new pe,i_=new pe,Su=[],s_=new Gn,KT=new pe,El=new dn,Tl=new Rn;class Nx extends dn{constructor(t,e,n){super(t,e),this.isInstancedMesh=!0,this.instanceMatrix=new Po(new Float32Array(n*16),16),this.instanceColor=null,this.morphTexture=null,this.count=n,this.boundingBox=null,this.boundingSphere=null;for(let i=0;i<n;i++)this.setMatrixAt(i,KT)}computeBoundingBox(){const t=this.geometry,e=this.count;this.boundingBox===null&&(this.boundingBox=new Gn),t.boundingBox===null&&t.computeBoundingBox(),this.boundingBox.makeEmpty();for(let n=0;n<e;n++)this.getMatrixAt(n,ho),s_.copy(t.boundingBox).applyMatrix4(ho),this.boundingBox.union(s_)}computeBoundingSphere(){const t=this.geometry,e=this.count;this.boundingSphere===null&&(this.boundingSphere=new Rn),t.boundingSphere===null&&t.computeBoundingSphere(),this.boundingSphere.makeEmpty();for(let n=0;n<e;n++)this.getMatrixAt(n,ho),Tl.copy(t.boundingSphere).applyMatrix4(ho),this.boundingSphere.union(Tl)}copy(t,e){return super.copy(t,e),this.instanceMatrix.copy(t.instanceMatrix),t.morphTexture!==null&&(this.morphTexture=t.morphTexture.clone()),t.instanceColor!==null&&(this.instanceColor=t.instanceColor.clone()),this.count=t.count,t.boundingBox!==null&&(this.boundingBox=t.boundingBox.clone()),t.boundingSphere!==null&&(this.boundingSphere=t.boundingSphere.clone()),this}getColorAt(t,e){e.fromArray(this.instanceColor.array,t*3)}getMatrixAt(t,e){e.fromArray(this.instanceMatrix.array,t*16)}getMorphAt(t,e){const n=e.morphTargetInfluences,i=this.morphTexture.source.data.data,o=n.length+1,l=t*o+1;for(let c=0;c<n.length;c++)n[c]=i[l+c]}raycast(t,e){const n=this.matrixWorld,i=this.count;if(El.geometry=this.geometry,El.material=this.material,El.material!==void 0&&(this.boundingSphere===null&&this.computeBoundingSphere(),Tl.copy(this.boundingSphere),Tl.applyMatrix4(n),t.ray.intersectsSphere(Tl)!==!1))for(let o=0;o<i;o++){this.getMatrixAt(o,ho),i_.multiplyMatrices(n,ho),El.matrixWorld=i_,El.raycast(t,Su);for(let l=0,c=Su.length;l<c;l++){const h=Su[l];h.instanceId=o,h.object=this,e.push(h)}Su.length=0}}setColorAt(t,e){this.instanceColor===null&&(this.instanceColor=new Po(new Float32Array(this.instanceMatrix.count*3).fill(1),3)),e.toArray(this.instanceColor.array,t*3)}setMatrixAt(t,e){e.toArray(this.instanceMatrix.array,t*16)}setMorphAt(t,e){const n=e.morphTargetInfluences,i=n.length+1;this.morphTexture===null&&(this.morphTexture=new cs(new Float32Array(i*this.count),i,this.count,Jh,ri));const o=this.morphTexture.source.data.data;let l=0;for(let f=0;f<n.length;f++)l+=n[f];const c=this.geometry.morphTargetsRelative?1:1-l,h=i*t;o[h]=c,o.set(n,h+1)}updateMorphTargets(){}dispose(){this.dispatchEvent({type:"dispose"}),this.morphTexture!==null&&(this.morphTexture.dispose(),this.morphTexture=null)}}const yp=new I,JT=new I,QT=new ve;class Ls{constructor(t=new I(1,0,0),e=0){this.isPlane=!0,this.normal=t,this.constant=e}set(t,e){return this.normal.copy(t),this.constant=e,this}setComponents(t,e,n,i){return this.normal.set(t,e,n),this.constant=i,this}setFromNormalAndCoplanarPoint(t,e){return this.normal.copy(t),this.constant=-e.dot(this.normal),this}setFromCoplanarPoints(t,e,n){const i=yp.subVectors(n,e).cross(JT.subVectors(t,e)).normalize();return this.setFromNormalAndCoplanarPoint(i,t),this}copy(t){return this.normal.copy(t.normal),this.constant=t.constant,this}normalize(){const t=1/this.normal.length();return this.normal.multiplyScalar(t),this.constant*=t,this}negate(){return this.constant*=-1,this.normal.negate(),this}distanceToPoint(t){return this.normal.dot(t)+this.constant}distanceToSphere(t){return this.distanceToPoint(t.center)-t.radius}projectPoint(t,e){return e.copy(t).addScaledVector(this.normal,-this.distanceToPoint(t))}intersectLine(t,e){const n=t.delta(yp),i=this.normal.dot(n);if(i===0)return this.distanceToPoint(t.start)===0?e.copy(t.start):null;const o=-(t.start.dot(this.normal)+this.constant)/i;return o<0||o>1?null:e.copy(t.start).addScaledVector(n,o)}intersectsLine(t){const e=this.distanceToPoint(t.start),n=this.distanceToPoint(t.end);return e<0&&n>0||n<0&&e>0}intersectsBox(t){return t.intersectsPlane(this)}intersectsSphere(t){return t.intersectsPlane(this)}coplanarPoint(t){return t.copy(this.normal).multiplyScalar(-this.constant)}applyMatrix4(t,e){const n=e||QT.getNormalMatrix(t),i=this.coplanarPoint(yp).applyMatrix4(t),o=this.normal.applyMatrix3(n).normalize();return this.constant=-i.dot(o),this}translate(t){return this.constant-=t.dot(this.normal),this}equals(t){return t.normal.equals(this.normal)&&t.constant===this.constant}clone(){return new this.constructor().copy(this)}}const Xa=new Rn,$T=new dt(.5,.5),Mu=new I;class Fo{constructor(t=new Ls,e=new Ls,n=new Ls,i=new Ls,o=new Ls,l=new Ls){this.planes=[t,e,n,i,o,l]}set(t,e,n,i,o,l){const c=this.planes;return c[0].copy(t),c[1].copy(e),c[2].copy(n),c[3].copy(i),c[4].copy(o),c[5].copy(l),this}copy(t){const e=this.planes;for(let n=0;n<6;n++)e[n].copy(t.planes[n]);return this}setFromProjectionMatrix(t,e=Si,n=!1){const i=this.planes,o=t.elements,l=o[0],c=o[1],h=o[2],f=o[3],p=o[4],m=o[5],g=o[6],v=o[7],x=o[8],b=o[9],S=o[10],_=o[11],E=o[12],A=o[13],T=o[14],U=o[15];if(i[0].setComponents(f-l,v-p,_-x,U-E).normalize(),i[1].setComponents(f+l,v+p,_+x,U+E).normalize(),i[2].setComponents(f+c,v+m,_+b,U+A).normalize(),i[3].setComponents(f-c,v-m,_-b,U-A).normalize(),n)i[4].setComponents(h,g,S,T).normalize(),i[5].setComponents(f-h,v-g,_-S,U-T).normalize();else if(i[4].setComponents(f-h,v-g,_-S,U-T).normalize(),e===Si)i[5].setComponents(f+h,v+g,_+S,U+T).normalize();else if(e===Do)i[5].setComponents(h,g,S,T).normalize();else throw new Error("THREE.Frustum.setFromProjectionMatrix(): Invalid coordinate system: "+e);return this}intersectsObject(t){if(t.boundingSphere!==void 0)t.boundingSphere===null&&t.computeBoundingSphere(),Xa.copy(t.boundingSphere).applyMatrix4(t.matrixWorld);else{const e=t.geometry;e.boundingSphere===null&&e.computeBoundingSphere(),Xa.copy(e.boundingSphere).applyMatrix4(t.matrixWorld)}return this.intersectsSphere(Xa)}intersectsSprite(t){Xa.center.set(0,0,0);const e=$T.distanceTo(t.center);return Xa.radius=.7071067811865476+e,Xa.applyMatrix4(t.matrixWorld),this.intersectsSphere(Xa)}intersectsSphere(t){const e=this.planes,n=t.center,i=-t.radius;for(let o=0;o<6;o++)if(e[o].distanceToPoint(n)<i)return!1;return!0}intersectsBox(t){const e=this.planes;for(let n=0;n<6;n++){const i=e[n];if(Mu.x=i.normal.x>0?t.max.x:t.min.x,Mu.y=i.normal.y>0?t.max.y:t.min.y,Mu.z=i.normal.z>0?t.max.z:t.min.z,i.distanceToPoint(Mu)<0)return!1}return!0}containsPoint(t){const e=this.planes;for(let n=0;n<6;n++)if(e[n].distanceToPoint(t)<0)return!1;return!0}clone(){return new this.constructor().copy(this)}}const es=new pe,ns=new Fo;class cf{constructor(){this.coordinateSystem=Si}intersectsObject(t,e){if(!e.isArrayCamera||e.cameras.length===0)return!1;for(let n=0;n<e.cameras.length;n++){const i=e.cameras[n];if(es.multiplyMatrices(i.projectionMatrix,i.matrixWorldInverse),ns.setFromProjectionMatrix(es,i.coordinateSystem,i.reversedDepth),ns.intersectsObject(t))return!0}return!1}intersectsSprite(t,e){if(!e||!e.cameras||e.cameras.length===0)return!1;for(let n=0;n<e.cameras.length;n++){const i=e.cameras[n];if(es.multiplyMatrices(i.projectionMatrix,i.matrixWorldInverse),ns.setFromProjectionMatrix(es,i.coordinateSystem,i.reversedDepth),ns.intersectsSprite(t))return!0}return!1}intersectsSphere(t,e){if(!e||!e.cameras||e.cameras.length===0)return!1;for(let n=0;n<e.cameras.length;n++){const i=e.cameras[n];if(es.multiplyMatrices(i.projectionMatrix,i.matrixWorldInverse),ns.setFromProjectionMatrix(es,i.coordinateSystem,i.reversedDepth),ns.intersectsSphere(t))return!0}return!1}intersectsBox(t,e){if(!e||!e.cameras||e.cameras.length===0)return!1;for(let n=0;n<e.cameras.length;n++){const i=e.cameras[n];if(es.multiplyMatrices(i.projectionMatrix,i.matrixWorldInverse),ns.setFromProjectionMatrix(es,i.coordinateSystem,i.reversedDepth),ns.intersectsBox(t))return!0}return!1}containsPoint(t,e){if(!e||!e.cameras||e.cameras.length===0)return!1;for(let n=0;n<e.cameras.length;n++){const i=e.cameras[n];if(es.multiplyMatrices(i.projectionMatrix,i.matrixWorldInverse),ns.setFromProjectionMatrix(es,i.coordinateSystem,i.reversedDepth),ns.containsPoint(t))return!0}return!1}clone(){return new cf}}function xp(s,t){return s-t}function t1(s,t){return s.z-t.z}function e1(s,t){return t.z-s.z}class n1{constructor(){this.index=0,this.pool=[],this.list=[]}push(t,e,n,i){const o=this.pool,l=this.list;this.index>=o.length&&o.push({start:-1,count:-1,z:-1,index:-1});const c=o[this.index];l.push(c),this.index++,c.start=t,c.count=e,c.z=n,c.index=i}reset(){this.list.length=0,this.index=0}}const ii=new pe,i1=new kt(1,1,1),a_=new Fo,s1=new cf,bu=new Gn,qa=new Rn,Al=new I,r_=new I,a1=new I,Sp=new n1,zn=new dn,Eu=[];function r1(s,t,e=0){const n=t.itemSize;if(s.isInterleavedBufferAttribute||s.array.constructor!==t.array.constructor){const i=s.count;for(let o=0;o<i;o++)for(let l=0;l<n;l++)t.setComponent(o+e,l,s.getComponent(o,l))}else t.array.set(s.array,e*n);t.needsUpdate=!0}function Ya(s,t){if(s.constructor!==t.constructor){const e=Math.min(s.length,t.length);for(let n=0;n<e;n++)t[n]=s[n]}else{const e=Math.min(s.length,t.length);t.set(new s.constructor(s.buffer,0,e))}}class Lx extends dn{constructor(t,e,n=e*2,i){super(new xe,i),this.isBatchedMesh=!0,this.perObjectFrustumCulled=!0,this.sortObjects=!0,this.boundingBox=null,this.boundingSphere=null,this.customSort=null,this._instanceInfo=[],this._geometryInfo=[],this._availableInstanceIds=[],this._availableGeometryIds=[],this._nextIndexStart=0,this._nextVertexStart=0,this._geometryCount=0,this._visibilityChanged=!0,this._geometryInitialized=!1,this._maxInstanceCount=t,this._maxVertexCount=e,this._maxIndexCount=n,this._multiDrawCounts=new Int32Array(t),this._multiDrawStarts=new Int32Array(t),this._multiDrawCount=0,this._multiDrawInstances=null,this._matricesTexture=null,this._indirectTexture=null,this._colorsTexture=null,this._initMatricesTexture(),this._initIndirectTexture()}get maxInstanceCount(){return this._maxInstanceCount}get instanceCount(){return this._instanceInfo.length-this._availableInstanceIds.length}get unusedVertexCount(){return this._maxVertexCount-this._nextVertexStart}get unusedIndexCount(){return this._maxIndexCount-this._nextIndexStart}_initMatricesTexture(){let t=Math.sqrt(this._maxInstanceCount*4);t=Math.ceil(t/4)*4,t=Math.max(t,4);const e=new Float32Array(t*t*4),n=new cs(e,t,t,Hn,ri);this._matricesTexture=n}_initIndirectTexture(){let t=Math.sqrt(this._maxInstanceCount);t=Math.ceil(t);const e=new Uint32Array(t*t),n=new cs(e,t,t,lc,Hs);this._indirectTexture=n}_initColorsTexture(){let t=Math.sqrt(this._maxInstanceCount);t=Math.ceil(t);const e=new Float32Array(t*t*4).fill(1),n=new cs(e,t,t,Hn,ri);n.colorSpace=Re.workingColorSpace,this._colorsTexture=n}_initializeGeometry(t){const e=this.geometry,n=this._maxVertexCount,i=this._maxIndexCount;if(this._geometryInitialized===!1){for(const o in t.attributes){const l=t.getAttribute(o),{array:c,itemSize:h,normalized:f}=l,p=new c.constructor(n*h),m=new Xe(p,h,f);e.setAttribute(o,m)}if(t.getIndex()!==null){const o=n>65535?new Uint32Array(i):new Uint16Array(i);e.setIndex(new Xe(o,1))}this._geometryInitialized=!0}}_validateGeometry(t){const e=this.geometry;if(!!t.getIndex()!=!!e.getIndex())throw new Error('THREE.BatchedMesh: All geometries must consistently have "index".');for(const n in e.attributes){if(!t.hasAttribute(n))throw new Error(`THREE.BatchedMesh: Added geometry missing "${n}". All geometries must have consistent attributes.`);const i=t.getAttribute(n),o=e.getAttribute(n);if(i.itemSize!==o.itemSize||i.normalized!==o.normalized)throw new Error("THREE.BatchedMesh: All attributes must have a consistent itemSize and normalized value.")}}validateInstanceId(t){const e=this._instanceInfo;if(t<0||t>=e.length||e[t].active===!1)throw new Error(`THREE.BatchedMesh: Invalid instanceId ${t}. Instance is either out of range or has been deleted.`)}validateGeometryId(t){const e=this._geometryInfo;if(t<0||t>=e.length||e[t].active===!1)throw new Error(`THREE.BatchedMesh: Invalid geometryId ${t}. Geometry is either out of range or has been deleted.`)}setCustomSort(t){return this.customSort=t,this}computeBoundingBox(){this.boundingBox===null&&(this.boundingBox=new Gn);const t=this.boundingBox,e=this._instanceInfo;t.makeEmpty();for(let n=0,i=e.length;n<i;n++){if(e[n].active===!1)continue;const o=e[n].geometryIndex;this.getMatrixAt(n,ii),this.getBoundingBoxAt(o,bu).applyMatrix4(ii),t.union(bu)}}computeBoundingSphere(){this.boundingSphere===null&&(this.boundingSphere=new Rn);const t=this.boundingSphere,e=this._instanceInfo;t.makeEmpty();for(let n=0,i=e.length;n<i;n++){if(e[n].active===!1)continue;const o=e[n].geometryIndex;this.getMatrixAt(n,ii),this.getBoundingSphereAt(o,qa).applyMatrix4(ii),t.union(qa)}}addInstance(t){if(this._instanceInfo.length>=this.maxInstanceCount&&this._availableInstanceIds.length===0)throw new Error("THREE.BatchedMesh: Maximum item count reached.");const n={visible:!0,active:!0,geometryIndex:t};let i=null;this._availableInstanceIds.length>0?(this._availableInstanceIds.sort(xp),i=this._availableInstanceIds.shift(),this._instanceInfo[i]=n):(i=this._instanceInfo.length,this._instanceInfo.push(n));const o=this._matricesTexture;ii.identity().toArray(o.image.data,i*16),o.needsUpdate=!0;const l=this._colorsTexture;return l&&(i1.toArray(l.image.data,i*4),l.needsUpdate=!0),this._visibilityChanged=!0,i}addGeometry(t,e=-1,n=-1){this._initializeGeometry(t),this._validateGeometry(t);const i={vertexStart:-1,vertexCount:-1,reservedVertexCount:-1,indexStart:-1,indexCount:-1,reservedIndexCount:-1,start:-1,count:-1,boundingBox:null,boundingSphere:null,active:!0},o=this._geometryInfo;i.vertexStart=this._nextVertexStart,i.reservedVertexCount=e===-1?t.getAttribute("position").count:e;const l=t.getIndex();if(l!==null&&(i.indexStart=this._nextIndexStart,i.reservedIndexCount=n===-1?l.count:n),i.indexStart!==-1&&i.indexStart+i.reservedIndexCount>this._maxIndexCount||i.vertexStart+i.reservedVertexCount>this._maxVertexCount)throw new Error("THREE.BatchedMesh: Reserved space request exceeds the maximum buffer size.");let h;return this._availableGeometryIds.length>0?(this._availableGeometryIds.sort(xp),h=this._availableGeometryIds.shift(),o[h]=i):(h=this._geometryCount,this._geometryCount++,o.push(i)),this.setGeometryAt(h,t),this._nextIndexStart=i.indexStart+i.reservedIndexCount,this._nextVertexStart=i.vertexStart+i.reservedVertexCount,h}setGeometryAt(t,e){if(t>=this._geometryCount)throw new Error("THREE.BatchedMesh: Maximum geometry count reached.");this._validateGeometry(e);const n=this.geometry,i=n.getIndex()!==null,o=n.getIndex(),l=e.getIndex(),c=this._geometryInfo[t];if(i&&l.count>c.reservedIndexCount||e.attributes.position.count>c.reservedVertexCount)throw new Error("THREE.BatchedMesh: Reserved space not large enough for provided geometry.");const h=c.vertexStart,f=c.reservedVertexCount;c.vertexCount=e.getAttribute("position").count;for(const p in n.attributes){const m=e.getAttribute(p),g=n.getAttribute(p);r1(m,g,h);const v=m.itemSize;for(let x=m.count,b=f;x<b;x++){const S=h+x;for(let _=0;_<v;_++)g.setComponent(S,_,0)}g.needsUpdate=!0,g.addUpdateRange(h*v,f*v)}if(i){const p=c.indexStart,m=c.reservedIndexCount;c.indexCount=e.getIndex().count;for(let g=0;g<l.count;g++)o.setX(p+g,h+l.getX(g));for(let g=l.count,v=m;g<v;g++)o.setX(p+g,h);o.needsUpdate=!0,o.addUpdateRange(p,c.reservedIndexCount)}return c.start=i?c.indexStart:c.vertexStart,c.count=i?c.indexCount:c.vertexCount,c.boundingBox=null,e.boundingBox!==null&&(c.boundingBox=e.boundingBox.clone()),c.boundingSphere=null,e.boundingSphere!==null&&(c.boundingSphere=e.boundingSphere.clone()),this._visibilityChanged=!0,t}deleteGeometry(t){const e=this._geometryInfo;if(t>=e.length||e[t].active===!1)return this;const n=this._instanceInfo;for(let i=0,o=n.length;i<o;i++)n[i].active&&n[i].geometryIndex===t&&this.deleteInstance(i);return e[t].active=!1,this._availableGeometryIds.push(t),this._visibilityChanged=!0,this}deleteInstance(t){return this.validateInstanceId(t),this._instanceInfo[t].active=!1,this._availableInstanceIds.push(t),this._visibilityChanged=!0,this}optimize(){let t=0,e=0;const n=this._geometryInfo,i=n.map((l,c)=>c).sort((l,c)=>n[l].vertexStart-n[c].vertexStart),o=this.geometry;for(let l=0,c=n.length;l<c;l++){const h=i[l],f=n[h];if(f.active!==!1){if(o.index!==null){if(f.indexStart!==e){const{indexStart:p,vertexStart:m,reservedIndexCount:g}=f,v=o.index,x=v.array,b=t-m;for(let S=p;S<p+g;S++)x[S]=x[S]+b;v.array.copyWithin(e,p,p+g),v.addUpdateRange(e,g),f.indexStart=e}e+=f.reservedIndexCount}if(f.vertexStart!==t){const{vertexStart:p,reservedVertexCount:m}=f,g=o.attributes;for(const v in g){const x=g[v],{array:b,itemSize:S}=x;b.copyWithin(t*S,p*S,(p+m)*S),x.addUpdateRange(t*S,m*S)}f.vertexStart=t}t+=f.reservedVertexCount,f.start=o.index?f.indexStart:f.vertexStart,this._nextIndexStart=o.index?f.indexStart+f.reservedIndexCount:0,this._nextVertexStart=f.vertexStart+f.reservedVertexCount}}return this}getBoundingBoxAt(t,e){if(t>=this._geometryCount)return null;const n=this.geometry,i=this._geometryInfo[t];if(i.boundingBox===null){const o=new Gn,l=n.index,c=n.attributes.position;for(let h=i.start,f=i.start+i.count;h<f;h++){let p=h;l&&(p=l.getX(p)),o.expandByPoint(Al.fromBufferAttribute(c,p))}i.boundingBox=o}return e.copy(i.boundingBox),e}getBoundingSphereAt(t,e){if(t>=this._geometryCount)return null;const n=this.geometry,i=this._geometryInfo[t];if(i.boundingSphere===null){const o=new Rn;this.getBoundingBoxAt(t,bu),bu.getCenter(o.center);const l=n.index,c=n.attributes.position;let h=0;for(let f=i.start,p=i.start+i.count;f<p;f++){let m=f;l&&(m=l.getX(m)),Al.fromBufferAttribute(c,m),h=Math.max(h,o.center.distanceToSquared(Al))}o.radius=Math.sqrt(h),i.boundingSphere=o}return e.copy(i.boundingSphere),e}setMatrixAt(t,e){this.validateInstanceId(t);const n=this._matricesTexture,i=this._matricesTexture.image.data;return e.toArray(i,t*16),n.needsUpdate=!0,this}getMatrixAt(t,e){return this.validateInstanceId(t),e.fromArray(this._matricesTexture.image.data,t*16)}setColorAt(t,e){return this.validateInstanceId(t),this._colorsTexture===null&&this._initColorsTexture(),e.toArray(this._colorsTexture.image.data,t*4),this._colorsTexture.needsUpdate=!0,this}getColorAt(t,e){return this.validateInstanceId(t),e.fromArray(this._colorsTexture.image.data,t*4)}setVisibleAt(t,e){return this.validateInstanceId(t),this._instanceInfo[t].visible===e?this:(this._instanceInfo[t].visible=e,this._visibilityChanged=!0,this)}getVisibleAt(t){return this.validateInstanceId(t),this._instanceInfo[t].visible}setGeometryIdAt(t,e){return this.validateInstanceId(t),this.validateGeometryId(e),this._instanceInfo[t].geometryIndex=e,this}getGeometryIdAt(t){return this.validateInstanceId(t),this._instanceInfo[t].geometryIndex}getGeometryRangeAt(t,e={}){this.validateGeometryId(t);const n=this._geometryInfo[t];return e.vertexStart=n.vertexStart,e.vertexCount=n.vertexCount,e.reservedVertexCount=n.reservedVertexCount,e.indexStart=n.indexStart,e.indexCount=n.indexCount,e.reservedIndexCount=n.reservedIndexCount,e.start=n.start,e.count=n.count,e}setInstanceCount(t){const e=this._availableInstanceIds,n=this._instanceInfo;for(e.sort(xp);e[e.length-1]===n.length-1;)n.pop(),e.pop();if(t<n.length)throw new Error(`BatchedMesh: Instance ids outside the range ${t} are being used. Cannot shrink instance count.`);const i=new Int32Array(t),o=new Int32Array(t);Ya(this._multiDrawCounts,i),Ya(this._multiDrawStarts,o),this._multiDrawCounts=i,this._multiDrawStarts=o,this._maxInstanceCount=t;const l=this._indirectTexture,c=this._matricesTexture,h=this._colorsTexture;l.dispose(),this._initIndirectTexture(),Ya(l.image.data,this._indirectTexture.image.data),c.dispose(),this._initMatricesTexture(),Ya(c.image.data,this._matricesTexture.image.data),h&&(h.dispose(),this._initColorsTexture(),Ya(h.image.data,this._colorsTexture.image.data))}setGeometrySize(t,e){const n=[...this._geometryInfo].filter(c=>c.active);if(Math.max(...n.map(c=>c.vertexStart+c.reservedVertexCount))>t)throw new Error(`BatchedMesh: Geometry vertex values are being used outside the range ${e}. Cannot shrink further.`);if(this.geometry.index&&Math.max(...n.map(h=>h.indexStart+h.reservedIndexCount))>e)throw new Error(`BatchedMesh: Geometry index values are being used outside the range ${e}. Cannot shrink further.`);const o=this.geometry;o.dispose(),this._maxVertexCount=t,this._maxIndexCount=e,this._geometryInitialized&&(this._geometryInitialized=!1,this.geometry=new xe,this._initializeGeometry(o));const l=this.geometry;o.index&&Ya(o.index.array,l.index.array);for(const c in o.attributes)Ya(o.attributes[c].array,l.attributes[c].array)}raycast(t,e){const n=this._instanceInfo,i=this._geometryInfo,o=this.matrixWorld,l=this.geometry;zn.material=this.material,zn.geometry.index=l.index,zn.geometry.attributes=l.attributes,zn.geometry.boundingBox===null&&(zn.geometry.boundingBox=new Gn),zn.geometry.boundingSphere===null&&(zn.geometry.boundingSphere=new Rn);for(let c=0,h=n.length;c<h;c++){if(!n[c].visible||!n[c].active)continue;const f=n[c].geometryIndex,p=i[f];zn.geometry.setDrawRange(p.start,p.count),this.getMatrixAt(c,zn.matrixWorld).premultiply(o),this.getBoundingBoxAt(f,zn.geometry.boundingBox),this.getBoundingSphereAt(f,zn.geometry.boundingSphere),zn.raycast(t,Eu);for(let m=0,g=Eu.length;m<g;m++){const v=Eu[m];v.object=this,v.batchId=c,e.push(v)}Eu.length=0}zn.material=null,zn.geometry.index=null,zn.geometry.attributes={},zn.geometry.setDrawRange(0,1/0)}copy(t){return super.copy(t),this.geometry=t.geometry.clone(),this.perObjectFrustumCulled=t.perObjectFrustumCulled,this.sortObjects=t.sortObjects,this.boundingBox=t.boundingBox!==null?t.boundingBox.clone():null,this.boundingSphere=t.boundingSphere!==null?t.boundingSphere.clone():null,this._geometryInfo=t._geometryInfo.map(e=>({...e,boundingBox:e.boundingBox!==null?e.boundingBox.clone():null,boundingSphere:e.boundingSphere!==null?e.boundingSphere.clone():null})),this._instanceInfo=t._instanceInfo.map(e=>({...e})),this._availableInstanceIds=t._availableInstanceIds.slice(),this._availableGeometryIds=t._availableGeometryIds.slice(),this._nextIndexStart=t._nextIndexStart,this._nextVertexStart=t._nextVertexStart,this._geometryCount=t._geometryCount,this._maxInstanceCount=t._maxInstanceCount,this._maxVertexCount=t._maxVertexCount,this._maxIndexCount=t._maxIndexCount,this._geometryInitialized=t._geometryInitialized,this._multiDrawCounts=t._multiDrawCounts.slice(),this._multiDrawStarts=t._multiDrawStarts.slice(),this._indirectTexture=t._indirectTexture.clone(),this._indirectTexture.image.data=this._indirectTexture.image.data.slice(),this._matricesTexture=t._matricesTexture.clone(),this._matricesTexture.image.data=this._matricesTexture.image.data.slice(),this._colorsTexture!==null&&(this._colorsTexture=t._colorsTexture.clone(),this._colorsTexture.image.data=this._colorsTexture.image.data.slice()),this}dispose(){this.geometry.dispose(),this._matricesTexture.dispose(),this._matricesTexture=null,this._indirectTexture.dispose(),this._indirectTexture=null,this._colorsTexture!==null&&(this._colorsTexture.dispose(),this._colorsTexture=null)}onBeforeRender(t,e,n,i,o){if(!this._visibilityChanged&&!this.perObjectFrustumCulled&&!this.sortObjects)return;const l=i.getIndex(),c=l===null?1:l.array.BYTES_PER_ELEMENT,h=this._instanceInfo,f=this._multiDrawStarts,p=this._multiDrawCounts,m=this._geometryInfo,g=this.perObjectFrustumCulled,v=this._indirectTexture,x=v.image.data,b=n.isArrayCamera?s1:a_;g&&!n.isArrayCamera&&(ii.multiplyMatrices(n.projectionMatrix,n.matrixWorldInverse).multiply(this.matrixWorld),a_.setFromProjectionMatrix(ii,n.coordinateSystem,n.reversedDepth));let S=0;if(this.sortObjects){ii.copy(this.matrixWorld).invert(),Al.setFromMatrixPosition(n.matrixWorld).applyMatrix4(ii),r_.set(0,0,-1).transformDirection(n.matrixWorld).transformDirection(ii);for(let A=0,T=h.length;A<T;A++)if(h[A].visible&&h[A].active){const U=h[A].geometryIndex;this.getMatrixAt(A,ii),this.getBoundingSphereAt(U,qa).applyMatrix4(ii);let D=!1;if(g&&(D=!b.intersectsSphere(qa,n)),!D){const P=m[U],O=a1.subVectors(qa.center,Al).dot(r_);Sp.push(P.start,P.count,O,A)}}const _=Sp.list,E=this.customSort;E===null?_.sort(o.transparent?e1:t1):E.call(this,_,n);for(let A=0,T=_.length;A<T;A++){const U=_[A];f[S]=U.start*c,p[S]=U.count,x[S]=U.index,S++}Sp.reset()}else for(let _=0,E=h.length;_<E;_++)if(h[_].visible&&h[_].active){const A=h[_].geometryIndex;let T=!1;if(g&&(this.getMatrixAt(_,ii),this.getBoundingSphereAt(A,qa).applyMatrix4(ii),T=!b.intersectsSphere(qa,n)),!T){const U=m[A];f[S]=U.start*c,p[S]=U.count,x[S]=_,S++}}v.needsUpdate=!0,this._multiDrawCount=S,this._visibilityChanged=!1}onBeforeShadow(t,e,n,i,o,l){this.onBeforeRender(t,null,i,o,l)}}class $n extends kn{constructor(t){super(),this.isLineBasicMaterial=!0,this.type="LineBasicMaterial",this.color=new kt(16777215),this.map=null,this.linewidth=1,this.linecap="round",this.linejoin="round",this.fog=!0,this.setValues(t)}copy(t){return super.copy(t),this.color.copy(t.color),this.map=t.map,this.linewidth=t.linewidth,this.linecap=t.linecap,this.linejoin=t.linejoin,this.fog=t.fog,this}}const Bh=new I,zh=new I,o_=new pe,wl=new yr,Tu=new Rn,Mp=new I,l_=new I;class _a extends Le{constructor(t=new xe,e=new $n){super(),this.isLine=!0,this.type="Line",this.geometry=t,this.material=e,this.morphTargetDictionary=void 0,this.morphTargetInfluences=void 0,this.updateMorphTargets()}copy(t,e){return super.copy(t,e),this.material=Array.isArray(t.material)?t.material.slice():t.material,this.geometry=t.geometry,this}computeLineDistances(){const t=this.geometry;if(t.index===null){const e=t.attributes.position,n=[0];for(let i=1,o=e.count;i<o;i++)Bh.fromBufferAttribute(e,i-1),zh.fromBufferAttribute(e,i),n[i]=n[i-1],n[i]+=Bh.distanceTo(zh);t.setAttribute("lineDistance",new Jt(n,1))}else console.warn("THREE.Line.computeLineDistances(): Computation only possible with non-indexed BufferGeometry.");return this}raycast(t,e){const n=this.geometry,i=this.matrixWorld,o=t.params.Line.threshold,l=n.drawRange;if(n.boundingSphere===null&&n.computeBoundingSphere(),Tu.copy(n.boundingSphere),Tu.applyMatrix4(i),Tu.radius+=o,t.ray.intersectsSphere(Tu)===!1)return;o_.copy(i).invert(),wl.copy(t.ray).applyMatrix4(o_);const c=o/((this.scale.x+this.scale.y+this.scale.z)/3),h=c*c,f=this.isLineSegments?2:1,p=n.index,g=n.attributes.position;if(p!==null){const v=Math.max(0,l.start),x=Math.min(p.count,l.start+l.count);for(let b=v,S=x-1;b<S;b+=f){const _=p.getX(b),E=p.getX(b+1),A=Au(this,t,wl,h,_,E,b);A&&e.push(A)}if(this.isLineLoop){const b=p.getX(x-1),S=p.getX(v),_=Au(this,t,wl,h,b,S,x-1);_&&e.push(_)}}else{const v=Math.max(0,l.start),x=Math.min(g.count,l.start+l.count);for(let b=v,S=x-1;b<S;b+=f){const _=Au(this,t,wl,h,b,b+1,b);_&&e.push(_)}if(this.isLineLoop){const b=Au(this,t,wl,h,x-1,v,x-1);b&&e.push(b)}}}updateMorphTargets(){const e=this.geometry.morphAttributes,n=Object.keys(e);if(n.length>0){const i=e[n[0]];if(i!==void 0){this.morphTargetInfluences=[],this.morphTargetDictionary={};for(let o=0,l=i.length;o<l;o++){const c=i[o].name||String(o);this.morphTargetInfluences.push(0),this.morphTargetDictionary[c]=o}}}}}function Au(s,t,e,n,i,o,l){const c=s.geometry.attributes.position;if(Bh.fromBufferAttribute(c,i),zh.fromBufferAttribute(c,o),e.distanceSqToSegment(Bh,zh,Mp,l_)>n)return;Mp.applyMatrix4(s.matrixWorld);const f=t.ray.origin.distanceTo(Mp);if(!(f<t.near||f>t.far))return{distance:f,point:l_.clone().applyMatrix4(s.matrixWorld),index:l,face:null,faceIndex:null,barycoord:null,object:s}}const c_=new I,u_=new I;class fs extends _a{constructor(t,e){super(t,e),this.isLineSegments=!0,this.type="LineSegments"}computeLineDistances(){const t=this.geometry;if(t.index===null){const e=t.attributes.position,n=[];for(let i=0,o=e.count;i<o;i+=2)c_.fromBufferAttribute(e,i),u_.fromBufferAttribute(e,i+1),n[i]=i===0?0:n[i-1],n[i+1]=n[i]+c_.distanceTo(u_);t.setAttribute("lineDistance",new Jt(n,1))}else console.warn("THREE.LineSegments.computeLineDistances(): Computation only possible with non-indexed BufferGeometry.");return this}}class Px extends _a{constructor(t,e){super(t,e),this.isLineLoop=!0,this.type="LineLoop"}}class Xm extends kn{constructor(t){super(),this.isPointsMaterial=!0,this.type="PointsMaterial",this.color=new kt(16777215),this.map=null,this.alphaMap=null,this.size=1,this.sizeAttenuation=!0,this.fog=!0,this.setValues(t)}copy(t){return super.copy(t),this.color.copy(t.color),this.map=t.map,this.alphaMap=t.alphaMap,this.size=t.size,this.sizeAttenuation=t.sizeAttenuation,this.fog=t.fog,this}}const h_=new pe,um=new yr,wu=new Rn,Cu=new I;class Ix extends Le{constructor(t=new xe,e=new Xm){super(),this.isPoints=!0,this.type="Points",this.geometry=t,this.material=e,this.morphTargetDictionary=void 0,this.morphTargetInfluences=void 0,this.updateMorphTargets()}copy(t,e){return super.copy(t,e),this.material=Array.isArray(t.material)?t.material.slice():t.material,this.geometry=t.geometry,this}raycast(t,e){const n=this.geometry,i=this.matrixWorld,o=t.params.Points.threshold,l=n.drawRange;if(n.boundingSphere===null&&n.computeBoundingSphere(),wu.copy(n.boundingSphere),wu.applyMatrix4(i),wu.radius+=o,t.ray.intersectsSphere(wu)===!1)return;h_.copy(i).invert(),um.copy(t.ray).applyMatrix4(h_);const c=o/((this.scale.x+this.scale.y+this.scale.z)/3),h=c*c,f=n.index,m=n.attributes.position;if(f!==null){const g=Math.max(0,l.start),v=Math.min(f.count,l.start+l.count);for(let x=g,b=v;x<b;x++){const S=f.getX(x);Cu.fromBufferAttribute(m,S),f_(Cu,S,h,i,t,e,this)}}else{const g=Math.max(0,l.start),v=Math.min(m.count,l.start+l.count);for(let x=g,b=v;x<b;x++)Cu.fromBufferAttribute(m,x),f_(Cu,x,h,i,t,e,this)}}updateMorphTargets(){const e=this.geometry.morphAttributes,n=Object.keys(e);if(n.length>0){const i=e[n[0]];if(i!==void 0){this.morphTargetInfluences=[],this.morphTargetDictionary={};for(let o=0,l=i.length;o<l;o++){const c=i[o].name||String(o);this.morphTargetInfluences.push(0),this.morphTargetDictionary[c]=o}}}}}function f_(s,t,e,n,i,o,l){const c=um.distanceSqToPoint(s);if(c<e){const h=new I;um.closestPointToPoint(s,h),h.applyMatrix4(n);const f=i.ray.origin.distanceTo(h);if(f<i.near||f>i.far)return;o.push({distance:f,distanceToRay:Math.sqrt(c),point:h,index:t,face:null,faceIndex:null,barycoord:null,object:l})}}class Ox extends on{constructor(t,e,n,i,o=mn,l=mn,c,h,f){super(t,e,n,i,o,l,c,h,f),this.isVideoTexture=!0,this.generateMipmaps=!1,this._requestVideoFrameCallbackId=0;const p=this;function m(){p.needsUpdate=!0,p._requestVideoFrameCallbackId=t.requestVideoFrameCallback(m)}"requestVideoFrameCallback"in t&&(this._requestVideoFrameCallbackId=t.requestVideoFrameCallback(m))}clone(){return new this.constructor(this.image).copy(this)}update(){const t=this.image;"requestVideoFrameCallback"in t===!1&&t.readyState>=t.HAVE_CURRENT_DATA&&(this.needsUpdate=!0)}dispose(){this._requestVideoFrameCallbackId!==0&&this.source.data.cancelVideoFrameCallback(this._requestVideoFrameCallbackId),super.dispose()}}class o1 extends Ox{constructor(t,e,n,i,o,l,c,h){super({},t,e,n,i,o,l,c,h),this.isVideoFrameTexture=!0}update(){}clone(){return new this.constructor().copy(this)}setFrame(t){this.image=t,this.needsUpdate=!0}}class l1 extends on{constructor(t,e){super({width:t,height:e}),this.isFramebufferTexture=!0,this.magFilter=Cn,this.minFilter=Cn,this.generateMipmaps=!1,this.needsUpdate=!0}}class uf extends on{constructor(t,e,n,i,o,l,c,h,f,p,m,g){super(null,l,c,h,f,p,i,o,m,g),this.isCompressedTexture=!0,this.image={width:e,height:n},this.mipmaps=t,this.flipY=!1,this.generateMipmaps=!1}}class c1 extends uf{constructor(t,e,n,i,o,l){super(t,e,n,o,l),this.isCompressedArrayTexture=!0,this.image.depth=i,this.wrapR=Pi,this.layerUpdates=new Set}addLayerUpdate(t){this.layerUpdates.add(t)}clearLayerUpdates(){this.layerUpdates.clear()}}class u1 extends uf{constructor(t,e,n){super(void 0,t[0].width,t[0].height,e,n,Fs),this.isCompressedCubeTexture=!0,this.isCubeTexture=!0,this.image=t}}class h1 extends on{constructor(t,e,n,i,o,l,c,h,f){super(t,e,n,i,o,l,c,h,f),this.isCanvasTexture=!0,this.needsUpdate=!0}}class qm extends on{constructor(t,e,n=Hs,i,o,l,c=Cn,h=Cn,f,p=Co,m=1){if(p!==Co&&p!==Ro)throw new Error("DepthTexture format must be either THREE.DepthFormat or THREE.DepthStencilFormat");const g={width:t,height:e,depth:m};super(g,i,o,l,c,h,p,n,f),this.isDepthTexture=!0,this.flipY=!1,this.generateMipmaps=!1,this.compareFunction=null}copy(t){return super.copy(t),this.source=new pa(Object.assign({},t.image)),this.compareFunction=t.compareFunction,this}toJSON(t){const e=super.toJSON(t);return this.compareFunction!==null&&(e.compareFunction=this.compareFunction),e}}class hf extends xe{constructor(t=1,e=1,n=4,i=8,o=1){super(),this.type="CapsuleGeometry",this.parameters={radius:t,height:e,capSegments:n,radialSegments:i,heightSegments:o},e=Math.max(0,e),n=Math.max(1,Math.floor(n)),i=Math.max(3,Math.floor(i)),o=Math.max(1,Math.floor(o));const l=[],c=[],h=[],f=[],p=e/2,m=Math.PI/2*t,g=e,v=2*m+g,x=n*2+o,b=i+1,S=new I,_=new I;for(let E=0;E<=x;E++){let A=0,T=0,U=0,D=0;if(E<=n){const C=E/n,w=C*Math.PI/2;T=-p-t*Math.cos(w),U=t*Math.sin(w),D=-t*Math.cos(w),A=C*m}else if(E<=n+o){const C=(E-n)/o;T=-p+C*e,U=t,D=0,A=m+C*g}else{const C=(E-n-o)/n,w=C*Math.PI/2;T=p+t*Math.sin(w),U=t*Math.cos(w),D=t*Math.sin(w),A=m+g+C*m}const P=Math.max(0,Math.min(1,A/v));let O=0;E===0?O=.5/i:E===x&&(O=-.5/i);for(let C=0;C<=i;C++){const w=C/i,B=w*Math.PI*2,tt=Math.sin(B),X=Math.cos(B);_.x=-U*X,_.y=T,_.z=U*tt,c.push(_.x,_.y,_.z),S.set(-U*X,D,U*tt),S.normalize(),h.push(S.x,S.y,S.z),f.push(w+O,P)}if(E>0){const C=(E-1)*b;for(let w=0;w<i;w++){const B=C+w,tt=C+w+1,X=E*b+w,Z=E*b+w+1;l.push(B,tt,X),l.push(tt,Z,X)}}}this.setIndex(l),this.setAttribute("position",new Jt(c,3)),this.setAttribute("normal",new Jt(h,3)),this.setAttribute("uv",new Jt(f,2))}copy(t){return super.copy(t),this.parameters=Object.assign({},t.parameters),this}static fromJSON(t){return new hf(t.radius,t.height,t.capSegments,t.radialSegments,t.heightSegments)}}class ff extends xe{constructor(t=1,e=32,n=0,i=Math.PI*2){super(),this.type="CircleGeometry",this.parameters={radius:t,segments:e,thetaStart:n,thetaLength:i},e=Math.max(3,e);const o=[],l=[],c=[],h=[],f=new I,p=new dt;l.push(0,0,0),c.push(0,0,1),h.push(.5,.5);for(let m=0,g=3;m<=e;m++,g+=3){const v=n+m/e*i;f.x=t*Math.cos(v),f.y=t*Math.sin(v),l.push(f.x,f.y,f.z),c.push(0,0,1),p.x=(l[g]/t+1)/2,p.y=(l[g+1]/t+1)/2,h.push(p.x,p.y)}for(let m=1;m<=e;m++)o.push(m,m+1,0);this.setIndex(o),this.setAttribute("position",new Jt(l,3)),this.setAttribute("normal",new Jt(c,3)),this.setAttribute("uv",new Jt(h,2))}copy(t){return super.copy(t),this.parameters=Object.assign({},t.parameters),this}static fromJSON(t){return new ff(t.radius,t.segments,t.thetaStart,t.thetaLength)}}class uc extends xe{constructor(t=1,e=1,n=1,i=32,o=1,l=!1,c=0,h=Math.PI*2){super(),this.type="CylinderGeometry",this.parameters={radiusTop:t,radiusBottom:e,height:n,radialSegments:i,heightSegments:o,openEnded:l,thetaStart:c,thetaLength:h};const f=this;i=Math.floor(i),o=Math.floor(o);const p=[],m=[],g=[],v=[];let x=0;const b=[],S=n/2;let _=0;E(),l===!1&&(t>0&&A(!0),e>0&&A(!1)),this.setIndex(p),this.setAttribute("position",new Jt(m,3)),this.setAttribute("normal",new Jt(g,3)),this.setAttribute("uv",new Jt(v,2));function E(){const T=new I,U=new I;let D=0;const P=(e-t)/n;for(let O=0;O<=o;O++){const C=[],w=O/o,B=w*(e-t)+t;for(let tt=0;tt<=i;tt++){const X=tt/i,Z=X*h+c,ot=Math.sin(Z),k=Math.cos(Z);U.x=B*ot,U.y=-w*n+S,U.z=B*k,m.push(U.x,U.y,U.z),T.set(ot,P,k).normalize(),g.push(T.x,T.y,T.z),v.push(X,1-w),C.push(x++)}b.push(C)}for(let O=0;O<i;O++)for(let C=0;C<o;C++){const w=b[C][O],B=b[C+1][O],tt=b[C+1][O+1],X=b[C][O+1];(t>0||C!==0)&&(p.push(w,B,X),D+=3),(e>0||C!==o-1)&&(p.push(B,tt,X),D+=3)}f.addGroup(_,D,0),_+=D}function A(T){const U=x,D=new dt,P=new I;let O=0;const C=T===!0?t:e,w=T===!0?1:-1;for(let tt=1;tt<=i;tt++)m.push(0,S*w,0),g.push(0,w,0),v.push(.5,.5),x++;const B=x;for(let tt=0;tt<=i;tt++){const Z=tt/i*h+c,ot=Math.cos(Z),k=Math.sin(Z);P.x=C*k,P.y=S*w,P.z=C*ot,m.push(P.x,P.y,P.z),g.push(0,w,0),D.x=ot*.5+.5,D.y=k*.5*w+.5,v.push(D.x,D.y),x++}for(let tt=0;tt<i;tt++){const X=U+tt,Z=B+tt;T===!0?p.push(Z,Z+1,X):p.push(Z+1,Z,X),O+=3}f.addGroup(_,O,T===!0?1:2),_+=O}}copy(t){return super.copy(t),this.parameters=Object.assign({},t.parameters),this}static fromJSON(t){return new uc(t.radiusTop,t.radiusBottom,t.height,t.radialSegments,t.heightSegments,t.openEnded,t.thetaStart,t.thetaLength)}}class hc extends uc{constructor(t=1,e=1,n=32,i=1,o=!1,l=0,c=Math.PI*2){super(0,t,e,n,i,o,l,c),this.type="ConeGeometry",this.parameters={radius:t,height:e,radialSegments:n,heightSegments:i,openEnded:o,thetaStart:l,thetaLength:c}}static fromJSON(t){return new hc(t.radius,t.height,t.radialSegments,t.heightSegments,t.openEnded,t.thetaStart,t.thetaLength)}}class Sa extends xe{constructor(t=[],e=[],n=1,i=0){super(),this.type="PolyhedronGeometry",this.parameters={vertices:t,indices:e,radius:n,detail:i};const o=[],l=[];c(i),f(n),p(),this.setAttribute("position",new Jt(o,3)),this.setAttribute("normal",new Jt(o.slice(),3)),this.setAttribute("uv",new Jt(l,2)),i===0?this.computeVertexNormals():this.normalizeNormals();function c(E){const A=new I,T=new I,U=new I;for(let D=0;D<e.length;D+=3)v(e[D+0],A),v(e[D+1],T),v(e[D+2],U),h(A,T,U,E)}function h(E,A,T,U){const D=U+1,P=[];for(let O=0;O<=D;O++){P[O]=[];const C=E.clone().lerp(T,O/D),w=A.clone().lerp(T,O/D),B=D-O;for(let tt=0;tt<=B;tt++)tt===0&&O===D?P[O][tt]=C:P[O][tt]=C.clone().lerp(w,tt/B)}for(let O=0;O<D;O++)for(let C=0;C<2*(D-O)-1;C++){const w=Math.floor(C/2);C%2===0?(g(P[O][w+1]),g(P[O+1][w]),g(P[O][w])):(g(P[O][w+1]),g(P[O+1][w+1]),g(P[O+1][w]))}}function f(E){const A=new I;for(let T=0;T<o.length;T+=3)A.x=o[T+0],A.y=o[T+1],A.z=o[T+2],A.normalize().multiplyScalar(E),o[T+0]=A.x,o[T+1]=A.y,o[T+2]=A.z}function p(){const E=new I;for(let A=0;A<o.length;A+=3){E.x=o[A+0],E.y=o[A+1],E.z=o[A+2];const T=S(E)/2/Math.PI+.5,U=_(E)/Math.PI+.5;l.push(T,1-U)}x(),m()}function m(){for(let E=0;E<l.length;E+=6){const A=l[E+0],T=l[E+2],U=l[E+4],D=Math.max(A,T,U),P=Math.min(A,T,U);D>.9&&P<.1&&(A<.2&&(l[E+0]+=1),T<.2&&(l[E+2]+=1),U<.2&&(l[E+4]+=1))}}function g(E){o.push(E.x,E.y,E.z)}function v(E,A){const T=E*3;A.x=t[T+0],A.y=t[T+1],A.z=t[T+2]}function x(){const E=new I,A=new I,T=new I,U=new I,D=new dt,P=new dt,O=new dt;for(let C=0,w=0;C<o.length;C+=9,w+=6){E.set(o[C+0],o[C+1],o[C+2]),A.set(o[C+3],o[C+4],o[C+5]),T.set(o[C+6],o[C+7],o[C+8]),D.set(l[w+0],l[w+1]),P.set(l[w+2],l[w+3]),O.set(l[w+4],l[w+5]),U.copy(E).add(A).add(T).divideScalar(3);const B=S(U);b(D,w+0,E,B),b(P,w+2,A,B),b(O,w+4,T,B)}}function b(E,A,T,U){U<0&&E.x===1&&(l[A]=E.x-1),T.x===0&&T.z===0&&(l[A]=U/2/Math.PI+.5)}function S(E){return Math.atan2(E.z,-E.x)}function _(E){return Math.atan2(-E.y,Math.sqrt(E.x*E.x+E.z*E.z))}}copy(t){return super.copy(t),this.parameters=Object.assign({},t.parameters),this}static fromJSON(t){return new Sa(t.vertices,t.indices,t.radius,t.details)}}class df extends Sa{constructor(t=1,e=0){const n=(1+Math.sqrt(5))/2,i=1/n,o=[-1,-1,-1,-1,-1,1,-1,1,-1,-1,1,1,1,-1,-1,1,-1,1,1,1,-1,1,1,1,0,-i,-n,0,-i,n,0,i,-n,0,i,n,-i,-n,0,-i,n,0,i,-n,0,i,n,0,-n,0,-i,n,0,-i,-n,0,i,n,0,i],l=[3,11,7,3,7,15,3,15,13,7,19,17,7,17,6,7,6,15,17,4,8,17,8,10,17,10,6,8,0,16,8,16,2,8,2,10,0,12,1,0,1,18,0,18,16,6,10,2,6,2,13,6,13,15,2,16,18,2,18,3,2,3,13,18,1,9,18,9,11,18,11,3,4,14,12,4,12,0,4,0,8,11,9,5,11,5,19,11,19,7,19,5,14,19,14,4,19,4,17,1,12,14,1,14,5,1,5,9];super(o,l,t,e),this.type="DodecahedronGeometry",this.parameters={radius:t,detail:e}}static fromJSON(t){return new df(t.radius,t.detail)}}const Ru=new I,Du=new I,bp=new I,Uu=new ai;class Bx extends xe{constructor(t=null,e=1){if(super(),this.type="EdgesGeometry",this.parameters={geometry:t,thresholdAngle:e},t!==null){const i=Math.pow(10,4),o=Math.cos(dr*e),l=t.getIndex(),c=t.getAttribute("position"),h=l?l.count:c.count,f=[0,0,0],p=["a","b","c"],m=new Array(3),g={},v=[];for(let x=0;x<h;x+=3){l?(f[0]=l.getX(x),f[1]=l.getX(x+1),f[2]=l.getX(x+2)):(f[0]=x,f[1]=x+1,f[2]=x+2);const{a:b,b:S,c:_}=Uu;if(b.fromBufferAttribute(c,f[0]),S.fromBufferAttribute(c,f[1]),_.fromBufferAttribute(c,f[2]),Uu.getNormal(bp),m[0]=`${Math.round(b.x*i)},${Math.round(b.y*i)},${Math.round(b.z*i)}`,m[1]=`${Math.round(S.x*i)},${Math.round(S.y*i)},${Math.round(S.z*i)}`,m[2]=`${Math.round(_.x*i)},${Math.round(_.y*i)},${Math.round(_.z*i)}`,!(m[0]===m[1]||m[1]===m[2]||m[2]===m[0]))for(let E=0;E<3;E++){const A=(E+1)%3,T=m[E],U=m[A],D=Uu[p[E]],P=Uu[p[A]],O=`${T}_${U}`,C=`${U}_${T}`;C in g&&g[C]?(bp.dot(g[C].normal)<=o&&(v.push(D.x,D.y,D.z),v.push(P.x,P.y,P.z)),g[C]=null):O in g||(g[O]={index0:f[E],index1:f[A],normal:bp.clone()})}}for(const x in g)if(g[x]){const{index0:b,index1:S}=g[x];Ru.fromBufferAttribute(c,b),Du.fromBufferAttribute(c,S),v.push(Ru.x,Ru.y,Ru.z),v.push(Du.x,Du.y,Du.z)}this.setAttribute("position",new Jt(v,3))}}copy(t){return super.copy(t),this.parameters=Object.assign({},t.parameters),this}}class Ki{constructor(){this.type="Curve",this.arcLengthDivisions=200,this.needsUpdate=!1,this.cacheArcLengths=null}getPoint(){console.warn("THREE.Curve: .getPoint() not implemented.")}getPointAt(t,e){const n=this.getUtoTmapping(t);return this.getPoint(n,e)}getPoints(t=5){const e=[];for(let n=0;n<=t;n++)e.push(this.getPoint(n/t));return e}getSpacedPoints(t=5){const e=[];for(let n=0;n<=t;n++)e.push(this.getPointAt(n/t));return e}getLength(){const t=this.getLengths();return t[t.length-1]}getLengths(t=this.arcLengthDivisions){if(this.cacheArcLengths&&this.cacheArcLengths.length===t+1&&!this.needsUpdate)return this.cacheArcLengths;this.needsUpdate=!1;const e=[];let n,i=this.getPoint(0),o=0;e.push(0);for(let l=1;l<=t;l++)n=this.getPoint(l/t),o+=n.distanceTo(i),e.push(o),i=n;return this.cacheArcLengths=e,e}updateArcLengths(){this.needsUpdate=!0,this.getLengths()}getUtoTmapping(t,e=null){const n=this.getLengths();let i=0;const o=n.length;let l;e?l=e:l=t*n[o-1];let c=0,h=o-1,f;for(;c<=h;)if(i=Math.floor(c+(h-c)/2),f=n[i]-l,f<0)c=i+1;else if(f>0)h=i-1;else{h=i;break}if(i=h,n[i]===l)return i/(o-1);const p=n[i],g=n[i+1]-p,v=(l-p)/g;return(i+v)/(o-1)}getTangent(t,e){let i=t-1e-4,o=t+1e-4;i<0&&(i=0),o>1&&(o=1);const l=this.getPoint(i),c=this.getPoint(o),h=e||(l.isVector2?new dt:new I);return h.copy(c).sub(l).normalize(),h}getTangentAt(t,e){const n=this.getUtoTmapping(t);return this.getTangent(n,e)}computeFrenetFrames(t,e=!1){const n=new I,i=[],o=[],l=[],c=new I,h=new pe;for(let v=0;v<=t;v++){const x=v/t;i[v]=this.getTangentAt(x,new I)}o[0]=new I,l[0]=new I;let f=Number.MAX_VALUE;const p=Math.abs(i[0].x),m=Math.abs(i[0].y),g=Math.abs(i[0].z);p<=f&&(f=p,n.set(1,0,0)),m<=f&&(f=m,n.set(0,1,0)),g<=f&&n.set(0,0,1),c.crossVectors(i[0],n).normalize(),o[0].crossVectors(i[0],c),l[0].crossVectors(i[0],o[0]);for(let v=1;v<=t;v++){if(o[v]=o[v-1].clone(),l[v]=l[v-1].clone(),c.crossVectors(i[v-1],i[v]),c.length()>Number.EPSILON){c.normalize();const x=Math.acos(de(i[v-1].dot(i[v]),-1,1));o[v].applyMatrix4(h.makeRotationAxis(c,x))}l[v].crossVectors(i[v],o[v])}if(e===!0){let v=Math.acos(de(o[0].dot(o[t]),-1,1));v/=t,i[0].dot(c.crossVectors(o[0],o[t]))>0&&(v=-v);for(let x=1;x<=t;x++)o[x].applyMatrix4(h.makeRotationAxis(i[x],v*x)),l[x].crossVectors(i[x],o[x])}return{tangents:i,normals:o,binormals:l}}clone(){return new this.constructor().copy(this)}copy(t){return this.arcLengthDivisions=t.arcLengthDivisions,this}toJSON(){const t={metadata:{version:4.7,type:"Curve",generator:"Curve.toJSON"}};return t.arcLengthDivisions=this.arcLengthDivisions,t.type=this.type,t}fromJSON(t){return this.arcLengthDivisions=t.arcLengthDivisions,this}}class pf extends Ki{constructor(t=0,e=0,n=1,i=1,o=0,l=Math.PI*2,c=!1,h=0){super(),this.isEllipseCurve=!0,this.type="EllipseCurve",this.aX=t,this.aY=e,this.xRadius=n,this.yRadius=i,this.aStartAngle=o,this.aEndAngle=l,this.aClockwise=c,this.aRotation=h}getPoint(t,e=new dt){const n=e,i=Math.PI*2;let o=this.aEndAngle-this.aStartAngle;const l=Math.abs(o)<Number.EPSILON;for(;o<0;)o+=i;for(;o>i;)o-=i;o<Number.EPSILON&&(l?o=0:o=i),this.aClockwise===!0&&!l&&(o===i?o=-i:o=o-i);const c=this.aStartAngle+t*o;let h=this.aX+this.xRadius*Math.cos(c),f=this.aY+this.yRadius*Math.sin(c);if(this.aRotation!==0){const p=Math.cos(this.aRotation),m=Math.sin(this.aRotation),g=h-this.aX,v=f-this.aY;h=g*p-v*m+this.aX,f=g*m+v*p+this.aY}return n.set(h,f)}copy(t){return super.copy(t),this.aX=t.aX,this.aY=t.aY,this.xRadius=t.xRadius,this.yRadius=t.yRadius,this.aStartAngle=t.aStartAngle,this.aEndAngle=t.aEndAngle,this.aClockwise=t.aClockwise,this.aRotation=t.aRotation,this}toJSON(){const t=super.toJSON();return t.aX=this.aX,t.aY=this.aY,t.xRadius=this.xRadius,t.yRadius=this.yRadius,t.aStartAngle=this.aStartAngle,t.aEndAngle=this.aEndAngle,t.aClockwise=this.aClockwise,t.aRotation=this.aRotation,t}fromJSON(t){return super.fromJSON(t),this.aX=t.aX,this.aY=t.aY,this.xRadius=t.xRadius,this.yRadius=t.yRadius,this.aStartAngle=t.aStartAngle,this.aEndAngle=t.aEndAngle,this.aClockwise=t.aClockwise,this.aRotation=t.aRotation,this}}class zx extends pf{constructor(t,e,n,i,o,l){super(t,e,n,n,i,o,l),this.isArcCurve=!0,this.type="ArcCurve"}}function Ym(){let s=0,t=0,e=0,n=0;function i(o,l,c,h){s=o,t=c,e=-3*o+3*l-2*c-h,n=2*o-2*l+c+h}return{initCatmullRom:function(o,l,c,h,f){i(l,c,f*(c-o),f*(h-l))},initNonuniformCatmullRom:function(o,l,c,h,f,p,m){let g=(l-o)/f-(c-o)/(f+p)+(c-l)/p,v=(c-l)/p-(h-l)/(p+m)+(h-c)/m;g*=p,v*=p,i(l,c,g,v)},calc:function(o){const l=o*o,c=l*o;return s+t*o+e*l+n*c}}}const Nu=new I,Ep=new Ym,Tp=new Ym,Ap=new Ym;class Fx extends Ki{constructor(t=[],e=!1,n="centripetal",i=.5){super(),this.isCatmullRomCurve3=!0,this.type="CatmullRomCurve3",this.points=t,this.closed=e,this.curveType=n,this.tension=i}getPoint(t,e=new I){const n=e,i=this.points,o=i.length,l=(o-(this.closed?0:1))*t;let c=Math.floor(l),h=l-c;this.closed?c+=c>0?0:(Math.floor(Math.abs(c)/o)+1)*o:h===0&&c===o-1&&(c=o-2,h=1);let f,p;this.closed||c>0?f=i[(c-1)%o]:(Nu.subVectors(i[0],i[1]).add(i[0]),f=Nu);const m=i[c%o],g=i[(c+1)%o];if(this.closed||c+2<o?p=i[(c+2)%o]:(Nu.subVectors(i[o-1],i[o-2]).add(i[o-1]),p=Nu),this.curveType==="centripetal"||this.curveType==="chordal"){const v=this.curveType==="chordal"?.5:.25;let x=Math.pow(f.distanceToSquared(m),v),b=Math.pow(m.distanceToSquared(g),v),S=Math.pow(g.distanceToSquared(p),v);b<1e-4&&(b=1),x<1e-4&&(x=b),S<1e-4&&(S=b),Ep.initNonuniformCatmullRom(f.x,m.x,g.x,p.x,x,b,S),Tp.initNonuniformCatmullRom(f.y,m.y,g.y,p.y,x,b,S),Ap.initNonuniformCatmullRom(f.z,m.z,g.z,p.z,x,b,S)}else this.curveType==="catmullrom"&&(Ep.initCatmullRom(f.x,m.x,g.x,p.x,this.tension),Tp.initCatmullRom(f.y,m.y,g.y,p.y,this.tension),Ap.initCatmullRom(f.z,m.z,g.z,p.z,this.tension));return n.set(Ep.calc(h),Tp.calc(h),Ap.calc(h)),n}copy(t){super.copy(t),this.points=[];for(let e=0,n=t.points.length;e<n;e++){const i=t.points[e];this.points.push(i.clone())}return this.closed=t.closed,this.curveType=t.curveType,this.tension=t.tension,this}toJSON(){const t=super.toJSON();t.points=[];for(let e=0,n=this.points.length;e<n;e++){const i=this.points[e];t.points.push(i.toArray())}return t.closed=this.closed,t.curveType=this.curveType,t.tension=this.tension,t}fromJSON(t){super.fromJSON(t),this.points=[];for(let e=0,n=t.points.length;e<n;e++){const i=t.points[e];this.points.push(new I().fromArray(i))}return this.closed=t.closed,this.curveType=t.curveType,this.tension=t.tension,this}}function d_(s,t,e,n,i){const o=(n-t)*.5,l=(i-e)*.5,c=s*s,h=s*c;return(2*e-2*n+o+l)*h+(-3*e+3*n-2*o-l)*c+o*s+e}function f1(s,t){const e=1-s;return e*e*t}function d1(s,t){return 2*(1-s)*s*t}function p1(s,t){return s*s*t}function Hl(s,t,e,n){return f1(s,t)+d1(s,e)+p1(s,n)}function m1(s,t){const e=1-s;return e*e*e*t}function g1(s,t){const e=1-s;return 3*e*e*s*t}function v1(s,t){return 3*(1-s)*s*s*t}function _1(s,t){return s*s*s*t}function Vl(s,t,e,n,i){return m1(s,t)+g1(s,e)+v1(s,n)+_1(s,i)}class jm extends Ki{constructor(t=new dt,e=new dt,n=new dt,i=new dt){super(),this.isCubicBezierCurve=!0,this.type="CubicBezierCurve",this.v0=t,this.v1=e,this.v2=n,this.v3=i}getPoint(t,e=new dt){const n=e,i=this.v0,o=this.v1,l=this.v2,c=this.v3;return n.set(Vl(t,i.x,o.x,l.x,c.x),Vl(t,i.y,o.y,l.y,c.y)),n}copy(t){return super.copy(t),this.v0.copy(t.v0),this.v1.copy(t.v1),this.v2.copy(t.v2),this.v3.copy(t.v3),this}toJSON(){const t=super.toJSON();return t.v0=this.v0.toArray(),t.v1=this.v1.toArray(),t.v2=this.v2.toArray(),t.v3=this.v3.toArray(),t}fromJSON(t){return super.fromJSON(t),this.v0.fromArray(t.v0),this.v1.fromArray(t.v1),this.v2.fromArray(t.v2),this.v3.fromArray(t.v3),this}}class Hx extends Ki{constructor(t=new I,e=new I,n=new I,i=new I){super(),this.isCubicBezierCurve3=!0,this.type="CubicBezierCurve3",this.v0=t,this.v1=e,this.v2=n,this.v3=i}getPoint(t,e=new I){const n=e,i=this.v0,o=this.v1,l=this.v2,c=this.v3;return n.set(Vl(t,i.x,o.x,l.x,c.x),Vl(t,i.y,o.y,l.y,c.y),Vl(t,i.z,o.z,l.z,c.z)),n}copy(t){return super.copy(t),this.v0.copy(t.v0),this.v1.copy(t.v1),this.v2.copy(t.v2),this.v3.copy(t.v3),this}toJSON(){const t=super.toJSON();return t.v0=this.v0.toArray(),t.v1=this.v1.toArray(),t.v2=this.v2.toArray(),t.v3=this.v3.toArray(),t}fromJSON(t){return super.fromJSON(t),this.v0.fromArray(t.v0),this.v1.fromArray(t.v1),this.v2.fromArray(t.v2),this.v3.fromArray(t.v3),this}}class Zm extends Ki{constructor(t=new dt,e=new dt){super(),this.isLineCurve=!0,this.type="LineCurve",this.v1=t,this.v2=e}getPoint(t,e=new dt){const n=e;return t===1?n.copy(this.v2):(n.copy(this.v2).sub(this.v1),n.multiplyScalar(t).add(this.v1)),n}getPointAt(t,e){return this.getPoint(t,e)}getTangent(t,e=new dt){return e.subVectors(this.v2,this.v1).normalize()}getTangentAt(t,e){return this.getTangent(t,e)}copy(t){return super.copy(t),this.v1.copy(t.v1),this.v2.copy(t.v2),this}toJSON(){const t=super.toJSON();return t.v1=this.v1.toArray(),t.v2=this.v2.toArray(),t}fromJSON(t){return super.fromJSON(t),this.v1.fromArray(t.v1),this.v2.fromArray(t.v2),this}}class Vx extends Ki{constructor(t=new I,e=new I){super(),this.isLineCurve3=!0,this.type="LineCurve3",this.v1=t,this.v2=e}getPoint(t,e=new I){const n=e;return t===1?n.copy(this.v2):(n.copy(this.v2).sub(this.v1),n.multiplyScalar(t).add(this.v1)),n}getPointAt(t,e){return this.getPoint(t,e)}getTangent(t,e=new I){return e.subVectors(this.v2,this.v1).normalize()}getTangentAt(t,e){return this.getTangent(t,e)}copy(t){return super.copy(t),this.v1.copy(t.v1),this.v2.copy(t.v2),this}toJSON(){const t=super.toJSON();return t.v1=this.v1.toArray(),t.v2=this.v2.toArray(),t}fromJSON(t){return super.fromJSON(t),this.v1.fromArray(t.v1),this.v2.fromArray(t.v2),this}}class Km extends Ki{constructor(t=new dt,e=new dt,n=new dt){super(),this.isQuadraticBezierCurve=!0,this.type="QuadraticBezierCurve",this.v0=t,this.v1=e,this.v2=n}getPoint(t,e=new dt){const n=e,i=this.v0,o=this.v1,l=this.v2;return n.set(Hl(t,i.x,o.x,l.x),Hl(t,i.y,o.y,l.y)),n}copy(t){return super.copy(t),this.v0.copy(t.v0),this.v1.copy(t.v1),this.v2.copy(t.v2),this}toJSON(){const t=super.toJSON();return t.v0=this.v0.toArray(),t.v1=this.v1.toArray(),t.v2=this.v2.toArray(),t}fromJSON(t){return super.fromJSON(t),this.v0.fromArray(t.v0),this.v1.fromArray(t.v1),this.v2.fromArray(t.v2),this}}class Jm extends Ki{constructor(t=new I,e=new I,n=new I){super(),this.isQuadraticBezierCurve3=!0,this.type="QuadraticBezierCurve3",this.v0=t,this.v1=e,this.v2=n}getPoint(t,e=new I){const n=e,i=this.v0,o=this.v1,l=this.v2;return n.set(Hl(t,i.x,o.x,l.x),Hl(t,i.y,o.y,l.y),Hl(t,i.z,o.z,l.z)),n}copy(t){return super.copy(t),this.v0.copy(t.v0),this.v1.copy(t.v1),this.v2.copy(t.v2),this}toJSON(){const t=super.toJSON();return t.v0=this.v0.toArray(),t.v1=this.v1.toArray(),t.v2=this.v2.toArray(),t}fromJSON(t){return super.fromJSON(t),this.v0.fromArray(t.v0),this.v1.fromArray(t.v1),this.v2.fromArray(t.v2),this}}class Qm extends Ki{constructor(t=[]){super(),this.isSplineCurve=!0,this.type="SplineCurve",this.points=t}getPoint(t,e=new dt){const n=e,i=this.points,o=(i.length-1)*t,l=Math.floor(o),c=o-l,h=i[l===0?l:l-1],f=i[l],p=i[l>i.length-2?i.length-1:l+1],m=i[l>i.length-3?i.length-1:l+2];return n.set(d_(c,h.x,f.x,p.x,m.x),d_(c,h.y,f.y,p.y,m.y)),n}copy(t){super.copy(t),this.points=[];for(let e=0,n=t.points.length;e<n;e++){const i=t.points[e];this.points.push(i.clone())}return this}toJSON(){const t=super.toJSON();t.points=[];for(let e=0,n=this.points.length;e<n;e++){const i=this.points[e];t.points.push(i.toArray())}return t}fromJSON(t){super.fromJSON(t),this.points=[];for(let e=0,n=t.points.length;e<n;e++){const i=t.points[e];this.points.push(new dt().fromArray(i))}return this}}var Fh=Object.freeze({__proto__:null,ArcCurve:zx,CatmullRomCurve3:Fx,CubicBezierCurve:jm,CubicBezierCurve3:Hx,EllipseCurve:pf,LineCurve:Zm,LineCurve3:Vx,QuadraticBezierCurve:Km,QuadraticBezierCurve3:Jm,SplineCurve:Qm});class Gx extends Ki{constructor(){super(),this.type="CurvePath",this.curves=[],this.autoClose=!1}add(t){this.curves.push(t)}closePath(){const t=this.curves[0].getPoint(0),e=this.curves[this.curves.length-1].getPoint(1);if(!t.equals(e)){const n=t.isVector2===!0?"LineCurve":"LineCurve3";this.curves.push(new Fh[n](e,t))}return this}getPoint(t,e){const n=t*this.getLength(),i=this.getCurveLengths();let o=0;for(;o<i.length;){if(i[o]>=n){const l=i[o]-n,c=this.curves[o],h=c.getLength(),f=h===0?0:1-l/h;return c.getPointAt(f,e)}o++}return null}getLength(){const t=this.getCurveLengths();return t[t.length-1]}updateArcLengths(){this.needsUpdate=!0,this.cacheLengths=null,this.getCurveLengths()}getCurveLengths(){if(this.cacheLengths&&this.cacheLengths.length===this.curves.length)return this.cacheLengths;const t=[];let e=0;for(let n=0,i=this.curves.length;n<i;n++)e+=this.curves[n].getLength(),t.push(e);return this.cacheLengths=t,t}getSpacedPoints(t=40){const e=[];for(let n=0;n<=t;n++)e.push(this.getPoint(n/t));return this.autoClose&&e.push(e[0]),e}getPoints(t=12){const e=[];let n;for(let i=0,o=this.curves;i<o.length;i++){const l=o[i],c=l.isEllipseCurve?t*2:l.isLineCurve||l.isLineCurve3?1:l.isSplineCurve?t*l.points.length:t,h=l.getPoints(c);for(let f=0;f<h.length;f++){const p=h[f];n&&n.equals(p)||(e.push(p),n=p)}}return this.autoClose&&e.length>1&&!e[e.length-1].equals(e[0])&&e.push(e[0]),e}copy(t){super.copy(t),this.curves=[];for(let e=0,n=t.curves.length;e<n;e++){const i=t.curves[e];this.curves.push(i.clone())}return this.autoClose=t.autoClose,this}toJSON(){const t=super.toJSON();t.autoClose=this.autoClose,t.curves=[];for(let e=0,n=this.curves.length;e<n;e++){const i=this.curves[e];t.curves.push(i.toJSON())}return t}fromJSON(t){super.fromJSON(t),this.autoClose=t.autoClose,this.curves=[];for(let e=0,n=t.curves.length;e<n;e++){const i=t.curves[e];this.curves.push(new Fh[i.type]().fromJSON(i))}return this}}class Hh extends Gx{constructor(t){super(),this.type="Path",this.currentPoint=new dt,t&&this.setFromPoints(t)}setFromPoints(t){this.moveTo(t[0].x,t[0].y);for(let e=1,n=t.length;e<n;e++)this.lineTo(t[e].x,t[e].y);return this}moveTo(t,e){return this.currentPoint.set(t,e),this}lineTo(t,e){const n=new Zm(this.currentPoint.clone(),new dt(t,e));return this.curves.push(n),this.currentPoint.set(t,e),this}quadraticCurveTo(t,e,n,i){const o=new Km(this.currentPoint.clone(),new dt(t,e),new dt(n,i));return this.curves.push(o),this.currentPoint.set(n,i),this}bezierCurveTo(t,e,n,i,o,l){const c=new jm(this.currentPoint.clone(),new dt(t,e),new dt(n,i),new dt(o,l));return this.curves.push(c),this.currentPoint.set(o,l),this}splineThru(t){const e=[this.currentPoint.clone()].concat(t),n=new Qm(e);return this.curves.push(n),this.currentPoint.copy(t[t.length-1]),this}arc(t,e,n,i,o,l){const c=this.currentPoint.x,h=this.currentPoint.y;return this.absarc(t+c,e+h,n,i,o,l),this}absarc(t,e,n,i,o,l){return this.absellipse(t,e,n,n,i,o,l),this}ellipse(t,e,n,i,o,l,c,h){const f=this.currentPoint.x,p=this.currentPoint.y;return this.absellipse(t+f,e+p,n,i,o,l,c,h),this}absellipse(t,e,n,i,o,l,c,h){const f=new pf(t,e,n,i,o,l,c,h);if(this.curves.length>0){const m=f.getPoint(0);m.equals(this.currentPoint)||this.lineTo(m.x,m.y)}this.curves.push(f);const p=f.getPoint(1);return this.currentPoint.copy(p),this}copy(t){return super.copy(t),this.currentPoint.copy(t.currentPoint),this}toJSON(){const t=super.toJSON();return t.currentPoint=this.currentPoint.toArray(),t}fromJSON(t){return super.fromJSON(t),this.currentPoint.fromArray(t.currentPoint),this}}class pr extends Hh{constructor(t){super(t),this.uuid=Mi(),this.type="Shape",this.holes=[]}getPointsHoles(t){const e=[];for(let n=0,i=this.holes.length;n<i;n++)e[n]=this.holes[n].getPoints(t);return e}extractPoints(t){return{shape:this.getPoints(t),holes:this.getPointsHoles(t)}}copy(t){super.copy(t),this.holes=[];for(let e=0,n=t.holes.length;e<n;e++){const i=t.holes[e];this.holes.push(i.clone())}return this}toJSON(){const t=super.toJSON();t.uuid=this.uuid,t.holes=[];for(let e=0,n=this.holes.length;e<n;e++){const i=this.holes[e];t.holes.push(i.toJSON())}return t}fromJSON(t){super.fromJSON(t),this.uuid=t.uuid,this.holes=[];for(let e=0,n=t.holes.length;e<n;e++){const i=t.holes[e];this.holes.push(new Hh().fromJSON(i))}return this}}function y1(s,t,e=2){const n=t&&t.length,i=n?t[0]*e:s.length;let o=kx(s,0,i,e,!0);const l=[];if(!o||o.next===o.prev)return l;let c,h,f;if(n&&(o=E1(s,t,o,e)),s.length>80*e){c=1/0,h=1/0;let p=-1/0,m=-1/0;for(let g=e;g<i;g+=e){const v=s[g],x=s[g+1];v<c&&(c=v),x<h&&(h=x),v>p&&(p=v),x>m&&(m=x)}f=Math.max(p-c,m-h),f=f!==0?32767/f:0}return Ql(o,l,e,c,h,f,0),l}function kx(s,t,e,n,i){let o;if(i===I1(s,t,e,n)>0)for(let l=t;l<e;l+=n)o=p_(l/n|0,s[l],s[l+1],o);else for(let l=e-n;l>=t;l-=n)o=p_(l/n|0,s[l],s[l+1],o);return o&&Io(o,o.next)&&(tc(o),o=o.next),o}function vr(s,t){if(!s)return s;t||(t=s);let e=s,n;do if(n=!1,!e.steiner&&(Io(e,e.next)||en(e.prev,e,e.next)===0)){if(tc(e),e=t=e.prev,e===e.next)break;n=!0}else e=e.next;while(n||e!==t);return t}function Ql(s,t,e,n,i,o,l){if(!s)return;!l&&o&&R1(s,n,i,o);let c=s;for(;s.prev!==s.next;){const h=s.prev,f=s.next;if(o?S1(s,n,i,o):x1(s)){t.push(h.i,s.i,f.i),tc(s),s=f.next,c=f.next;continue}if(s=f,s===c){l?l===1?(s=M1(vr(s),t),Ql(s,t,e,n,i,o,2)):l===2&&b1(s,t,e,n,i,o):Ql(vr(s),t,e,n,i,o,1);break}}}function x1(s){const t=s.prev,e=s,n=s.next;if(en(t,e,n)>=0)return!1;const i=t.x,o=e.x,l=n.x,c=t.y,h=e.y,f=n.y,p=Math.min(i,o,l),m=Math.min(c,h,f),g=Math.max(i,o,l),v=Math.max(c,h,f);let x=n.next;for(;x!==t;){if(x.x>=p&&x.x<=g&&x.y>=m&&x.y<=v&&Dl(i,c,o,h,l,f,x.x,x.y)&&en(x.prev,x,x.next)>=0)return!1;x=x.next}return!0}function S1(s,t,e,n){const i=s.prev,o=s,l=s.next;if(en(i,o,l)>=0)return!1;const c=i.x,h=o.x,f=l.x,p=i.y,m=o.y,g=l.y,v=Math.min(c,h,f),x=Math.min(p,m,g),b=Math.max(c,h,f),S=Math.max(p,m,g),_=hm(v,x,t,e,n),E=hm(b,S,t,e,n);let A=s.prevZ,T=s.nextZ;for(;A&&A.z>=_&&T&&T.z<=E;){if(A.x>=v&&A.x<=b&&A.y>=x&&A.y<=S&&A!==i&&A!==l&&Dl(c,p,h,m,f,g,A.x,A.y)&&en(A.prev,A,A.next)>=0||(A=A.prevZ,T.x>=v&&T.x<=b&&T.y>=x&&T.y<=S&&T!==i&&T!==l&&Dl(c,p,h,m,f,g,T.x,T.y)&&en(T.prev,T,T.next)>=0))return!1;T=T.nextZ}for(;A&&A.z>=_;){if(A.x>=v&&A.x<=b&&A.y>=x&&A.y<=S&&A!==i&&A!==l&&Dl(c,p,h,m,f,g,A.x,A.y)&&en(A.prev,A,A.next)>=0)return!1;A=A.prevZ}for(;T&&T.z<=E;){if(T.x>=v&&T.x<=b&&T.y>=x&&T.y<=S&&T!==i&&T!==l&&Dl(c,p,h,m,f,g,T.x,T.y)&&en(T.prev,T,T.next)>=0)return!1;T=T.nextZ}return!0}function M1(s,t){let e=s;do{const n=e.prev,i=e.next.next;!Io(n,i)&&Xx(n,e,e.next,i)&&$l(n,i)&&$l(i,n)&&(t.push(n.i,e.i,i.i),tc(e),tc(e.next),e=s=i),e=e.next}while(e!==s);return vr(e)}function b1(s,t,e,n,i,o){let l=s;do{let c=l.next.next;for(;c!==l.prev;){if(l.i!==c.i&&N1(l,c)){let h=qx(l,c);l=vr(l,l.next),h=vr(h,h.next),Ql(l,t,e,n,i,o,0),Ql(h,t,e,n,i,o,0);return}c=c.next}l=l.next}while(l!==s)}function E1(s,t,e,n){const i=[];for(let o=0,l=t.length;o<l;o++){const c=t[o]*n,h=o<l-1?t[o+1]*n:s.length,f=kx(s,c,h,n,!1);f===f.next&&(f.steiner=!0),i.push(U1(f))}i.sort(T1);for(let o=0;o<i.length;o++)e=A1(i[o],e);return e}function T1(s,t){let e=s.x-t.x;if(e===0&&(e=s.y-t.y,e===0)){const n=(s.next.y-s.y)/(s.next.x-s.x),i=(t.next.y-t.y)/(t.next.x-t.x);e=n-i}return e}function A1(s,t){const e=w1(s,t);if(!e)return t;const n=qx(e,s);return vr(n,n.next),vr(e,e.next)}function w1(s,t){let e=t;const n=s.x,i=s.y;let o=-1/0,l;if(Io(s,e))return e;do{if(Io(s,e.next))return e.next;if(i<=e.y&&i>=e.next.y&&e.next.y!==e.y){const m=e.x+(i-e.y)*(e.next.x-e.x)/(e.next.y-e.y);if(m<=n&&m>o&&(o=m,l=e.x<e.next.x?e:e.next,m===n))return l}e=e.next}while(e!==t);if(!l)return null;const c=l,h=l.x,f=l.y;let p=1/0;e=l;do{if(n>=e.x&&e.x>=h&&n!==e.x&&Wx(i<f?n:o,i,h,f,i<f?o:n,i,e.x,e.y)){const m=Math.abs(i-e.y)/(n-e.x);$l(e,s)&&(m<p||m===p&&(e.x>l.x||e.x===l.x&&C1(l,e)))&&(l=e,p=m)}e=e.next}while(e!==c);return l}function C1(s,t){return en(s.prev,s,t.prev)<0&&en(t.next,s,s.next)<0}function R1(s,t,e,n){let i=s;do i.z===0&&(i.z=hm(i.x,i.y,t,e,n)),i.prevZ=i.prev,i.nextZ=i.next,i=i.next;while(i!==s);i.prevZ.nextZ=null,i.prevZ=null,D1(i)}function D1(s){let t,e=1;do{let n=s,i;s=null;let o=null;for(t=0;n;){t++;let l=n,c=0;for(let f=0;f<e&&(c++,l=l.nextZ,!!l);f++);let h=e;for(;c>0||h>0&&l;)c!==0&&(h===0||!l||n.z<=l.z)?(i=n,n=n.nextZ,c--):(i=l,l=l.nextZ,h--),o?o.nextZ=i:s=i,i.prevZ=o,o=i;n=l}o.nextZ=null,e*=2}while(t>1);return s}function hm(s,t,e,n,i){return s=(s-e)*i|0,t=(t-n)*i|0,s=(s|s<<8)&16711935,s=(s|s<<4)&252645135,s=(s|s<<2)&858993459,s=(s|s<<1)&1431655765,t=(t|t<<8)&16711935,t=(t|t<<4)&252645135,t=(t|t<<2)&858993459,t=(t|t<<1)&1431655765,s|t<<1}function U1(s){let t=s,e=s;do(t.x<e.x||t.x===e.x&&t.y<e.y)&&(e=t),t=t.next;while(t!==s);return e}function Wx(s,t,e,n,i,o,l,c){return(i-l)*(t-c)>=(s-l)*(o-c)&&(s-l)*(n-c)>=(e-l)*(t-c)&&(e-l)*(o-c)>=(i-l)*(n-c)}function Dl(s,t,e,n,i,o,l,c){return!(s===l&&t===c)&&Wx(s,t,e,n,i,o,l,c)}function N1(s,t){return s.next.i!==t.i&&s.prev.i!==t.i&&!L1(s,t)&&($l(s,t)&&$l(t,s)&&P1(s,t)&&(en(s.prev,s,t.prev)||en(s,t.prev,t))||Io(s,t)&&en(s.prev,s,s.next)>0&&en(t.prev,t,t.next)>0)}function en(s,t,e){return(t.y-s.y)*(e.x-t.x)-(t.x-s.x)*(e.y-t.y)}function Io(s,t){return s.x===t.x&&s.y===t.y}function Xx(s,t,e,n){const i=Pu(en(s,t,e)),o=Pu(en(s,t,n)),l=Pu(en(e,n,s)),c=Pu(en(e,n,t));return!!(i!==o&&l!==c||i===0&&Lu(s,e,t)||o===0&&Lu(s,n,t)||l===0&&Lu(e,s,n)||c===0&&Lu(e,t,n))}function Lu(s,t,e){return t.x<=Math.max(s.x,e.x)&&t.x>=Math.min(s.x,e.x)&&t.y<=Math.max(s.y,e.y)&&t.y>=Math.min(s.y,e.y)}function Pu(s){return s>0?1:s<0?-1:0}function L1(s,t){let e=s;do{if(e.i!==s.i&&e.next.i!==s.i&&e.i!==t.i&&e.next.i!==t.i&&Xx(e,e.next,s,t))return!0;e=e.next}while(e!==s);return!1}function $l(s,t){return en(s.prev,s,s.next)<0?en(s,t,s.next)>=0&&en(s,s.prev,t)>=0:en(s,t,s.prev)<0||en(s,s.next,t)<0}function P1(s,t){let e=s,n=!1;const i=(s.x+t.x)/2,o=(s.y+t.y)/2;do e.y>o!=e.next.y>o&&e.next.y!==e.y&&i<(e.next.x-e.x)*(o-e.y)/(e.next.y-e.y)+e.x&&(n=!n),e=e.next;while(e!==s);return n}function qx(s,t){const e=fm(s.i,s.x,s.y),n=fm(t.i,t.x,t.y),i=s.next,o=t.prev;return s.next=t,t.prev=s,e.next=i,i.prev=e,n.next=e,e.prev=n,o.next=n,n.prev=o,n}function p_(s,t,e,n){const i=fm(s,t,e);return n?(i.next=n.next,i.prev=n,n.next.prev=i,n.next=i):(i.prev=i,i.next=i),i}function tc(s){s.next.prev=s.prev,s.prev.next=s.next,s.prevZ&&(s.prevZ.nextZ=s.nextZ),s.nextZ&&(s.nextZ.prevZ=s.prevZ)}function fm(s,t,e){return{i:s,x:t,y:e,prev:null,next:null,z:0,prevZ:null,nextZ:null,steiner:!1}}function I1(s,t,e,n){let i=0;for(let o=t,l=e-n;o<e;o+=n)i+=(s[l]-s[o])*(s[o+1]+s[l+1]),l=o;return i}class O1{static triangulate(t,e,n=2){return y1(t,e,n)}}class ji{static area(t){const e=t.length;let n=0;for(let i=e-1,o=0;o<e;i=o++)n+=t[i].x*t[o].y-t[o].x*t[i].y;return n*.5}static isClockWise(t){return ji.area(t)<0}static triangulateShape(t,e){const n=[],i=[],o=[];m_(t),g_(n,t);let l=t.length;e.forEach(m_);for(let h=0;h<e.length;h++)i.push(l),l+=e[h].length,g_(n,e[h]);const c=O1.triangulate(n,i);for(let h=0;h<c.length;h+=3)o.push(c.slice(h,h+3));return o}}function m_(s){const t=s.length;t>2&&s[t-1].equals(s[0])&&s.pop()}function g_(s,t){for(let e=0;e<t.length;e++)s.push(t[e].x),s.push(t[e].y)}class mf extends xe{constructor(t=new pr([new dt(.5,.5),new dt(-.5,.5),new dt(-.5,-.5),new dt(.5,-.5)]),e={}){super(),this.type="ExtrudeGeometry",this.parameters={shapes:t,options:e},t=Array.isArray(t)?t:[t];const n=this,i=[],o=[];for(let c=0,h=t.length;c<h;c++){const f=t[c];l(f)}this.setAttribute("position",new Jt(i,3)),this.setAttribute("uv",new Jt(o,2)),this.computeVertexNormals();function l(c){const h=[],f=e.curveSegments!==void 0?e.curveSegments:12,p=e.steps!==void 0?e.steps:1,m=e.depth!==void 0?e.depth:1;let g=e.bevelEnabled!==void 0?e.bevelEnabled:!0,v=e.bevelThickness!==void 0?e.bevelThickness:.2,x=e.bevelSize!==void 0?e.bevelSize:v-.1,b=e.bevelOffset!==void 0?e.bevelOffset:0,S=e.bevelSegments!==void 0?e.bevelSegments:3;const _=e.extrudePath,E=e.UVGenerator!==void 0?e.UVGenerator:B1;let A,T=!1,U,D,P,O;_&&(A=_.getSpacedPoints(p),T=!0,g=!1,U=_.computeFrenetFrames(p,!1),D=new I,P=new I,O=new I),g||(S=0,v=0,x=0,b=0);const C=c.extractPoints(f);let w=C.shape;const B=C.holes;if(!ji.isClockWise(w)){w=w.reverse();for(let mt=0,ut=B.length;mt<ut;mt++){const St=B[mt];ji.isClockWise(St)&&(B[mt]=St.reverse())}}function X(mt){const St=10000000000000001e-36;let ht=mt[0];for(let Nt=1;Nt<=mt.length;Nt++){const yt=Nt%mt.length,wt=mt[yt],ce=wt.x-ht.x,he=wt.y-ht.y,z=ce*ce+he*he,R=Math.max(Math.abs(wt.x),Math.abs(wt.y),Math.abs(ht.x),Math.abs(ht.y)),J=St*R*R;if(z<=J){mt.splice(yt,1),Nt--;continue}ht=wt}}X(w),B.forEach(X);const Z=B.length,ot=w;for(let mt=0;mt<Z;mt++){const ut=B[mt];w=w.concat(ut)}function k(mt,ut,St){return ut||console.error("THREE.ExtrudeGeometry: vec does not exist"),mt.clone().addScaledVector(ut,St)}const et=w.length;function q(mt,ut,St){let ht,Nt,yt;const wt=mt.x-ut.x,ce=mt.y-ut.y,he=St.x-mt.x,z=St.y-mt.y,R=wt*wt+ce*ce,J=wt*z-ce*he;if(Math.abs(J)>Number.EPSILON){const rt=Math.sqrt(R),_t=Math.sqrt(he*he+z*z),lt=ut.x-ce/rt,Kt=ut.y+wt/rt,Dt=St.x-z/_t,Xt=St.y+he/_t,qt=((Dt-lt)*z-(Xt-Kt)*he)/(wt*z-ce*he);ht=lt+wt*qt-mt.x,Nt=Kt+ce*qt-mt.y;const Mt=ht*ht+Nt*Nt;if(Mt<=2)return new dt(ht,Nt);yt=Math.sqrt(Mt/2)}else{let rt=!1;wt>Number.EPSILON?he>Number.EPSILON&&(rt=!0):wt<-Number.EPSILON?he<-Number.EPSILON&&(rt=!0):Math.sign(ce)===Math.sign(z)&&(rt=!0),rt?(ht=-ce,Nt=wt,yt=Math.sqrt(R)):(ht=wt,Nt=ce,yt=Math.sqrt(R/2))}return new dt(ht/yt,Nt/yt)}const ct=[];for(let mt=0,ut=ot.length,St=ut-1,ht=mt+1;mt<ut;mt++,St++,ht++)St===ut&&(St=0),ht===ut&&(ht=0),ct[mt]=q(ot[mt],ot[St],ot[ht]);const vt=[];let xt,Ot=ct.concat();for(let mt=0,ut=Z;mt<ut;mt++){const St=B[mt];xt=[];for(let ht=0,Nt=St.length,yt=Nt-1,wt=ht+1;ht<Nt;ht++,yt++,wt++)yt===Nt&&(yt=0),wt===Nt&&(wt=0),xt[ht]=q(St[ht],St[yt],St[wt]);vt.push(xt),Ot=Ot.concat(xt)}let ne;if(S===0)ne=ji.triangulateShape(ot,B);else{const mt=[],ut=[];for(let St=0;St<S;St++){const ht=St/S,Nt=v*Math.cos(ht*Math.PI/2),yt=x*Math.sin(ht*Math.PI/2)+b;for(let wt=0,ce=ot.length;wt<ce;wt++){const he=k(ot[wt],ct[wt],yt);Zt(he.x,he.y,-Nt),ht===0&&mt.push(he)}for(let wt=0,ce=Z;wt<ce;wt++){const he=B[wt];xt=vt[wt];const z=[];for(let R=0,J=he.length;R<J;R++){const rt=k(he[R],xt[R],yt);Zt(rt.x,rt.y,-Nt),ht===0&&z.push(rt)}ht===0&&ut.push(z)}}ne=ji.triangulateShape(mt,ut)}const jt=ne.length,at=x+b;for(let mt=0;mt<et;mt++){const ut=g?k(w[mt],Ot[mt],at):w[mt];T?(P.copy(U.normals[0]).multiplyScalar(ut.x),D.copy(U.binormals[0]).multiplyScalar(ut.y),O.copy(A[0]).add(P).add(D),Zt(O.x,O.y,O.z)):Zt(ut.x,ut.y,0)}for(let mt=1;mt<=p;mt++)for(let ut=0;ut<et;ut++){const St=g?k(w[ut],Ot[ut],at):w[ut];T?(P.copy(U.normals[mt]).multiplyScalar(St.x),D.copy(U.binormals[mt]).multiplyScalar(St.y),O.copy(A[mt]).add(P).add(D),Zt(O.x,O.y,O.z)):Zt(St.x,St.y,m/p*mt)}for(let mt=S-1;mt>=0;mt--){const ut=mt/S,St=v*Math.cos(ut*Math.PI/2),ht=x*Math.sin(ut*Math.PI/2)+b;for(let Nt=0,yt=ot.length;Nt<yt;Nt++){const wt=k(ot[Nt],ct[Nt],ht);Zt(wt.x,wt.y,m+St)}for(let Nt=0,yt=B.length;Nt<yt;Nt++){const wt=B[Nt];xt=vt[Nt];for(let ce=0,he=wt.length;ce<he;ce++){const z=k(wt[ce],xt[ce],ht);T?Zt(z.x,z.y+A[p-1].y,A[p-1].x+St):Zt(z.x,z.y,m+St)}}}Lt(),Rt();function Lt(){const mt=i.length/3;if(g){let ut=0,St=et*ut;for(let ht=0;ht<jt;ht++){const Nt=ne[ht];re(Nt[2]+St,Nt[1]+St,Nt[0]+St)}ut=p+S*2,St=et*ut;for(let ht=0;ht<jt;ht++){const Nt=ne[ht];re(Nt[0]+St,Nt[1]+St,Nt[2]+St)}}else{for(let ut=0;ut<jt;ut++){const St=ne[ut];re(St[2],St[1],St[0])}for(let ut=0;ut<jt;ut++){const St=ne[ut];re(St[0]+et*p,St[1]+et*p,St[2]+et*p)}}n.addGroup(mt,i.length/3-mt,0)}function Rt(){const mt=i.length/3;let ut=0;Qt(ot,ut),ut+=ot.length;for(let St=0,ht=B.length;St<ht;St++){const Nt=B[St];Qt(Nt,ut),ut+=Nt.length}n.addGroup(mt,i.length/3-mt,1)}function Qt(mt,ut){let St=mt.length;for(;--St>=0;){const ht=St;let Nt=St-1;Nt<0&&(Nt=mt.length-1);for(let yt=0,wt=p+S*2;yt<wt;yt++){const ce=et*yt,he=et*(yt+1),z=ut+ht+ce,R=ut+Nt+ce,J=ut+Nt+he,rt=ut+ht+he;Be(z,R,J,rt)}}}function Zt(mt,ut,St){h.push(mt),h.push(ut),h.push(St)}function re(mt,ut,St){le(mt),le(ut),le(St);const ht=i.length/3,Nt=E.generateTopUV(n,i,ht-3,ht-2,ht-1);H(Nt[0]),H(Nt[1]),H(Nt[2])}function Be(mt,ut,St,ht){le(mt),le(ut),le(ht),le(ut),le(St),le(ht);const Nt=i.length/3,yt=E.generateSideWallUV(n,i,Nt-6,Nt-3,Nt-2,Nt-1);H(yt[0]),H(yt[1]),H(yt[3]),H(yt[1]),H(yt[2]),H(yt[3])}function le(mt){i.push(h[mt*3+0]),i.push(h[mt*3+1]),i.push(h[mt*3+2])}function H(mt){o.push(mt.x),o.push(mt.y)}}}copy(t){return super.copy(t),this.parameters=Object.assign({},t.parameters),this}toJSON(){const t=super.toJSON(),e=this.parameters.shapes,n=this.parameters.options;return z1(e,n,t)}static fromJSON(t,e){const n=[];for(let o=0,l=t.shapes.length;o<l;o++){const c=e[t.shapes[o]];n.push(c)}const i=t.options.extrudePath;return i!==void 0&&(t.options.extrudePath=new Fh[i.type]().fromJSON(i)),new mf(n,t.options)}}const B1={generateTopUV:function(s,t,e,n,i){const o=t[e*3],l=t[e*3+1],c=t[n*3],h=t[n*3+1],f=t[i*3],p=t[i*3+1];return[new dt(o,l),new dt(c,h),new dt(f,p)]},generateSideWallUV:function(s,t,e,n,i,o){const l=t[e*3],c=t[e*3+1],h=t[e*3+2],f=t[n*3],p=t[n*3+1],m=t[n*3+2],g=t[i*3],v=t[i*3+1],x=t[i*3+2],b=t[o*3],S=t[o*3+1],_=t[o*3+2];return Math.abs(c-p)<Math.abs(l-f)?[new dt(l,1-h),new dt(f,1-m),new dt(g,1-x),new dt(b,1-_)]:[new dt(c,1-h),new dt(p,1-m),new dt(v,1-x),new dt(S,1-_)]}};function z1(s,t,e){if(e.shapes=[],Array.isArray(s))for(let n=0,i=s.length;n<i;n++){const o=s[n];e.shapes.push(o.uuid)}else e.shapes.push(s.uuid);return e.options=Object.assign({},t),t.extrudePath!==void 0&&(e.options.extrudePath=t.extrudePath.toJSON()),e}class gf extends Sa{constructor(t=1,e=0){const n=(1+Math.sqrt(5))/2,i=[-1,n,0,1,n,0,-1,-n,0,1,-n,0,0,-1,n,0,1,n,0,-1,-n,0,1,-n,n,0,-1,n,0,1,-n,0,-1,-n,0,1],o=[0,11,5,0,5,1,0,1,7,0,7,10,0,10,11,1,5,9,5,11,4,11,10,2,10,7,6,7,1,8,3,9,4,3,4,2,3,2,6,3,6,8,3,8,9,4,9,5,2,4,11,6,2,10,8,6,7,9,8,1];super(i,o,t,e),this.type="IcosahedronGeometry",this.parameters={radius:t,detail:e}}static fromJSON(t){return new gf(t.radius,t.detail)}}class vf extends xe{constructor(t=[new dt(0,-.5),new dt(.5,0),new dt(0,.5)],e=12,n=0,i=Math.PI*2){super(),this.type="LatheGeometry",this.parameters={points:t,segments:e,phiStart:n,phiLength:i},e=Math.floor(e),i=de(i,0,Math.PI*2);const o=[],l=[],c=[],h=[],f=[],p=1/e,m=new I,g=new dt,v=new I,x=new I,b=new I;let S=0,_=0;for(let E=0;E<=t.length-1;E++)switch(E){case 0:S=t[E+1].x-t[E].x,_=t[E+1].y-t[E].y,v.x=_*1,v.y=-S,v.z=_*0,b.copy(v),v.normalize(),h.push(v.x,v.y,v.z);break;case t.length-1:h.push(b.x,b.y,b.z);break;default:S=t[E+1].x-t[E].x,_=t[E+1].y-t[E].y,v.x=_*1,v.y=-S,v.z=_*0,x.copy(v),v.x+=b.x,v.y+=b.y,v.z+=b.z,v.normalize(),h.push(v.x,v.y,v.z),b.copy(x)}for(let E=0;E<=e;E++){const A=n+E*p*i,T=Math.sin(A),U=Math.cos(A);for(let D=0;D<=t.length-1;D++){m.x=t[D].x*T,m.y=t[D].y,m.z=t[D].x*U,l.push(m.x,m.y,m.z),g.x=E/e,g.y=D/(t.length-1),c.push(g.x,g.y);const P=h[3*D+0]*T,O=h[3*D+1],C=h[3*D+0]*U;f.push(P,O,C)}}for(let E=0;E<e;E++)for(let A=0;A<t.length-1;A++){const T=A+E*t.length,U=T,D=T+t.length,P=T+t.length+1,O=T+1;o.push(U,D,O),o.push(P,O,D)}this.setIndex(o),this.setAttribute("position",new Jt(l,3)),this.setAttribute("uv",new Jt(c,2)),this.setAttribute("normal",new Jt(f,3))}copy(t){return super.copy(t),this.parameters=Object.assign({},t.parameters),this}static fromJSON(t){return new vf(t.points,t.segments,t.phiStart,t.phiLength)}}class fc extends Sa{constructor(t=1,e=0){const n=[1,0,0,-1,0,0,0,1,0,0,-1,0,0,0,1,0,0,-1],i=[0,2,4,0,4,3,0,3,5,0,5,2,1,2,5,1,5,3,1,3,4,1,4,2];super(n,i,t,e),this.type="OctahedronGeometry",this.parameters={radius:t,detail:e}}static fromJSON(t){return new fc(t.radius,t.detail)}}class Ho extends xe{constructor(t=1,e=1,n=1,i=1){super(),this.type="PlaneGeometry",this.parameters={width:t,height:e,widthSegments:n,heightSegments:i};const o=t/2,l=e/2,c=Math.floor(n),h=Math.floor(i),f=c+1,p=h+1,m=t/c,g=e/h,v=[],x=[],b=[],S=[];for(let _=0;_<p;_++){const E=_*g-l;for(let A=0;A<f;A++){const T=A*m-o;x.push(T,-E,0),b.push(0,0,1),S.push(A/c),S.push(1-_/h)}}for(let _=0;_<h;_++)for(let E=0;E<c;E++){const A=E+f*_,T=E+f*(_+1),U=E+1+f*(_+1),D=E+1+f*_;v.push(A,T,D),v.push(T,U,D)}this.setIndex(v),this.setAttribute("position",new Jt(x,3)),this.setAttribute("normal",new Jt(b,3)),this.setAttribute("uv",new Jt(S,2))}copy(t){return super.copy(t),this.parameters=Object.assign({},t.parameters),this}static fromJSON(t){return new Ho(t.width,t.height,t.widthSegments,t.heightSegments)}}class _f extends xe{constructor(t=.5,e=1,n=32,i=1,o=0,l=Math.PI*2){super(),this.type="RingGeometry",this.parameters={innerRadius:t,outerRadius:e,thetaSegments:n,phiSegments:i,thetaStart:o,thetaLength:l},n=Math.max(3,n),i=Math.max(1,i);const c=[],h=[],f=[],p=[];let m=t;const g=(e-t)/i,v=new I,x=new dt;for(let b=0;b<=i;b++){for(let S=0;S<=n;S++){const _=o+S/n*l;v.x=m*Math.cos(_),v.y=m*Math.sin(_),h.push(v.x,v.y,v.z),f.push(0,0,1),x.x=(v.x/e+1)/2,x.y=(v.y/e+1)/2,p.push(x.x,x.y)}m+=g}for(let b=0;b<i;b++){const S=b*(n+1);for(let _=0;_<n;_++){const E=_+S,A=E,T=E+n+1,U=E+n+2,D=E+1;c.push(A,T,D),c.push(T,U,D)}}this.setIndex(c),this.setAttribute("position",new Jt(h,3)),this.setAttribute("normal",new Jt(f,3)),this.setAttribute("uv",new Jt(p,2))}copy(t){return super.copy(t),this.parameters=Object.assign({},t.parameters),this}static fromJSON(t){return new _f(t.innerRadius,t.outerRadius,t.thetaSegments,t.phiSegments,t.thetaStart,t.thetaLength)}}class yf extends xe{constructor(t=new pr([new dt(0,.5),new dt(-.5,-.5),new dt(.5,-.5)]),e=12){super(),this.type="ShapeGeometry",this.parameters={shapes:t,curveSegments:e};const n=[],i=[],o=[],l=[];let c=0,h=0;if(Array.isArray(t)===!1)f(t);else for(let p=0;p<t.length;p++)f(t[p]),this.addGroup(c,h,p),c+=h,h=0;this.setIndex(n),this.setAttribute("position",new Jt(i,3)),this.setAttribute("normal",new Jt(o,3)),this.setAttribute("uv",new Jt(l,2));function f(p){const m=i.length/3,g=p.extractPoints(e);let v=g.shape;const x=g.holes;ji.isClockWise(v)===!1&&(v=v.reverse());for(let S=0,_=x.length;S<_;S++){const E=x[S];ji.isClockWise(E)===!0&&(x[S]=E.reverse())}const b=ji.triangulateShape(v,x);for(let S=0,_=x.length;S<_;S++){const E=x[S];v=v.concat(E)}for(let S=0,_=v.length;S<_;S++){const E=v[S];i.push(E.x,E.y,0),o.push(0,0,1),l.push(E.x,E.y)}for(let S=0,_=b.length;S<_;S++){const E=b[S],A=E[0]+m,T=E[1]+m,U=E[2]+m;n.push(A,T,U),h+=3}}}copy(t){return super.copy(t),this.parameters=Object.assign({},t.parameters),this}toJSON(){const t=super.toJSON(),e=this.parameters.shapes;return F1(e,t)}static fromJSON(t,e){const n=[];for(let i=0,o=t.shapes.length;i<o;i++){const l=e[t.shapes[i]];n.push(l)}return new yf(n,t.curveSegments)}}function F1(s,t){if(t.shapes=[],Array.isArray(s))for(let e=0,n=s.length;e<n;e++){const i=s[e];t.shapes.push(i.uuid)}else t.shapes.push(s.uuid);return t}class dc extends xe{constructor(t=1,e=32,n=16,i=0,o=Math.PI*2,l=0,c=Math.PI){super(),this.type="SphereGeometry",this.parameters={radius:t,widthSegments:e,heightSegments:n,phiStart:i,phiLength:o,thetaStart:l,thetaLength:c},e=Math.max(3,Math.floor(e)),n=Math.max(2,Math.floor(n));const h=Math.min(l+c,Math.PI);let f=0;const p=[],m=new I,g=new I,v=[],x=[],b=[],S=[];for(let _=0;_<=n;_++){const E=[],A=_/n;let T=0;_===0&&l===0?T=.5/e:_===n&&h===Math.PI&&(T=-.5/e);for(let U=0;U<=e;U++){const D=U/e;m.x=-t*Math.cos(i+D*o)*Math.sin(l+A*c),m.y=t*Math.cos(l+A*c),m.z=t*Math.sin(i+D*o)*Math.sin(l+A*c),x.push(m.x,m.y,m.z),g.copy(m).normalize(),b.push(g.x,g.y,g.z),S.push(D+T,1-A),E.push(f++)}p.push(E)}for(let _=0;_<n;_++)for(let E=0;E<e;E++){const A=p[_][E+1],T=p[_][E],U=p[_+1][E],D=p[_+1][E+1];(_!==0||l>0)&&v.push(A,T,D),(_!==n-1||h<Math.PI)&&v.push(T,U,D)}this.setIndex(v),this.setAttribute("position",new Jt(x,3)),this.setAttribute("normal",new Jt(b,3)),this.setAttribute("uv",new Jt(S,2))}copy(t){return super.copy(t),this.parameters=Object.assign({},t.parameters),this}static fromJSON(t){return new dc(t.radius,t.widthSegments,t.heightSegments,t.phiStart,t.phiLength,t.thetaStart,t.thetaLength)}}class xf extends Sa{constructor(t=1,e=0){const n=[1,1,1,-1,-1,1,-1,1,-1,1,-1,-1],i=[2,1,0,0,3,2,1,3,0,2,3,1];super(n,i,t,e),this.type="TetrahedronGeometry",this.parameters={radius:t,detail:e}}static fromJSON(t){return new xf(t.radius,t.detail)}}class Sf extends xe{constructor(t=1,e=.4,n=12,i=48,o=Math.PI*2){super(),this.type="TorusGeometry",this.parameters={radius:t,tube:e,radialSegments:n,tubularSegments:i,arc:o},n=Math.floor(n),i=Math.floor(i);const l=[],c=[],h=[],f=[],p=new I,m=new I,g=new I;for(let v=0;v<=n;v++)for(let x=0;x<=i;x++){const b=x/i*o,S=v/n*Math.PI*2;m.x=(t+e*Math.cos(S))*Math.cos(b),m.y=(t+e*Math.cos(S))*Math.sin(b),m.z=e*Math.sin(S),c.push(m.x,m.y,m.z),p.x=t*Math.cos(b),p.y=t*Math.sin(b),g.subVectors(m,p).normalize(),h.push(g.x,g.y,g.z),f.push(x/i),f.push(v/n)}for(let v=1;v<=n;v++)for(let x=1;x<=i;x++){const b=(i+1)*v+x-1,S=(i+1)*(v-1)+x-1,_=(i+1)*(v-1)+x,E=(i+1)*v+x;l.push(b,S,E),l.push(S,_,E)}this.setIndex(l),this.setAttribute("position",new Jt(c,3)),this.setAttribute("normal",new Jt(h,3)),this.setAttribute("uv",new Jt(f,2))}copy(t){return super.copy(t),this.parameters=Object.assign({},t.parameters),this}static fromJSON(t){return new Sf(t.radius,t.tube,t.radialSegments,t.tubularSegments,t.arc)}}class Mf extends xe{constructor(t=1,e=.4,n=64,i=8,o=2,l=3){super(),this.type="TorusKnotGeometry",this.parameters={radius:t,tube:e,tubularSegments:n,radialSegments:i,p:o,q:l},n=Math.floor(n),i=Math.floor(i);const c=[],h=[],f=[],p=[],m=new I,g=new I,v=new I,x=new I,b=new I,S=new I,_=new I;for(let A=0;A<=n;++A){const T=A/n*o*Math.PI*2;E(T,o,l,t,v),E(T+.01,o,l,t,x),S.subVectors(x,v),_.addVectors(x,v),b.crossVectors(S,_),_.crossVectors(b,S),b.normalize(),_.normalize();for(let U=0;U<=i;++U){const D=U/i*Math.PI*2,P=-e*Math.cos(D),O=e*Math.sin(D);m.x=v.x+(P*_.x+O*b.x),m.y=v.y+(P*_.y+O*b.y),m.z=v.z+(P*_.z+O*b.z),h.push(m.x,m.y,m.z),g.subVectors(m,v).normalize(),f.push(g.x,g.y,g.z),p.push(A/n),p.push(U/i)}}for(let A=1;A<=n;A++)for(let T=1;T<=i;T++){const U=(i+1)*(A-1)+(T-1),D=(i+1)*A+(T-1),P=(i+1)*A+T,O=(i+1)*(A-1)+T;c.push(U,D,O),c.push(D,P,O)}this.setIndex(c),this.setAttribute("position",new Jt(h,3)),this.setAttribute("normal",new Jt(f,3)),this.setAttribute("uv",new Jt(p,2));function E(A,T,U,D,P){const O=Math.cos(A),C=Math.sin(A),w=U/T*A,B=Math.cos(w);P.x=D*(2+B)*.5*O,P.y=D*(2+B)*C*.5,P.z=D*Math.sin(w)*.5}}copy(t){return super.copy(t),this.parameters=Object.assign({},t.parameters),this}static fromJSON(t){return new Mf(t.radius,t.tube,t.tubularSegments,t.radialSegments,t.p,t.q)}}class bf extends xe{constructor(t=new Jm(new I(-1,-1,0),new I(-1,1,0),new I(1,1,0)),e=64,n=1,i=8,o=!1){super(),this.type="TubeGeometry",this.parameters={path:t,tubularSegments:e,radius:n,radialSegments:i,closed:o};const l=t.computeFrenetFrames(e,o);this.tangents=l.tangents,this.normals=l.normals,this.binormals=l.binormals;const c=new I,h=new I,f=new dt;let p=new I;const m=[],g=[],v=[],x=[];b(),this.setIndex(x),this.setAttribute("position",new Jt(m,3)),this.setAttribute("normal",new Jt(g,3)),this.setAttribute("uv",new Jt(v,2));function b(){for(let A=0;A<e;A++)S(A);S(o===!1?e:0),E(),_()}function S(A){p=t.getPointAt(A/e,p);const T=l.normals[A],U=l.binormals[A];for(let D=0;D<=i;D++){const P=D/i*Math.PI*2,O=Math.sin(P),C=-Math.cos(P);h.x=C*T.x+O*U.x,h.y=C*T.y+O*U.y,h.z=C*T.z+O*U.z,h.normalize(),g.push(h.x,h.y,h.z),c.x=p.x+n*h.x,c.y=p.y+n*h.y,c.z=p.z+n*h.z,m.push(c.x,c.y,c.z)}}function _(){for(let A=1;A<=e;A++)for(let T=1;T<=i;T++){const U=(i+1)*(A-1)+(T-1),D=(i+1)*A+(T-1),P=(i+1)*A+T,O=(i+1)*(A-1)+T;x.push(U,D,O),x.push(D,P,O)}}function E(){for(let A=0;A<=e;A++)for(let T=0;T<=i;T++)f.x=A/e,f.y=T/i,v.push(f.x,f.y)}}copy(t){return super.copy(t),this.parameters=Object.assign({},t.parameters),this}toJSON(){const t=super.toJSON();return t.path=this.parameters.path.toJSON(),t}static fromJSON(t){return new bf(new Fh[t.path.type]().fromJSON(t.path),t.tubularSegments,t.radius,t.radialSegments,t.closed)}}class Yx extends xe{constructor(t=null){if(super(),this.type="WireframeGeometry",this.parameters={geometry:t},t!==null){const e=[],n=new Set,i=new I,o=new I;if(t.index!==null){const l=t.attributes.position,c=t.index;let h=t.groups;h.length===0&&(h=[{start:0,count:c.count,materialIndex:0}]);for(let f=0,p=h.length;f<p;++f){const m=h[f],g=m.start,v=m.count;for(let x=g,b=g+v;x<b;x+=3)for(let S=0;S<3;S++){const _=c.getX(x+S),E=c.getX(x+(S+1)%3);i.fromBufferAttribute(l,_),o.fromBufferAttribute(l,E),v_(i,o,n)===!0&&(e.push(i.x,i.y,i.z),e.push(o.x,o.y,o.z))}}}else{const l=t.attributes.position;for(let c=0,h=l.count/3;c<h;c++)for(let f=0;f<3;f++){const p=3*c+f,m=3*c+(f+1)%3;i.fromBufferAttribute(l,p),o.fromBufferAttribute(l,m),v_(i,o,n)===!0&&(e.push(i.x,i.y,i.z),e.push(o.x,o.y,o.z))}}this.setAttribute("position",new Jt(e,3))}}copy(t){return super.copy(t),this.parameters=Object.assign({},t.parameters),this}}function v_(s,t,e){const n=`${s.x},${s.y},${s.z}-${t.x},${t.y},${t.z}`,i=`${t.x},${t.y},${t.z}-${s.x},${s.y},${s.z}`;return e.has(n)===!0||e.has(i)===!0?!1:(e.add(n),e.add(i),!0)}var __=Object.freeze({__proto__:null,BoxGeometry:xr,CapsuleGeometry:hf,CircleGeometry:ff,ConeGeometry:hc,CylinderGeometry:uc,DodecahedronGeometry:df,EdgesGeometry:Bx,ExtrudeGeometry:mf,IcosahedronGeometry:gf,LatheGeometry:vf,OctahedronGeometry:fc,PlaneGeometry:Ho,PolyhedronGeometry:Sa,RingGeometry:_f,ShapeGeometry:yf,SphereGeometry:dc,TetrahedronGeometry:xf,TorusGeometry:Sf,TorusKnotGeometry:Mf,TubeGeometry:bf,WireframeGeometry:Yx});class jx extends kn{constructor(t){super(),this.isShadowMaterial=!0,this.type="ShadowMaterial",this.color=new kt(0),this.transparent=!0,this.fog=!0,this.setValues(t)}copy(t){return super.copy(t),this.color.copy(t.color),this.fog=t.fog,this}}class Zx extends Zi{constructor(t){super(t),this.isRawShaderMaterial=!0,this.type="RawShaderMaterial"}}class $m extends kn{constructor(t){super(),this.isMeshStandardMaterial=!0,this.type="MeshStandardMaterial",this.defines={STANDARD:""},this.color=new kt(16777215),this.roughness=1,this.metalness=0,this.map=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.emissive=new kt(0),this.emissiveIntensity=1,this.emissiveMap=null,this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=ya,this.normalScale=new dt(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.roughnessMap=null,this.metalnessMap=null,this.alphaMap=null,this.envMap=null,this.envMapRotation=new bi,this.envMapIntensity=1,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.flatShading=!1,this.fog=!0,this.setValues(t)}copy(t){return super.copy(t),this.defines={STANDARD:""},this.color.copy(t.color),this.roughness=t.roughness,this.metalness=t.metalness,this.map=t.map,this.lightMap=t.lightMap,this.lightMapIntensity=t.lightMapIntensity,this.aoMap=t.aoMap,this.aoMapIntensity=t.aoMapIntensity,this.emissive.copy(t.emissive),this.emissiveMap=t.emissiveMap,this.emissiveIntensity=t.emissiveIntensity,this.bumpMap=t.bumpMap,this.bumpScale=t.bumpScale,this.normalMap=t.normalMap,this.normalMapType=t.normalMapType,this.normalScale.copy(t.normalScale),this.displacementMap=t.displacementMap,this.displacementScale=t.displacementScale,this.displacementBias=t.displacementBias,this.roughnessMap=t.roughnessMap,this.metalnessMap=t.metalnessMap,this.alphaMap=t.alphaMap,this.envMap=t.envMap,this.envMapRotation.copy(t.envMapRotation),this.envMapIntensity=t.envMapIntensity,this.wireframe=t.wireframe,this.wireframeLinewidth=t.wireframeLinewidth,this.wireframeLinecap=t.wireframeLinecap,this.wireframeLinejoin=t.wireframeLinejoin,this.flatShading=t.flatShading,this.fog=t.fog,this}}class Kx extends $m{constructor(t){super(),this.isMeshPhysicalMaterial=!0,this.defines={STANDARD:"",PHYSICAL:""},this.type="MeshPhysicalMaterial",this.anisotropyRotation=0,this.anisotropyMap=null,this.clearcoatMap=null,this.clearcoatRoughness=0,this.clearcoatRoughnessMap=null,this.clearcoatNormalScale=new dt(1,1),this.clearcoatNormalMap=null,this.ior=1.5,Object.defineProperty(this,"reflectivity",{get:function(){return de(2.5*(this.ior-1)/(this.ior+1),0,1)},set:function(e){this.ior=(1+.4*e)/(1-.4*e)}}),this.iridescenceMap=null,this.iridescenceIOR=1.3,this.iridescenceThicknessRange=[100,400],this.iridescenceThicknessMap=null,this.sheenColor=new kt(0),this.sheenColorMap=null,this.sheenRoughness=1,this.sheenRoughnessMap=null,this.transmissionMap=null,this.thickness=0,this.thicknessMap=null,this.attenuationDistance=1/0,this.attenuationColor=new kt(1,1,1),this.specularIntensity=1,this.specularIntensityMap=null,this.specularColor=new kt(1,1,1),this.specularColorMap=null,this._anisotropy=0,this._clearcoat=0,this._dispersion=0,this._iridescence=0,this._sheen=0,this._transmission=0,this.setValues(t)}get anisotropy(){return this._anisotropy}set anisotropy(t){this._anisotropy>0!=t>0&&this.version++,this._anisotropy=t}get clearcoat(){return this._clearcoat}set clearcoat(t){this._clearcoat>0!=t>0&&this.version++,this._clearcoat=t}get iridescence(){return this._iridescence}set iridescence(t){this._iridescence>0!=t>0&&this.version++,this._iridescence=t}get dispersion(){return this._dispersion}set dispersion(t){this._dispersion>0!=t>0&&this.version++,this._dispersion=t}get sheen(){return this._sheen}set sheen(t){this._sheen>0!=t>0&&this.version++,this._sheen=t}get transmission(){return this._transmission}set transmission(t){this._transmission>0!=t>0&&this.version++,this._transmission=t}copy(t){return super.copy(t),this.defines={STANDARD:"",PHYSICAL:""},this.anisotropy=t.anisotropy,this.anisotropyRotation=t.anisotropyRotation,this.anisotropyMap=t.anisotropyMap,this.clearcoat=t.clearcoat,this.clearcoatMap=t.clearcoatMap,this.clearcoatRoughness=t.clearcoatRoughness,this.clearcoatRoughnessMap=t.clearcoatRoughnessMap,this.clearcoatNormalMap=t.clearcoatNormalMap,this.clearcoatNormalScale.copy(t.clearcoatNormalScale),this.dispersion=t.dispersion,this.ior=t.ior,this.iridescence=t.iridescence,this.iridescenceMap=t.iridescenceMap,this.iridescenceIOR=t.iridescenceIOR,this.iridescenceThicknessRange=[...t.iridescenceThicknessRange],this.iridescenceThicknessMap=t.iridescenceThicknessMap,this.sheen=t.sheen,this.sheenColor.copy(t.sheenColor),this.sheenColorMap=t.sheenColorMap,this.sheenRoughness=t.sheenRoughness,this.sheenRoughnessMap=t.sheenRoughnessMap,this.transmission=t.transmission,this.transmissionMap=t.transmissionMap,this.thickness=t.thickness,this.thicknessMap=t.thicknessMap,this.attenuationDistance=t.attenuationDistance,this.attenuationColor.copy(t.attenuationColor),this.specularIntensity=t.specularIntensity,this.specularIntensityMap=t.specularIntensityMap,this.specularColor.copy(t.specularColor),this.specularColorMap=t.specularColorMap,this}}class Jx extends kn{constructor(t){super(),this.isMeshPhongMaterial=!0,this.type="MeshPhongMaterial",this.color=new kt(16777215),this.specular=new kt(1118481),this.shininess=30,this.map=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.emissive=new kt(0),this.emissiveIntensity=1,this.emissiveMap=null,this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=ya,this.normalScale=new dt(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.specularMap=null,this.alphaMap=null,this.envMap=null,this.envMapRotation=new bi,this.combine=oc,this.reflectivity=1,this.refractionRatio=.98,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.flatShading=!1,this.fog=!0,this.setValues(t)}copy(t){return super.copy(t),this.color.copy(t.color),this.specular.copy(t.specular),this.shininess=t.shininess,this.map=t.map,this.lightMap=t.lightMap,this.lightMapIntensity=t.lightMapIntensity,this.aoMap=t.aoMap,this.aoMapIntensity=t.aoMapIntensity,this.emissive.copy(t.emissive),this.emissiveMap=t.emissiveMap,this.emissiveIntensity=t.emissiveIntensity,this.bumpMap=t.bumpMap,this.bumpScale=t.bumpScale,this.normalMap=t.normalMap,this.normalMapType=t.normalMapType,this.normalScale.copy(t.normalScale),this.displacementMap=t.displacementMap,this.displacementScale=t.displacementScale,this.displacementBias=t.displacementBias,this.specularMap=t.specularMap,this.alphaMap=t.alphaMap,this.envMap=t.envMap,this.envMapRotation.copy(t.envMapRotation),this.combine=t.combine,this.reflectivity=t.reflectivity,this.refractionRatio=t.refractionRatio,this.wireframe=t.wireframe,this.wireframeLinewidth=t.wireframeLinewidth,this.wireframeLinecap=t.wireframeLinecap,this.wireframeLinejoin=t.wireframeLinejoin,this.flatShading=t.flatShading,this.fog=t.fog,this}}class Qx extends kn{constructor(t){super(),this.isMeshToonMaterial=!0,this.defines={TOON:""},this.type="MeshToonMaterial",this.color=new kt(16777215),this.map=null,this.gradientMap=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.emissive=new kt(0),this.emissiveIntensity=1,this.emissiveMap=null,this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=ya,this.normalScale=new dt(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.alphaMap=null,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.fog=!0,this.setValues(t)}copy(t){return super.copy(t),this.color.copy(t.color),this.map=t.map,this.gradientMap=t.gradientMap,this.lightMap=t.lightMap,this.lightMapIntensity=t.lightMapIntensity,this.aoMap=t.aoMap,this.aoMapIntensity=t.aoMapIntensity,this.emissive.copy(t.emissive),this.emissiveMap=t.emissiveMap,this.emissiveIntensity=t.emissiveIntensity,this.bumpMap=t.bumpMap,this.bumpScale=t.bumpScale,this.normalMap=t.normalMap,this.normalMapType=t.normalMapType,this.normalScale.copy(t.normalScale),this.displacementMap=t.displacementMap,this.displacementScale=t.displacementScale,this.displacementBias=t.displacementBias,this.alphaMap=t.alphaMap,this.wireframe=t.wireframe,this.wireframeLinewidth=t.wireframeLinewidth,this.wireframeLinecap=t.wireframeLinecap,this.wireframeLinejoin=t.wireframeLinejoin,this.fog=t.fog,this}}class $x extends kn{constructor(t){super(),this.isMeshNormalMaterial=!0,this.type="MeshNormalMaterial",this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=ya,this.normalScale=new dt(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.wireframe=!1,this.wireframeLinewidth=1,this.flatShading=!1,this.setValues(t)}copy(t){return super.copy(t),this.bumpMap=t.bumpMap,this.bumpScale=t.bumpScale,this.normalMap=t.normalMap,this.normalMapType=t.normalMapType,this.normalScale.copy(t.normalScale),this.displacementMap=t.displacementMap,this.displacementScale=t.displacementScale,this.displacementBias=t.displacementBias,this.wireframe=t.wireframe,this.wireframeLinewidth=t.wireframeLinewidth,this.flatShading=t.flatShading,this}}class tS extends kn{constructor(t){super(),this.isMeshLambertMaterial=!0,this.type="MeshLambertMaterial",this.color=new kt(16777215),this.map=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.emissive=new kt(0),this.emissiveIntensity=1,this.emissiveMap=null,this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=ya,this.normalScale=new dt(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.specularMap=null,this.alphaMap=null,this.envMap=null,this.envMapRotation=new bi,this.combine=oc,this.reflectivity=1,this.refractionRatio=.98,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.flatShading=!1,this.fog=!0,this.setValues(t)}copy(t){return super.copy(t),this.color.copy(t.color),this.map=t.map,this.lightMap=t.lightMap,this.lightMapIntensity=t.lightMapIntensity,this.aoMap=t.aoMap,this.aoMapIntensity=t.aoMapIntensity,this.emissive.copy(t.emissive),this.emissiveMap=t.emissiveMap,this.emissiveIntensity=t.emissiveIntensity,this.bumpMap=t.bumpMap,this.bumpScale=t.bumpScale,this.normalMap=t.normalMap,this.normalMapType=t.normalMapType,this.normalScale.copy(t.normalScale),this.displacementMap=t.displacementMap,this.displacementScale=t.displacementScale,this.displacementBias=t.displacementBias,this.specularMap=t.specularMap,this.alphaMap=t.alphaMap,this.envMap=t.envMap,this.envMapRotation.copy(t.envMapRotation),this.combine=t.combine,this.reflectivity=t.reflectivity,this.refractionRatio=t.refractionRatio,this.wireframe=t.wireframe,this.wireframeLinewidth=t.wireframeLinewidth,this.wireframeLinecap=t.wireframeLinecap,this.wireframeLinejoin=t.wireframeLinejoin,this.flatShading=t.flatShading,this.fog=t.fog,this}}class tg extends kn{constructor(t){super(),this.isMeshDepthMaterial=!0,this.type="MeshDepthMaterial",this.depthPacking=ux,this.map=null,this.alphaMap=null,this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.wireframe=!1,this.wireframeLinewidth=1,this.setValues(t)}copy(t){return super.copy(t),this.depthPacking=t.depthPacking,this.map=t.map,this.alphaMap=t.alphaMap,this.displacementMap=t.displacementMap,this.displacementScale=t.displacementScale,this.displacementBias=t.displacementBias,this.wireframe=t.wireframe,this.wireframeLinewidth=t.wireframeLinewidth,this}}class eg extends kn{constructor(t){super(),this.isMeshDistanceMaterial=!0,this.type="MeshDistanceMaterial",this.map=null,this.alphaMap=null,this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.setValues(t)}copy(t){return super.copy(t),this.map=t.map,this.alphaMap=t.alphaMap,this.displacementMap=t.displacementMap,this.displacementScale=t.displacementScale,this.displacementBias=t.displacementBias,this}}class eS extends kn{constructor(t){super(),this.isMeshMatcapMaterial=!0,this.defines={MATCAP:""},this.type="MeshMatcapMaterial",this.color=new kt(16777215),this.matcap=null,this.map=null,this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=ya,this.normalScale=new dt(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.alphaMap=null,this.flatShading=!1,this.fog=!0,this.setValues(t)}copy(t){return super.copy(t),this.defines={MATCAP:""},this.color.copy(t.color),this.matcap=t.matcap,this.map=t.map,this.bumpMap=t.bumpMap,this.bumpScale=t.bumpScale,this.normalMap=t.normalMap,this.normalMapType=t.normalMapType,this.normalScale.copy(t.normalScale),this.displacementMap=t.displacementMap,this.displacementScale=t.displacementScale,this.displacementBias=t.displacementBias,this.alphaMap=t.alphaMap,this.flatShading=t.flatShading,this.fog=t.fog,this}}class nS extends $n{constructor(t){super(),this.isLineDashedMaterial=!0,this.type="LineDashedMaterial",this.scale=1,this.dashSize=3,this.gapSize=1,this.setValues(t)}copy(t){return super.copy(t),this.scale=t.scale,this.dashSize=t.dashSize,this.gapSize=t.gapSize,this}}function ur(s,t){return!s||s.constructor===t?s:typeof t.BYTES_PER_ELEMENT=="number"?new t(s):Array.prototype.slice.call(s)}function iS(s){return ArrayBuffer.isView(s)&&!(s instanceof DataView)}function sS(s){function t(i,o){return s[i]-s[o]}const e=s.length,n=new Array(e);for(let i=0;i!==e;++i)n[i]=i;return n.sort(t),n}function dm(s,t,e){const n=s.length,i=new s.constructor(n);for(let o=0,l=0;l!==n;++o){const c=e[o]*t;for(let h=0;h!==t;++h)i[l++]=s[c+h]}return i}function ng(s,t,e,n){let i=1,o=s[0];for(;o!==void 0&&o[n]===void 0;)o=s[i++];if(o===void 0)return;let l=o[n];if(l!==void 0)if(Array.isArray(l))do l=o[n],l!==void 0&&(t.push(o.time),e.push(...l)),o=s[i++];while(o!==void 0);else if(l.toArray!==void 0)do l=o[n],l!==void 0&&(t.push(o.time),l.toArray(e,e.length)),o=s[i++];while(o!==void 0);else do l=o[n],l!==void 0&&(t.push(o.time),e.push(l)),o=s[i++];while(o!==void 0)}function H1(s,t,e,n,i=30){const o=s.clone();o.name=t;const l=[];for(let h=0;h<o.tracks.length;++h){const f=o.tracks[h],p=f.getValueSize(),m=[],g=[];for(let v=0;v<f.times.length;++v){const x=f.times[v]*i;if(!(x<e||x>=n)){m.push(f.times[v]);for(let b=0;b<p;++b)g.push(f.values[v*p+b])}}m.length!==0&&(f.times=ur(m,f.times.constructor),f.values=ur(g,f.values.constructor),l.push(f))}o.tracks=l;let c=1/0;for(let h=0;h<o.tracks.length;++h)c>o.tracks[h].times[0]&&(c=o.tracks[h].times[0]);for(let h=0;h<o.tracks.length;++h)o.tracks[h].shift(-1*c);return o.resetDuration(),o}function V1(s,t=0,e=s,n=30){n<=0&&(n=30);const i=e.tracks.length,o=t/n;for(let l=0;l<i;++l){const c=e.tracks[l],h=c.ValueTypeName;if(h==="bool"||h==="string")continue;const f=s.tracks.find(function(_){return _.name===c.name&&_.ValueTypeName===h});if(f===void 0)continue;let p=0;const m=c.getValueSize();c.createInterpolant.isInterpolantFactoryMethodGLTFCubicSpline&&(p=m/3);let g=0;const v=f.getValueSize();f.createInterpolant.isInterpolantFactoryMethodGLTFCubicSpline&&(g=v/3);const x=c.times.length-1;let b;if(o<=c.times[0]){const _=p,E=m-p;b=c.values.slice(_,E)}else if(o>=c.times[x]){const _=x*m+p,E=_+m-p;b=c.values.slice(_,E)}else{const _=c.createInterpolant(),E=p,A=m-p;_.evaluate(o),b=_.resultBuffer.slice(E,A)}h==="quaternion"&&new Vn().fromArray(b).normalize().conjugate().toArray(b);const S=f.times.length;for(let _=0;_<S;++_){const E=_*v+g;if(h==="quaternion")Vn.multiplyQuaternionsFlat(f.values,E,b,0,f.values,E);else{const A=v-g*2;for(let T=0;T<A;++T)f.values[E+T]-=b[T]}}}return s.blendMode=Om,s}class G1{static convertArray(t,e){return ur(t,e)}static isTypedArray(t){return iS(t)}static getKeyframeOrder(t){return sS(t)}static sortedArray(t,e,n){return dm(t,e,n)}static flattenJSON(t,e,n,i){ng(t,e,n,i)}static subclip(t,e,n,i,o=30){return H1(t,e,n,i,o)}static makeClipAdditive(t,e=0,n=t,i=30){return V1(t,e,n,i)}}class pc{constructor(t,e,n,i){this.parameterPositions=t,this._cachedIndex=0,this.resultBuffer=i!==void 0?i:new e.constructor(n),this.sampleValues=e,this.valueSize=n,this.settings=null,this.DefaultSettings_={}}evaluate(t){const e=this.parameterPositions;let n=this._cachedIndex,i=e[n],o=e[n-1];t:{e:{let l;n:{i:if(!(t<i)){for(let c=n+2;;){if(i===void 0){if(t<o)break i;return n=e.length,this._cachedIndex=n,this.copySampleValue_(n-1)}if(n===c)break;if(o=i,i=e[++n],t<i)break e}l=e.length;break n}if(!(t>=o)){const c=e[1];t<c&&(n=2,o=c);for(let h=n-2;;){if(o===void 0)return this._cachedIndex=0,this.copySampleValue_(0);if(n===h)break;if(i=o,o=e[--n-1],t>=o)break e}l=n,n=0;break n}break t}for(;n<l;){const c=n+l>>>1;t<e[c]?l=c:n=c+1}if(i=e[n],o=e[n-1],o===void 0)return this._cachedIndex=0,this.copySampleValue_(0);if(i===void 0)return n=e.length,this._cachedIndex=n,this.copySampleValue_(n-1)}this._cachedIndex=n,this.intervalChanged_(n,o,i)}return this.interpolate_(n,o,t,i)}getSettings_(){return this.settings||this.DefaultSettings_}copySampleValue_(t){const e=this.resultBuffer,n=this.sampleValues,i=this.valueSize,o=t*i;for(let l=0;l!==i;++l)e[l]=n[o+l];return e}interpolate_(){throw new Error("call to abstract method")}intervalChanged_(){}}class aS extends pc{constructor(t,e,n,i){super(t,e,n,i),this._weightPrev=-0,this._offsetPrev=-0,this._weightNext=-0,this._offsetNext=-0,this.DefaultSettings_={endingStart:lr,endingEnd:lr}}intervalChanged_(t,e,n){const i=this.parameterPositions;let o=t-2,l=t+1,c=i[o],h=i[l];if(c===void 0)switch(this.getSettings_().endingStart){case cr:o=t,c=2*e-n;break;case jl:o=i.length-2,c=e+i[o]-i[o+1];break;default:o=t,c=n}if(h===void 0)switch(this.getSettings_().endingEnd){case cr:l=t,h=2*n-e;break;case jl:l=1,h=n+i[1]-i[0];break;default:l=t-1,h=e}const f=(n-e)*.5,p=this.valueSize;this._weightPrev=f/(e-c),this._weightNext=f/(h-n),this._offsetPrev=o*p,this._offsetNext=l*p}interpolate_(t,e,n,i){const o=this.resultBuffer,l=this.sampleValues,c=this.valueSize,h=t*c,f=h-c,p=this._offsetPrev,m=this._offsetNext,g=this._weightPrev,v=this._weightNext,x=(n-e)/(i-e),b=x*x,S=b*x,_=-g*S+2*g*b-g*x,E=(1+g)*S+(-1.5-2*g)*b+(-.5+g)*x+1,A=(-1-v)*S+(1.5+v)*b+.5*x,T=v*S-v*b;for(let U=0;U!==c;++U)o[U]=_*l[p+U]+E*l[f+U]+A*l[h+U]+T*l[m+U];return o}}class ig extends pc{constructor(t,e,n,i){super(t,e,n,i)}interpolate_(t,e,n,i){const o=this.resultBuffer,l=this.sampleValues,c=this.valueSize,h=t*c,f=h-c,p=(n-e)/(i-e),m=1-p;for(let g=0;g!==c;++g)o[g]=l[f+g]*m+l[h+g]*p;return o}}class rS extends pc{constructor(t,e,n,i){super(t,e,n,i)}interpolate_(t){return this.copySampleValue_(t-1)}}class Oi{constructor(t,e,n,i){if(t===void 0)throw new Error("THREE.KeyframeTrack: track name is undefined");if(e===void 0||e.length===0)throw new Error("THREE.KeyframeTrack: no keyframes in track named "+t);this.name=t,this.times=ur(e,this.TimeBufferType),this.values=ur(n,this.ValueBufferType),this.setInterpolation(i||this.DefaultInterpolation)}static toJSON(t){const e=t.constructor;let n;if(e.toJSON!==this.toJSON)n=e.toJSON(t);else{n={name:t.name,times:ur(t.times,Array),values:ur(t.values,Array)};const i=t.getInterpolation();i!==t.DefaultInterpolation&&(n.interpolation=i)}return n.type=t.ValueTypeName,n}InterpolantFactoryMethodDiscrete(t){return new rS(this.times,this.values,this.getValueSize(),t)}InterpolantFactoryMethodLinear(t){return new ig(this.times,this.values,this.getValueSize(),t)}InterpolantFactoryMethodSmooth(t){return new aS(this.times,this.values,this.getValueSize(),t)}setInterpolation(t){let e;switch(t){case Yl:e=this.InterpolantFactoryMethodDiscrete;break;case Oh:e=this.InterpolantFactoryMethodLinear;break;case Ju:e=this.InterpolantFactoryMethodSmooth;break}if(e===void 0){const n="unsupported interpolation for "+this.ValueTypeName+" keyframe track named "+this.name;if(this.createInterpolant===void 0)if(t!==this.DefaultInterpolation)this.setInterpolation(this.DefaultInterpolation);else throw new Error(n);return console.warn("THREE.KeyframeTrack:",n),this}return this.createInterpolant=e,this}getInterpolation(){switch(this.createInterpolant){case this.InterpolantFactoryMethodDiscrete:return Yl;case this.InterpolantFactoryMethodLinear:return Oh;case this.InterpolantFactoryMethodSmooth:return Ju}}getValueSize(){return this.values.length/this.times.length}shift(t){if(t!==0){const e=this.times;for(let n=0,i=e.length;n!==i;++n)e[n]+=t}return this}scale(t){if(t!==1){const e=this.times;for(let n=0,i=e.length;n!==i;++n)e[n]*=t}return this}trim(t,e){const n=this.times,i=n.length;let o=0,l=i-1;for(;o!==i&&n[o]<t;)++o;for(;l!==-1&&n[l]>e;)--l;if(++l,o!==0||l!==i){o>=l&&(l=Math.max(l,1),o=l-1);const c=this.getValueSize();this.times=n.slice(o,l),this.values=this.values.slice(o*c,l*c)}return this}validate(){let t=!0;const e=this.getValueSize();e-Math.floor(e)!==0&&(console.error("THREE.KeyframeTrack: Invalid value size in track.",this),t=!1);const n=this.times,i=this.values,o=n.length;o===0&&(console.error("THREE.KeyframeTrack: Track is empty.",this),t=!1);let l=null;for(let c=0;c!==o;c++){const h=n[c];if(typeof h=="number"&&isNaN(h)){console.error("THREE.KeyframeTrack: Time is not a valid number.",this,c,h),t=!1;break}if(l!==null&&l>h){console.error("THREE.KeyframeTrack: Out of order keys.",this,c,h,l),t=!1;break}l=h}if(i!==void 0&&iS(i))for(let c=0,h=i.length;c!==h;++c){const f=i[c];if(isNaN(f)){console.error("THREE.KeyframeTrack: Value is not a valid number.",this,c,f),t=!1;break}}return t}optimize(){const t=this.times.slice(),e=this.values.slice(),n=this.getValueSize(),i=this.getInterpolation()===Ju,o=t.length-1;let l=1;for(let c=1;c<o;++c){let h=!1;const f=t[c],p=t[c+1];if(f!==p&&(c!==1||f!==t[0]))if(i)h=!0;else{const m=c*n,g=m-n,v=m+n;for(let x=0;x!==n;++x){const b=e[m+x];if(b!==e[g+x]||b!==e[v+x]){h=!0;break}}}if(h){if(c!==l){t[l]=t[c];const m=c*n,g=l*n;for(let v=0;v!==n;++v)e[g+v]=e[m+v]}++l}}if(o>0){t[l]=t[o];for(let c=o*n,h=l*n,f=0;f!==n;++f)e[h+f]=e[c+f];++l}return l!==t.length?(this.times=t.slice(0,l),this.values=e.slice(0,l*n)):(this.times=t,this.values=e),this}clone(){const t=this.times.slice(),e=this.values.slice(),n=this.constructor,i=new n(this.name,t,e);return i.createInterpolant=this.createInterpolant,i}}Oi.prototype.ValueTypeName="";Oi.prototype.TimeBufferType=Float32Array;Oi.prototype.ValueBufferType=Float32Array;Oi.prototype.DefaultInterpolation=Oh;class Sr extends Oi{constructor(t,e,n){super(t,e,n)}}Sr.prototype.ValueTypeName="bool";Sr.prototype.ValueBufferType=Array;Sr.prototype.DefaultInterpolation=Yl;Sr.prototype.InterpolantFactoryMethodLinear=void 0;Sr.prototype.InterpolantFactoryMethodSmooth=void 0;class sg extends Oi{constructor(t,e,n,i){super(t,e,n,i)}}sg.prototype.ValueTypeName="color";class ec extends Oi{constructor(t,e,n,i){super(t,e,n,i)}}ec.prototype.ValueTypeName="number";class oS extends pc{constructor(t,e,n,i){super(t,e,n,i)}interpolate_(t,e,n,i){const o=this.resultBuffer,l=this.sampleValues,c=this.valueSize,h=(n-e)/(i-e);let f=t*c;for(let p=f+c;f!==p;f+=4)Vn.slerpFlat(o,0,l,f-c,l,f,h);return o}}class mc extends Oi{constructor(t,e,n,i){super(t,e,n,i)}InterpolantFactoryMethodLinear(t){return new oS(this.times,this.values,this.getValueSize(),t)}}mc.prototype.ValueTypeName="quaternion";mc.prototype.InterpolantFactoryMethodSmooth=void 0;class Mr extends Oi{constructor(t,e,n){super(t,e,n)}}Mr.prototype.ValueTypeName="string";Mr.prototype.ValueBufferType=Array;Mr.prototype.DefaultInterpolation=Yl;Mr.prototype.InterpolantFactoryMethodLinear=void 0;Mr.prototype.InterpolantFactoryMethodSmooth=void 0;class nc extends Oi{constructor(t,e,n,i){super(t,e,n,i)}}nc.prototype.ValueTypeName="vector";class ic{constructor(t="",e=-1,n=[],i=tf){this.name=t,this.tracks=n,this.duration=e,this.blendMode=i,this.uuid=Mi(),this.duration<0&&this.resetDuration()}static parse(t){const e=[],n=t.tracks,i=1/(t.fps||1);for(let l=0,c=n.length;l!==c;++l)e.push(W1(n[l]).scale(i));const o=new this(t.name,t.duration,e,t.blendMode);return o.uuid=t.uuid,o}static toJSON(t){const e=[],n=t.tracks,i={name:t.name,duration:t.duration,tracks:e,uuid:t.uuid,blendMode:t.blendMode};for(let o=0,l=n.length;o!==l;++o)e.push(Oi.toJSON(n[o]));return i}static CreateFromMorphTargetSequence(t,e,n,i){const o=e.length,l=[];for(let c=0;c<o;c++){let h=[],f=[];h.push((c+o-1)%o,c,(c+1)%o),f.push(0,1,0);const p=sS(h);h=dm(h,1,p),f=dm(f,1,p),!i&&h[0]===0&&(h.push(o),f.push(f[0])),l.push(new ec(".morphTargetInfluences["+e[c].name+"]",h,f).scale(1/n))}return new this(t,-1,l)}static findByName(t,e){let n=t;if(!Array.isArray(t)){const i=t;n=i.geometry&&i.geometry.animations||i.animations}for(let i=0;i<n.length;i++)if(n[i].name===e)return n[i];return null}static CreateClipsFromMorphTargetSequences(t,e,n){const i={},o=/^([\w-]*?)([\d]+)$/;for(let c=0,h=t.length;c<h;c++){const f=t[c],p=f.name.match(o);if(p&&p.length>1){const m=p[1];let g=i[m];g||(i[m]=g=[]),g.push(f)}}const l=[];for(const c in i)l.push(this.CreateFromMorphTargetSequence(c,i[c],e,n));return l}static parseAnimation(t,e){if(console.warn("THREE.AnimationClip: parseAnimation() is deprecated and will be removed with r185"),!t)return console.error("THREE.AnimationClip: No animation in JSONLoader data."),null;const n=function(m,g,v,x,b){if(v.length!==0){const S=[],_=[];ng(v,S,_,x),S.length!==0&&b.push(new m(g,S,_))}},i=[],o=t.name||"default",l=t.fps||30,c=t.blendMode;let h=t.length||-1;const f=t.hierarchy||[];for(let m=0;m<f.length;m++){const g=f[m].keys;if(!(!g||g.length===0))if(g[0].morphTargets){const v={};let x;for(x=0;x<g.length;x++)if(g[x].morphTargets)for(let b=0;b<g[x].morphTargets.length;b++)v[g[x].morphTargets[b]]=-1;for(const b in v){const S=[],_=[];for(let E=0;E!==g[x].morphTargets.length;++E){const A=g[x];S.push(A.time),_.push(A.morphTarget===b?1:0)}i.push(new ec(".morphTargetInfluence["+b+"]",S,_))}h=v.length*l}else{const v=".bones["+e[m].name+"]";n(nc,v+".position",g,"pos",i),n(mc,v+".quaternion",g,"rot",i),n(nc,v+".scale",g,"scl",i)}}return i.length===0?null:new this(o,h,i,c)}resetDuration(){const t=this.tracks;let e=0;for(let n=0,i=t.length;n!==i;++n){const o=this.tracks[n];e=Math.max(e,o.times[o.times.length-1])}return this.duration=e,this}trim(){for(let t=0;t<this.tracks.length;t++)this.tracks[t].trim(0,this.duration);return this}validate(){let t=!0;for(let e=0;e<this.tracks.length;e++)t=t&&this.tracks[e].validate();return t}optimize(){for(let t=0;t<this.tracks.length;t++)this.tracks[t].optimize();return this}clone(){const t=[];for(let e=0;e<this.tracks.length;e++)t.push(this.tracks[e].clone());return new this.constructor(this.name,this.duration,t,this.blendMode)}toJSON(){return this.constructor.toJSON(this)}}function k1(s){switch(s.toLowerCase()){case"scalar":case"double":case"float":case"number":case"integer":return ec;case"vector":case"vector2":case"vector3":case"vector4":return nc;case"color":return sg;case"quaternion":return mc;case"bool":case"boolean":return Sr;case"string":return Mr}throw new Error("THREE.KeyframeTrack: Unsupported typeName: "+s)}function W1(s){if(s.type===void 0)throw new Error("THREE.KeyframeTrack: track type undefined, can not parse");const t=k1(s.type);if(s.times===void 0){const e=[],n=[];ng(s.keys,e,n,"value"),s.times=e,s.values=n}return t.parse!==void 0?t.parse(s):new t(s.name,s.times,s.values,s.interpolation)}const os={enabled:!1,files:{},add:function(s,t){this.enabled!==!1&&(this.files[s]=t)},get:function(s){if(this.enabled!==!1)return this.files[s]},remove:function(s){delete this.files[s]},clear:function(){this.files={}}};class ag{constructor(t,e,n){const i=this;let o=!1,l=0,c=0,h;const f=[];this.onStart=void 0,this.onLoad=t,this.onProgress=e,this.onError=n,this.abortController=new AbortController,this.itemStart=function(p){c++,o===!1&&i.onStart!==void 0&&i.onStart(p,l,c),o=!0},this.itemEnd=function(p){l++,i.onProgress!==void 0&&i.onProgress(p,l,c),l===c&&(o=!1,i.onLoad!==void 0&&i.onLoad())},this.itemError=function(p){i.onError!==void 0&&i.onError(p)},this.resolveURL=function(p){return h?h(p):p},this.setURLModifier=function(p){return h=p,this},this.addHandler=function(p,m){return f.push(p,m),this},this.removeHandler=function(p){const m=f.indexOf(p);return m!==-1&&f.splice(m,2),this},this.getHandler=function(p){for(let m=0,g=f.length;m<g;m+=2){const v=f[m],x=f[m+1];if(v.global&&(v.lastIndex=0),v.test(p))return x}return null},this.abort=function(){return this.abortController.abort(),this.abortController=new AbortController,this}}}const lS=new ag;class oi{constructor(t){this.manager=t!==void 0?t:lS,this.crossOrigin="anonymous",this.withCredentials=!1,this.path="",this.resourcePath="",this.requestHeader={}}load(){}loadAsync(t,e){const n=this;return new Promise(function(i,o){n.load(t,i,e,o)})}parse(){}setCrossOrigin(t){return this.crossOrigin=t,this}setWithCredentials(t){return this.withCredentials=t,this}setPath(t){return this.path=t,this}setResourcePath(t){return this.resourcePath=t,this}setRequestHeader(t){return this.requestHeader=t,this}abort(){return this}}oi.DEFAULT_MATERIAL_NAME="__DEFAULT";const Ns={};class X1 extends Error{constructor(t,e){super(t),this.response=e}}class Vs extends oi{constructor(t){super(t),this.mimeType="",this.responseType="",this._abortController=new AbortController}load(t,e,n,i){t===void 0&&(t=""),this.path!==void 0&&(t=this.path+t),t=this.manager.resolveURL(t);const o=os.get(`file:${t}`);if(o!==void 0)return this.manager.itemStart(t),setTimeout(()=>{e&&e(o),this.manager.itemEnd(t)},0),o;if(Ns[t]!==void 0){Ns[t].push({onLoad:e,onProgress:n,onError:i});return}Ns[t]=[],Ns[t].push({onLoad:e,onProgress:n,onError:i});const l=new Request(t,{headers:new Headers(this.requestHeader),credentials:this.withCredentials?"include":"same-origin",signal:typeof AbortSignal.any=="function"?AbortSignal.any([this._abortController.signal,this.manager.abortController.signal]):this._abortController.signal}),c=this.mimeType,h=this.responseType;fetch(l).then(f=>{if(f.status===200||f.status===0){if(f.status===0&&console.warn("THREE.FileLoader: HTTP Status 0 received."),typeof ReadableStream>"u"||f.body===void 0||f.body.getReader===void 0)return f;const p=Ns[t],m=f.body.getReader(),g=f.headers.get("X-File-Size")||f.headers.get("Content-Length"),v=g?parseInt(g):0,x=v!==0;let b=0;const S=new ReadableStream({start(_){E();function E(){m.read().then(({done:A,value:T})=>{if(A)_.close();else{b+=T.byteLength;const U=new ProgressEvent("progress",{lengthComputable:x,loaded:b,total:v});for(let D=0,P=p.length;D<P;D++){const O=p[D];O.onProgress&&O.onProgress(U)}_.enqueue(T),E()}},A=>{_.error(A)})}}});return new Response(S)}else throw new X1(`fetch for "${f.url}" responded with ${f.status}: ${f.statusText}`,f)}).then(f=>{switch(h){case"arraybuffer":return f.arrayBuffer();case"blob":return f.blob();case"document":return f.text().then(p=>new DOMParser().parseFromString(p,c));case"json":return f.json();default:if(c==="")return f.text();{const m=/charset="?([^;"\s]*)"?/i.exec(c),g=m&&m[1]?m[1].toLowerCase():void 0,v=new TextDecoder(g);return f.arrayBuffer().then(x=>v.decode(x))}}}).then(f=>{os.add(`file:${t}`,f);const p=Ns[t];delete Ns[t];for(let m=0,g=p.length;m<g;m++){const v=p[m];v.onLoad&&v.onLoad(f)}}).catch(f=>{const p=Ns[t];if(p===void 0)throw this.manager.itemError(t),f;delete Ns[t];for(let m=0,g=p.length;m<g;m++){const v=p[m];v.onError&&v.onError(f)}this.manager.itemError(t)}).finally(()=>{this.manager.itemEnd(t)}),this.manager.itemStart(t)}setResponseType(t){return this.responseType=t,this}setMimeType(t){return this.mimeType=t,this}abort(){return this._abortController.abort(),this._abortController=new AbortController,this}}class q1 extends oi{constructor(t){super(t)}load(t,e,n,i){const o=this,l=new Vs(this.manager);l.setPath(this.path),l.setRequestHeader(this.requestHeader),l.setWithCredentials(this.withCredentials),l.load(t,function(c){try{e(o.parse(JSON.parse(c)))}catch(h){i?i(h):console.error(h),o.manager.itemError(t)}},n,i)}parse(t){const e=[];for(let n=0;n<t.length;n++){const i=ic.parse(t[n]);e.push(i)}return e}}class Y1 extends oi{constructor(t){super(t)}load(t,e,n,i){const o=this,l=[],c=new uf,h=new Vs(this.manager);h.setPath(this.path),h.setResponseType("arraybuffer"),h.setRequestHeader(this.requestHeader),h.setWithCredentials(o.withCredentials);let f=0;function p(m){h.load(t[m],function(g){const v=o.parse(g,!0);l[m]={width:v.width,height:v.height,format:v.format,mipmaps:v.mipmaps},f+=1,f===6&&(v.mipmapCount===1&&(c.minFilter=mn),c.image=l,c.format=v.format,c.needsUpdate=!0,e&&e(c))},n,i)}if(Array.isArray(t))for(let m=0,g=t.length;m<g;++m)p(m);else h.load(t,function(m){const g=o.parse(m,!0);if(g.isCubemap){const v=g.mipmaps.length/g.mipmapCount;for(let x=0;x<v;x++){l[x]={mipmaps:[]};for(let b=0;b<g.mipmapCount;b++)l[x].mipmaps.push(g.mipmaps[x*g.mipmapCount+b]),l[x].format=g.format,l[x].width=g.width,l[x].height=g.height}c.image=l}else c.image.width=g.width,c.image.height=g.height,c.mipmaps=g.mipmaps;g.mipmapCount===1&&(c.minFilter=mn),c.format=g.format,c.needsUpdate=!0,e&&e(c)},n,i);return c}}const fo=new WeakMap;class sc extends oi{constructor(t){super(t)}load(t,e,n,i){this.path!==void 0&&(t=this.path+t),t=this.manager.resolveURL(t);const o=this,l=os.get(`image:${t}`);if(l!==void 0){if(l.complete===!0)o.manager.itemStart(t),setTimeout(function(){e&&e(l),o.manager.itemEnd(t)},0);else{let m=fo.get(l);m===void 0&&(m=[],fo.set(l,m)),m.push({onLoad:e,onError:i})}return l}const c=Jl("img");function h(){p(),e&&e(this);const m=fo.get(this)||[];for(let g=0;g<m.length;g++){const v=m[g];v.onLoad&&v.onLoad(this)}fo.delete(this),o.manager.itemEnd(t)}function f(m){p(),i&&i(m),os.remove(`image:${t}`);const g=fo.get(this)||[];for(let v=0;v<g.length;v++){const x=g[v];x.onError&&x.onError(m)}fo.delete(this),o.manager.itemError(t),o.manager.itemEnd(t)}function p(){c.removeEventListener("load",h,!1),c.removeEventListener("error",f,!1)}return c.addEventListener("load",h,!1),c.addEventListener("error",f,!1),t.slice(0,5)!=="data:"&&this.crossOrigin!==void 0&&(c.crossOrigin=this.crossOrigin),os.add(`image:${t}`,c),o.manager.itemStart(t),c.src=t,c}}class j1 extends oi{constructor(t){super(t)}load(t,e,n,i){const o=new cc;o.colorSpace=Fn;const l=new sc(this.manager);l.setCrossOrigin(this.crossOrigin),l.setPath(this.path);let c=0;function h(f){l.load(t[f],function(p){o.images[f]=p,c++,c===6&&(o.needsUpdate=!0,e&&e(o))},void 0,i)}for(let f=0;f<t.length;++f)h(f);return o}}class Z1 extends oi{constructor(t){super(t)}load(t,e,n,i){const o=this,l=new cs,c=new Vs(this.manager);return c.setResponseType("arraybuffer"),c.setRequestHeader(this.requestHeader),c.setPath(this.path),c.setWithCredentials(o.withCredentials),c.load(t,function(h){let f;try{f=o.parse(h)}catch(p){if(i!==void 0)i(p);else{console.error(p);return}}f.image!==void 0?l.image=f.image:f.data!==void 0&&(l.image.width=f.width,l.image.height=f.height,l.image.data=f.data),l.wrapS=f.wrapS!==void 0?f.wrapS:Pi,l.wrapT=f.wrapT!==void 0?f.wrapT:Pi,l.magFilter=f.magFilter!==void 0?f.magFilter:mn,l.minFilter=f.minFilter!==void 0?f.minFilter:mn,l.anisotropy=f.anisotropy!==void 0?f.anisotropy:1,f.colorSpace!==void 0&&(l.colorSpace=f.colorSpace),f.flipY!==void 0&&(l.flipY=f.flipY),f.format!==void 0&&(l.format=f.format),f.type!==void 0&&(l.type=f.type),f.mipmaps!==void 0&&(l.mipmaps=f.mipmaps,l.minFilter=rs),f.mipmapCount===1&&(l.minFilter=mn),f.generateMipmaps!==void 0&&(l.generateMipmaps=f.generateMipmaps),l.needsUpdate=!0,e&&e(l,f)},n,i),l}}class cS extends oi{constructor(t){super(t)}load(t,e,n,i){const o=new on,l=new sc(this.manager);return l.setCrossOrigin(this.crossOrigin),l.setPath(this.path),l.load(t,function(c){o.image=c,o.needsUpdate=!0,e!==void 0&&e(o)},n,i),o}}class Ma extends Le{constructor(t,e=1){super(),this.isLight=!0,this.type="Light",this.color=new kt(t),this.intensity=e}dispose(){}copy(t,e){return super.copy(t,e),this.color.copy(t.color),this.intensity=t.intensity,this}toJSON(t){const e=super.toJSON(t);return e.object.color=this.color.getHex(),e.object.intensity=this.intensity,this.groundColor!==void 0&&(e.object.groundColor=this.groundColor.getHex()),this.distance!==void 0&&(e.object.distance=this.distance),this.angle!==void 0&&(e.object.angle=this.angle),this.decay!==void 0&&(e.object.decay=this.decay),this.penumbra!==void 0&&(e.object.penumbra=this.penumbra),this.shadow!==void 0&&(e.object.shadow=this.shadow.toJSON()),this.target!==void 0&&(e.object.target=this.target.uuid),e}}class uS extends Ma{constructor(t,e,n){super(t,n),this.isHemisphereLight=!0,this.type="HemisphereLight",this.position.copy(Le.DEFAULT_UP),this.updateMatrix(),this.groundColor=new kt(e)}copy(t,e){return super.copy(t,e),this.groundColor.copy(t.groundColor),this}}const wp=new pe,y_=new I,x_=new I;class rg{constructor(t){this.camera=t,this.intensity=1,this.bias=0,this.normalBias=0,this.radius=1,this.blurSamples=8,this.mapSize=new dt(512,512),this.mapType=Ii,this.map=null,this.mapPass=null,this.matrix=new pe,this.autoUpdate=!0,this.needsUpdate=!1,this._frustum=new Fo,this._frameExtents=new dt(1,1),this._viewportCount=1,this._viewports=[new Ne(0,0,1,1)]}getViewportCount(){return this._viewportCount}getFrustum(){return this._frustum}updateMatrices(t){const e=this.camera,n=this.matrix;y_.setFromMatrixPosition(t.matrixWorld),e.position.copy(y_),x_.setFromMatrixPosition(t.target.matrixWorld),e.lookAt(x_),e.updateMatrixWorld(),wp.multiplyMatrices(e.projectionMatrix,e.matrixWorldInverse),this._frustum.setFromProjectionMatrix(wp,e.coordinateSystem,e.reversedDepth),e.reversedDepth?n.set(.5,0,0,.5,0,.5,0,.5,0,0,1,0,0,0,0,1):n.set(.5,0,0,.5,0,.5,0,.5,0,0,.5,.5,0,0,0,1),n.multiply(wp)}getViewport(t){return this._viewports[t]}getFrameExtents(){return this._frameExtents}dispose(){this.map&&this.map.dispose(),this.mapPass&&this.mapPass.dispose()}copy(t){return this.camera=t.camera.clone(),this.intensity=t.intensity,this.bias=t.bias,this.radius=t.radius,this.autoUpdate=t.autoUpdate,this.needsUpdate=t.needsUpdate,this.normalBias=t.normalBias,this.blurSamples=t.blurSamples,this.mapSize.copy(t.mapSize),this}clone(){return new this.constructor().copy(this)}toJSON(){const t={};return this.intensity!==1&&(t.intensity=this.intensity),this.bias!==0&&(t.bias=this.bias),this.normalBias!==0&&(t.normalBias=this.normalBias),this.radius!==1&&(t.radius=this.radius),(this.mapSize.x!==512||this.mapSize.y!==512)&&(t.mapSize=this.mapSize.toArray()),t.camera=this.camera.toJSON(!1).object,delete t.camera.matrix,t}}class K1 extends rg{constructor(){super(new cn(50,1,.5,500)),this.isSpotLightShadow=!0,this.focus=1,this.aspect=1}updateMatrices(t){const e=this.camera,n=Uo*2*t.angle*this.focus,i=this.mapSize.width/this.mapSize.height*this.aspect,o=t.distance||e.far;(n!==e.fov||i!==e.aspect||o!==e.far)&&(e.fov=n,e.aspect=i,e.far=o,e.updateProjectionMatrix()),super.updateMatrices(t)}copy(t){return super.copy(t),this.focus=t.focus,this}}class hS extends Ma{constructor(t,e,n=0,i=Math.PI/3,o=0,l=2){super(t,e),this.isSpotLight=!0,this.type="SpotLight",this.position.copy(Le.DEFAULT_UP),this.updateMatrix(),this.target=new Le,this.distance=n,this.angle=i,this.penumbra=o,this.decay=l,this.map=null,this.shadow=new K1}get power(){return this.intensity*Math.PI}set power(t){this.intensity=t/Math.PI}dispose(){this.shadow.dispose()}copy(t,e){return super.copy(t,e),this.distance=t.distance,this.angle=t.angle,this.penumbra=t.penumbra,this.decay=t.decay,this.target=t.target.clone(),this.shadow=t.shadow.clone(),this}}const S_=new pe,Cl=new I,Cp=new I;class J1 extends rg{constructor(){super(new cn(90,1,.5,500)),this.isPointLightShadow=!0,this._frameExtents=new dt(4,2),this._viewportCount=6,this._viewports=[new Ne(2,1,1,1),new Ne(0,1,1,1),new Ne(3,1,1,1),new Ne(1,1,1,1),new Ne(3,0,1,1),new Ne(1,0,1,1)],this._cubeDirections=[new I(1,0,0),new I(-1,0,0),new I(0,0,1),new I(0,0,-1),new I(0,1,0),new I(0,-1,0)],this._cubeUps=[new I(0,1,0),new I(0,1,0),new I(0,1,0),new I(0,1,0),new I(0,0,1),new I(0,0,-1)]}updateMatrices(t,e=0){const n=this.camera,i=this.matrix,o=t.distance||n.far;o!==n.far&&(n.far=o,n.updateProjectionMatrix()),Cl.setFromMatrixPosition(t.matrixWorld),n.position.copy(Cl),Cp.copy(n.position),Cp.add(this._cubeDirections[e]),n.up.copy(this._cubeUps[e]),n.lookAt(Cp),n.updateMatrixWorld(),i.makeTranslation(-Cl.x,-Cl.y,-Cl.z),S_.multiplyMatrices(n.projectionMatrix,n.matrixWorldInverse),this._frustum.setFromProjectionMatrix(S_,n.coordinateSystem,n.reversedDepth)}}class fS extends Ma{constructor(t,e,n=0,i=2){super(t,e),this.isPointLight=!0,this.type="PointLight",this.distance=n,this.decay=i,this.shadow=new J1}get power(){return this.intensity*4*Math.PI}set power(t){this.intensity=t/(4*Math.PI)}dispose(){this.shadow.dispose()}copy(t,e){return super.copy(t,e),this.distance=t.distance,this.decay=t.decay,this.shadow=t.shadow.clone(),this}}class ma extends sf{constructor(t=-1,e=1,n=1,i=-1,o=.1,l=2e3){super(),this.isOrthographicCamera=!0,this.type="OrthographicCamera",this.zoom=1,this.view=null,this.left=t,this.right=e,this.top=n,this.bottom=i,this.near=o,this.far=l,this.updateProjectionMatrix()}copy(t,e){return super.copy(t,e),this.left=t.left,this.right=t.right,this.top=t.top,this.bottom=t.bottom,this.near=t.near,this.far=t.far,this.zoom=t.zoom,this.view=t.view===null?null:Object.assign({},t.view),this}setViewOffset(t,e,n,i,o,l){this.view===null&&(this.view={enabled:!0,fullWidth:1,fullHeight:1,offsetX:0,offsetY:0,width:1,height:1}),this.view.enabled=!0,this.view.fullWidth=t,this.view.fullHeight=e,this.view.offsetX=n,this.view.offsetY=i,this.view.width=o,this.view.height=l,this.updateProjectionMatrix()}clearViewOffset(){this.view!==null&&(this.view.enabled=!1),this.updateProjectionMatrix()}updateProjectionMatrix(){const t=(this.right-this.left)/(2*this.zoom),e=(this.top-this.bottom)/(2*this.zoom),n=(this.right+this.left)/2,i=(this.top+this.bottom)/2;let o=n-t,l=n+t,c=i+e,h=i-e;if(this.view!==null&&this.view.enabled){const f=(this.right-this.left)/this.view.fullWidth/this.zoom,p=(this.top-this.bottom)/this.view.fullHeight/this.zoom;o+=f*this.view.offsetX,l=o+f*this.view.width,c-=p*this.view.offsetY,h=c-p*this.view.height}this.projectionMatrix.makeOrthographic(o,l,c,h,this.near,this.far,this.coordinateSystem,this.reversedDepth),this.projectionMatrixInverse.copy(this.projectionMatrix).invert()}toJSON(t){const e=super.toJSON(t);return e.object.zoom=this.zoom,e.object.left=this.left,e.object.right=this.right,e.object.top=this.top,e.object.bottom=this.bottom,e.object.near=this.near,e.object.far=this.far,this.view!==null&&(e.object.view=Object.assign({},this.view)),e}}class Q1 extends rg{constructor(){super(new ma(-5,5,5,-5,.5,500)),this.isDirectionalLightShadow=!0}}class dS extends Ma{constructor(t,e){super(t,e),this.isDirectionalLight=!0,this.type="DirectionalLight",this.position.copy(Le.DEFAULT_UP),this.updateMatrix(),this.target=new Le,this.shadow=new Q1}dispose(){this.shadow.dispose()}copy(t){return super.copy(t),this.target=t.target.clone(),this.shadow=t.shadow.clone(),this}}class pS extends Ma{constructor(t,e){super(t,e),this.isAmbientLight=!0,this.type="AmbientLight"}}class mS extends Ma{constructor(t,e,n=10,i=10){super(t,e),this.isRectAreaLight=!0,this.type="RectAreaLight",this.width=n,this.height=i}get power(){return this.intensity*this.width*this.height*Math.PI}set power(t){this.intensity=t/(this.width*this.height*Math.PI)}copy(t){return super.copy(t),this.width=t.width,this.height=t.height,this}toJSON(t){const e=super.toJSON(t);return e.object.width=this.width,e.object.height=this.height,e}}class gS{constructor(){this.isSphericalHarmonics3=!0,this.coefficients=[];for(let t=0;t<9;t++)this.coefficients.push(new I)}set(t){for(let e=0;e<9;e++)this.coefficients[e].copy(t[e]);return this}zero(){for(let t=0;t<9;t++)this.coefficients[t].set(0,0,0);return this}getAt(t,e){const n=t.x,i=t.y,o=t.z,l=this.coefficients;return e.copy(l[0]).multiplyScalar(.282095),e.addScaledVector(l[1],.488603*i),e.addScaledVector(l[2],.488603*o),e.addScaledVector(l[3],.488603*n),e.addScaledVector(l[4],1.092548*(n*i)),e.addScaledVector(l[5],1.092548*(i*o)),e.addScaledVector(l[6],.315392*(3*o*o-1)),e.addScaledVector(l[7],1.092548*(n*o)),e.addScaledVector(l[8],.546274*(n*n-i*i)),e}getIrradianceAt(t,e){const n=t.x,i=t.y,o=t.z,l=this.coefficients;return e.copy(l[0]).multiplyScalar(.886227),e.addScaledVector(l[1],2*.511664*i),e.addScaledVector(l[2],2*.511664*o),e.addScaledVector(l[3],2*.511664*n),e.addScaledVector(l[4],2*.429043*n*i),e.addScaledVector(l[5],2*.429043*i*o),e.addScaledVector(l[6],.743125*o*o-.247708),e.addScaledVector(l[7],2*.429043*n*o),e.addScaledVector(l[8],.429043*(n*n-i*i)),e}add(t){for(let e=0;e<9;e++)this.coefficients[e].add(t.coefficients[e]);return this}addScaledSH(t,e){for(let n=0;n<9;n++)this.coefficients[n].addScaledVector(t.coefficients[n],e);return this}scale(t){for(let e=0;e<9;e++)this.coefficients[e].multiplyScalar(t);return this}lerp(t,e){for(let n=0;n<9;n++)this.coefficients[n].lerp(t.coefficients[n],e);return this}equals(t){for(let e=0;e<9;e++)if(!this.coefficients[e].equals(t.coefficients[e]))return!1;return!0}copy(t){return this.set(t.coefficients)}clone(){return new this.constructor().copy(this)}fromArray(t,e=0){const n=this.coefficients;for(let i=0;i<9;i++)n[i].fromArray(t,e+i*3);return this}toArray(t=[],e=0){const n=this.coefficients;for(let i=0;i<9;i++)n[i].toArray(t,e+i*3);return t}static getBasisAt(t,e){const n=t.x,i=t.y,o=t.z;e[0]=.282095,e[1]=.488603*i,e[2]=.488603*o,e[3]=.488603*n,e[4]=1.092548*n*i,e[5]=1.092548*i*o,e[6]=.315392*(3*o*o-1),e[7]=1.092548*n*o,e[8]=.546274*(n*n-i*i)}}class vS extends Ma{constructor(t=new gS,e=1){super(void 0,e),this.isLightProbe=!0,this.sh=t}copy(t){return super.copy(t),this.sh.copy(t.sh),this}fromJSON(t){return this.intensity=t.intensity,this.sh.fromArray(t.sh),this}toJSON(t){const e=super.toJSON(t);return e.object.sh=this.sh.toArray(),e}}class Ef extends oi{constructor(t){super(t),this.textures={}}load(t,e,n,i){const o=this,l=new Vs(o.manager);l.setPath(o.path),l.setRequestHeader(o.requestHeader),l.setWithCredentials(o.withCredentials),l.load(t,function(c){try{e(o.parse(JSON.parse(c)))}catch(h){i?i(h):console.error(h),o.manager.itemError(t)}},n,i)}parse(t){const e=this.textures;function n(o){return e[o]===void 0&&console.warn("THREE.MaterialLoader: Undefined texture",o),e[o]}const i=this.createMaterialFromType(t.type);if(t.uuid!==void 0&&(i.uuid=t.uuid),t.name!==void 0&&(i.name=t.name),t.color!==void 0&&i.color!==void 0&&i.color.setHex(t.color),t.roughness!==void 0&&(i.roughness=t.roughness),t.metalness!==void 0&&(i.metalness=t.metalness),t.sheen!==void 0&&(i.sheen=t.sheen),t.sheenColor!==void 0&&(i.sheenColor=new kt().setHex(t.sheenColor)),t.sheenRoughness!==void 0&&(i.sheenRoughness=t.sheenRoughness),t.emissive!==void 0&&i.emissive!==void 0&&i.emissive.setHex(t.emissive),t.specular!==void 0&&i.specular!==void 0&&i.specular.setHex(t.specular),t.specularIntensity!==void 0&&(i.specularIntensity=t.specularIntensity),t.specularColor!==void 0&&i.specularColor!==void 0&&i.specularColor.setHex(t.specularColor),t.shininess!==void 0&&(i.shininess=t.shininess),t.clearcoat!==void 0&&(i.clearcoat=t.clearcoat),t.clearcoatRoughness!==void 0&&(i.clearcoatRoughness=t.clearcoatRoughness),t.dispersion!==void 0&&(i.dispersion=t.dispersion),t.iridescence!==void 0&&(i.iridescence=t.iridescence),t.iridescenceIOR!==void 0&&(i.iridescenceIOR=t.iridescenceIOR),t.iridescenceThicknessRange!==void 0&&(i.iridescenceThicknessRange=t.iridescenceThicknessRange),t.transmission!==void 0&&(i.transmission=t.transmission),t.thickness!==void 0&&(i.thickness=t.thickness),t.attenuationDistance!==void 0&&(i.attenuationDistance=t.attenuationDistance),t.attenuationColor!==void 0&&i.attenuationColor!==void 0&&i.attenuationColor.setHex(t.attenuationColor),t.anisotropy!==void 0&&(i.anisotropy=t.anisotropy),t.anisotropyRotation!==void 0&&(i.anisotropyRotation=t.anisotropyRotation),t.fog!==void 0&&(i.fog=t.fog),t.flatShading!==void 0&&(i.flatShading=t.flatShading),t.blending!==void 0&&(i.blending=t.blending),t.combine!==void 0&&(i.combine=t.combine),t.side!==void 0&&(i.side=t.side),t.shadowSide!==void 0&&(i.shadowSide=t.shadowSide),t.opacity!==void 0&&(i.opacity=t.opacity),t.transparent!==void 0&&(i.transparent=t.transparent),t.alphaTest!==void 0&&(i.alphaTest=t.alphaTest),t.alphaHash!==void 0&&(i.alphaHash=t.alphaHash),t.depthFunc!==void 0&&(i.depthFunc=t.depthFunc),t.depthTest!==void 0&&(i.depthTest=t.depthTest),t.depthWrite!==void 0&&(i.depthWrite=t.depthWrite),t.colorWrite!==void 0&&(i.colorWrite=t.colorWrite),t.blendSrc!==void 0&&(i.blendSrc=t.blendSrc),t.blendDst!==void 0&&(i.blendDst=t.blendDst),t.blendEquation!==void 0&&(i.blendEquation=t.blendEquation),t.blendSrcAlpha!==void 0&&(i.blendSrcAlpha=t.blendSrcAlpha),t.blendDstAlpha!==void 0&&(i.blendDstAlpha=t.blendDstAlpha),t.blendEquationAlpha!==void 0&&(i.blendEquationAlpha=t.blendEquationAlpha),t.blendColor!==void 0&&i.blendColor!==void 0&&i.blendColor.setHex(t.blendColor),t.blendAlpha!==void 0&&(i.blendAlpha=t.blendAlpha),t.stencilWriteMask!==void 0&&(i.stencilWriteMask=t.stencilWriteMask),t.stencilFunc!==void 0&&(i.stencilFunc=t.stencilFunc),t.stencilRef!==void 0&&(i.stencilRef=t.stencilRef),t.stencilFuncMask!==void 0&&(i.stencilFuncMask=t.stencilFuncMask),t.stencilFail!==void 0&&(i.stencilFail=t.stencilFail),t.stencilZFail!==void 0&&(i.stencilZFail=t.stencilZFail),t.stencilZPass!==void 0&&(i.stencilZPass=t.stencilZPass),t.stencilWrite!==void 0&&(i.stencilWrite=t.stencilWrite),t.wireframe!==void 0&&(i.wireframe=t.wireframe),t.wireframeLinewidth!==void 0&&(i.wireframeLinewidth=t.wireframeLinewidth),t.wireframeLinecap!==void 0&&(i.wireframeLinecap=t.wireframeLinecap),t.wireframeLinejoin!==void 0&&(i.wireframeLinejoin=t.wireframeLinejoin),t.rotation!==void 0&&(i.rotation=t.rotation),t.linewidth!==void 0&&(i.linewidth=t.linewidth),t.dashSize!==void 0&&(i.dashSize=t.dashSize),t.gapSize!==void 0&&(i.gapSize=t.gapSize),t.scale!==void 0&&(i.scale=t.scale),t.polygonOffset!==void 0&&(i.polygonOffset=t.polygonOffset),t.polygonOffsetFactor!==void 0&&(i.polygonOffsetFactor=t.polygonOffsetFactor),t.polygonOffsetUnits!==void 0&&(i.polygonOffsetUnits=t.polygonOffsetUnits),t.dithering!==void 0&&(i.dithering=t.dithering),t.alphaToCoverage!==void 0&&(i.alphaToCoverage=t.alphaToCoverage),t.premultipliedAlpha!==void 0&&(i.premultipliedAlpha=t.premultipliedAlpha),t.forceSinglePass!==void 0&&(i.forceSinglePass=t.forceSinglePass),t.visible!==void 0&&(i.visible=t.visible),t.toneMapped!==void 0&&(i.toneMapped=t.toneMapped),t.userData!==void 0&&(i.userData=t.userData),t.vertexColors!==void 0&&(typeof t.vertexColors=="number"?i.vertexColors=t.vertexColors>0:i.vertexColors=t.vertexColors),t.uniforms!==void 0)for(const o in t.uniforms){const l=t.uniforms[o];switch(i.uniforms[o]={},l.type){case"t":i.uniforms[o].value=n(l.value);break;case"c":i.uniforms[o].value=new kt().setHex(l.value);break;case"v2":i.uniforms[o].value=new dt().fromArray(l.value);break;case"v3":i.uniforms[o].value=new I().fromArray(l.value);break;case"v4":i.uniforms[o].value=new Ne().fromArray(l.value);break;case"m3":i.uniforms[o].value=new ve().fromArray(l.value);break;case"m4":i.uniforms[o].value=new pe().fromArray(l.value);break;default:i.uniforms[o].value=l.value}}if(t.defines!==void 0&&(i.defines=t.defines),t.vertexShader!==void 0&&(i.vertexShader=t.vertexShader),t.fragmentShader!==void 0&&(i.fragmentShader=t.fragmentShader),t.glslVersion!==void 0&&(i.glslVersion=t.glslVersion),t.extensions!==void 0)for(const o in t.extensions)i.extensions[o]=t.extensions[o];if(t.lights!==void 0&&(i.lights=t.lights),t.clipping!==void 0&&(i.clipping=t.clipping),t.size!==void 0&&(i.size=t.size),t.sizeAttenuation!==void 0&&(i.sizeAttenuation=t.sizeAttenuation),t.map!==void 0&&(i.map=n(t.map)),t.matcap!==void 0&&(i.matcap=n(t.matcap)),t.alphaMap!==void 0&&(i.alphaMap=n(t.alphaMap)),t.bumpMap!==void 0&&(i.bumpMap=n(t.bumpMap)),t.bumpScale!==void 0&&(i.bumpScale=t.bumpScale),t.normalMap!==void 0&&(i.normalMap=n(t.normalMap)),t.normalMapType!==void 0&&(i.normalMapType=t.normalMapType),t.normalScale!==void 0){let o=t.normalScale;Array.isArray(o)===!1&&(o=[o,o]),i.normalScale=new dt().fromArray(o)}return t.displacementMap!==void 0&&(i.displacementMap=n(t.displacementMap)),t.displacementScale!==void 0&&(i.displacementScale=t.displacementScale),t.displacementBias!==void 0&&(i.displacementBias=t.displacementBias),t.roughnessMap!==void 0&&(i.roughnessMap=n(t.roughnessMap)),t.metalnessMap!==void 0&&(i.metalnessMap=n(t.metalnessMap)),t.emissiveMap!==void 0&&(i.emissiveMap=n(t.emissiveMap)),t.emissiveIntensity!==void 0&&(i.emissiveIntensity=t.emissiveIntensity),t.specularMap!==void 0&&(i.specularMap=n(t.specularMap)),t.specularIntensityMap!==void 0&&(i.specularIntensityMap=n(t.specularIntensityMap)),t.specularColorMap!==void 0&&(i.specularColorMap=n(t.specularColorMap)),t.envMap!==void 0&&(i.envMap=n(t.envMap)),t.envMapRotation!==void 0&&i.envMapRotation.fromArray(t.envMapRotation),t.envMapIntensity!==void 0&&(i.envMapIntensity=t.envMapIntensity),t.reflectivity!==void 0&&(i.reflectivity=t.reflectivity),t.refractionRatio!==void 0&&(i.refractionRatio=t.refractionRatio),t.lightMap!==void 0&&(i.lightMap=n(t.lightMap)),t.lightMapIntensity!==void 0&&(i.lightMapIntensity=t.lightMapIntensity),t.aoMap!==void 0&&(i.aoMap=n(t.aoMap)),t.aoMapIntensity!==void 0&&(i.aoMapIntensity=t.aoMapIntensity),t.gradientMap!==void 0&&(i.gradientMap=n(t.gradientMap)),t.clearcoatMap!==void 0&&(i.clearcoatMap=n(t.clearcoatMap)),t.clearcoatRoughnessMap!==void 0&&(i.clearcoatRoughnessMap=n(t.clearcoatRoughnessMap)),t.clearcoatNormalMap!==void 0&&(i.clearcoatNormalMap=n(t.clearcoatNormalMap)),t.clearcoatNormalScale!==void 0&&(i.clearcoatNormalScale=new dt().fromArray(t.clearcoatNormalScale)),t.iridescenceMap!==void 0&&(i.iridescenceMap=n(t.iridescenceMap)),t.iridescenceThicknessMap!==void 0&&(i.iridescenceThicknessMap=n(t.iridescenceThicknessMap)),t.transmissionMap!==void 0&&(i.transmissionMap=n(t.transmissionMap)),t.thicknessMap!==void 0&&(i.thicknessMap=n(t.thicknessMap)),t.anisotropyMap!==void 0&&(i.anisotropyMap=n(t.anisotropyMap)),t.sheenColorMap!==void 0&&(i.sheenColorMap=n(t.sheenColorMap)),t.sheenRoughnessMap!==void 0&&(i.sheenRoughnessMap=n(t.sheenRoughnessMap)),i}setTextures(t){return this.textures=t,this}createMaterialFromType(t){return Ef.createMaterialFromType(t)}static createMaterialFromType(t){const e={ShadowMaterial:jx,SpriteMaterial:km,RawShaderMaterial:Zx,ShaderMaterial:Zi,PointsMaterial:Xm,MeshPhysicalMaterial:Kx,MeshStandardMaterial:$m,MeshPhongMaterial:Jx,MeshToonMaterial:Qx,MeshNormalMaterial:$x,MeshLambertMaterial:tS,MeshDepthMaterial:tg,MeshDistanceMaterial:eg,MeshBasicMaterial:xa,MeshMatcapMaterial:eS,LineDashedMaterial:nS,LineBasicMaterial:$n,Material:kn};return new e[t]}}class pm{static extractUrlBase(t){const e=t.lastIndexOf("/");return e===-1?"./":t.slice(0,e+1)}static resolveURL(t,e){return typeof t!="string"||t===""?"":(/^https?:\/\//i.test(e)&&/^\//.test(t)&&(e=e.replace(/(^https?:\/\/[^\/]+).*/i,"$1")),/^(https?:)?\/\//i.test(t)||/^data:.*,.*$/i.test(t)||/^blob:.*$/i.test(t)?t:e+t)}}class _S extends xe{constructor(){super(),this.isInstancedBufferGeometry=!0,this.type="InstancedBufferGeometry",this.instanceCount=1/0}copy(t){return super.copy(t),this.instanceCount=t.instanceCount,this}toJSON(){const t=super.toJSON();return t.instanceCount=this.instanceCount,t.isInstancedBufferGeometry=!0,t}}class yS extends oi{constructor(t){super(t)}load(t,e,n,i){const o=this,l=new Vs(o.manager);l.setPath(o.path),l.setRequestHeader(o.requestHeader),l.setWithCredentials(o.withCredentials),l.load(t,function(c){try{e(o.parse(JSON.parse(c)))}catch(h){i?i(h):console.error(h),o.manager.itemError(t)}},n,i)}parse(t){const e={},n={};function i(v,x){if(e[x]!==void 0)return e[x];const S=v.interleavedBuffers[x],_=o(v,S.buffer),E=So(S.type,_),A=new of(E,S.stride);return A.uuid=S.uuid,e[x]=A,A}function o(v,x){if(n[x]!==void 0)return n[x];const S=v.arrayBuffers[x],_=new Uint32Array(S).buffer;return n[x]=_,_}const l=t.isInstancedBufferGeometry?new _S:new xe,c=t.data.index;if(c!==void 0){const v=So(c.type,c.array);l.setIndex(new Xe(v,1))}const h=t.data.attributes;for(const v in h){const x=h[v];let b;if(x.isInterleavedBufferAttribute){const S=i(t.data,x.data);b=new gr(S,x.itemSize,x.offset,x.normalized)}else{const S=So(x.type,x.array),_=x.isInstancedBufferAttribute?Po:Xe;b=new _(S,x.itemSize,x.normalized)}x.name!==void 0&&(b.name=x.name),x.usage!==void 0&&b.setUsage(x.usage),l.setAttribute(v,b)}const f=t.data.morphAttributes;if(f)for(const v in f){const x=f[v],b=[];for(let S=0,_=x.length;S<_;S++){const E=x[S];let A;if(E.isInterleavedBufferAttribute){const T=i(t.data,E.data);A=new gr(T,E.itemSize,E.offset,E.normalized)}else{const T=So(E.type,E.array);A=new Xe(T,E.itemSize,E.normalized)}E.name!==void 0&&(A.name=E.name),b.push(A)}l.morphAttributes[v]=b}t.data.morphTargetsRelative&&(l.morphTargetsRelative=!0);const m=t.data.groups||t.data.drawcalls||t.data.offsets;if(m!==void 0)for(let v=0,x=m.length;v!==x;++v){const b=m[v];l.addGroup(b.start,b.count,b.materialIndex)}const g=t.data.boundingSphere;return g!==void 0&&(l.boundingSphere=new Rn().fromJSON(g)),t.name&&(l.name=t.name),t.userData&&(l.userData=t.userData),l}}class $1 extends oi{constructor(t){super(t)}load(t,e,n,i){const o=this,l=this.path===""?pm.extractUrlBase(t):this.path;this.resourcePath=this.resourcePath||l;const c=new Vs(this.manager);c.setPath(this.path),c.setRequestHeader(this.requestHeader),c.setWithCredentials(this.withCredentials),c.load(t,function(h){let f=null;try{f=JSON.parse(h)}catch(m){i!==void 0&&i(m),console.error("THREE:ObjectLoader: Can't parse "+t+".",m.message);return}const p=f.metadata;if(p===void 0||p.type===void 0||p.type.toLowerCase()==="geometry"){i!==void 0&&i(new Error("THREE.ObjectLoader: Can't load "+t)),console.error("THREE.ObjectLoader: Can't load "+t);return}o.parse(f,e)},n,i)}async loadAsync(t,e){const n=this,i=this.path===""?pm.extractUrlBase(t):this.path;this.resourcePath=this.resourcePath||i;const o=new Vs(this.manager);o.setPath(this.path),o.setRequestHeader(this.requestHeader),o.setWithCredentials(this.withCredentials);const l=await o.loadAsync(t,e),c=JSON.parse(l),h=c.metadata;if(h===void 0||h.type===void 0||h.type.toLowerCase()==="geometry")throw new Error("THREE.ObjectLoader: Can't load "+t);return await n.parseAsync(c)}parse(t,e){const n=this.parseAnimations(t.animations),i=this.parseShapes(t.shapes),o=this.parseGeometries(t.geometries,i),l=this.parseImages(t.images,function(){e!==void 0&&e(f)}),c=this.parseTextures(t.textures,l),h=this.parseMaterials(t.materials,c),f=this.parseObject(t.object,o,h,c,n),p=this.parseSkeletons(t.skeletons,f);if(this.bindSkeletons(f,p),this.bindLightTargets(f),e!==void 0){let m=!1;for(const g in l)if(l[g].data instanceof HTMLImageElement){m=!0;break}m===!1&&e(f)}return f}async parseAsync(t){const e=this.parseAnimations(t.animations),n=this.parseShapes(t.shapes),i=this.parseGeometries(t.geometries,n),o=await this.parseImagesAsync(t.images),l=this.parseTextures(t.textures,o),c=this.parseMaterials(t.materials,l),h=this.parseObject(t.object,i,c,l,e),f=this.parseSkeletons(t.skeletons,h);return this.bindSkeletons(h,f),this.bindLightTargets(h),h}parseShapes(t){const e={};if(t!==void 0)for(let n=0,i=t.length;n<i;n++){const o=new pr().fromJSON(t[n]);e[o.uuid]=o}return e}parseSkeletons(t,e){const n={},i={};if(e.traverse(function(o){o.isBone&&(i[o.uuid]=o)}),t!==void 0)for(let o=0,l=t.length;o<l;o++){const c=new lf().fromJSON(t[o],i);n[c.uuid]=c}return n}parseGeometries(t,e){const n={};if(t!==void 0){const i=new yS;for(let o=0,l=t.length;o<l;o++){let c;const h=t[o];switch(h.type){case"BufferGeometry":case"InstancedBufferGeometry":c=i.parse(h);break;default:h.type in __?c=__[h.type].fromJSON(h,e):console.warn(`THREE.ObjectLoader: Unsupported geometry type "${h.type}"`)}c.uuid=h.uuid,h.name!==void 0&&(c.name=h.name),h.userData!==void 0&&(c.userData=h.userData),n[h.uuid]=c}}return n}parseMaterials(t,e){const n={},i={};if(t!==void 0){const o=new Ef;o.setTextures(e);for(let l=0,c=t.length;l<c;l++){const h=t[l];n[h.uuid]===void 0&&(n[h.uuid]=o.parse(h)),i[h.uuid]=n[h.uuid]}}return i}parseAnimations(t){const e={};if(t!==void 0)for(let n=0;n<t.length;n++){const i=t[n],o=ic.parse(i);e[o.uuid]=o}return e}parseImages(t,e){const n=this,i={};let o;function l(h){return n.manager.itemStart(h),o.load(h,function(){n.manager.itemEnd(h)},void 0,function(){n.manager.itemError(h),n.manager.itemEnd(h)})}function c(h){if(typeof h=="string"){const f=h,p=/^(\/\/)|([a-z]+:(\/\/)?)/i.test(f)?f:n.resourcePath+f;return l(p)}else return h.data?{data:So(h.type,h.data),width:h.width,height:h.height}:null}if(t!==void 0&&t.length>0){const h=new ag(e);o=new sc(h),o.setCrossOrigin(this.crossOrigin);for(let f=0,p=t.length;f<p;f++){const m=t[f],g=m.url;if(Array.isArray(g)){const v=[];for(let x=0,b=g.length;x<b;x++){const S=g[x],_=c(S);_!==null&&(_ instanceof HTMLImageElement?v.push(_):v.push(new cs(_.data,_.width,_.height)))}i[m.uuid]=new pa(v)}else{const v=c(m.url);i[m.uuid]=new pa(v)}}}return i}async parseImagesAsync(t){const e=this,n={};let i;async function o(l){if(typeof l=="string"){const c=l,h=/^(\/\/)|([a-z]+:(\/\/)?)/i.test(c)?c:e.resourcePath+c;return await i.loadAsync(h)}else return l.data?{data:So(l.type,l.data),width:l.width,height:l.height}:null}if(t!==void 0&&t.length>0){i=new sc(this.manager),i.setCrossOrigin(this.crossOrigin);for(let l=0,c=t.length;l<c;l++){const h=t[l],f=h.url;if(Array.isArray(f)){const p=[];for(let m=0,g=f.length;m<g;m++){const v=f[m],x=await o(v);x!==null&&(x instanceof HTMLImageElement?p.push(x):p.push(new cs(x.data,x.width,x.height)))}n[h.uuid]=new pa(p)}else{const p=await o(h.url);n[h.uuid]=new pa(p)}}}return n}parseTextures(t,e){function n(o,l){return typeof o=="number"?o:(console.warn("THREE.ObjectLoader.parseTexture: Constant should be in numeric form.",o),l[o])}const i={};if(t!==void 0)for(let o=0,l=t.length;o<l;o++){const c=t[o];c.image===void 0&&console.warn('THREE.ObjectLoader: No "image" specified for',c.uuid),e[c.image]===void 0&&console.warn("THREE.ObjectLoader: Undefined image",c.image);const h=e[c.image],f=h.data;let p;Array.isArray(f)?(p=new cc,f.length===6&&(p.needsUpdate=!0)):(f&&f.data?p=new cs:p=new on,f&&(p.needsUpdate=!0)),p.source=h,p.uuid=c.uuid,c.name!==void 0&&(p.name=c.name),c.mapping!==void 0&&(p.mapping=n(c.mapping,tA)),c.channel!==void 0&&(p.channel=c.channel),c.offset!==void 0&&p.offset.fromArray(c.offset),c.repeat!==void 0&&p.repeat.fromArray(c.repeat),c.center!==void 0&&p.center.fromArray(c.center),c.rotation!==void 0&&(p.rotation=c.rotation),c.wrap!==void 0&&(p.wrapS=n(c.wrap[0],M_),p.wrapT=n(c.wrap[1],M_)),c.format!==void 0&&(p.format=c.format),c.internalFormat!==void 0&&(p.internalFormat=c.internalFormat),c.type!==void 0&&(p.type=c.type),c.colorSpace!==void 0&&(p.colorSpace=c.colorSpace),c.minFilter!==void 0&&(p.minFilter=n(c.minFilter,b_)),c.magFilter!==void 0&&(p.magFilter=n(c.magFilter,b_)),c.anisotropy!==void 0&&(p.anisotropy=c.anisotropy),c.flipY!==void 0&&(p.flipY=c.flipY),c.generateMipmaps!==void 0&&(p.generateMipmaps=c.generateMipmaps),c.premultiplyAlpha!==void 0&&(p.premultiplyAlpha=c.premultiplyAlpha),c.unpackAlignment!==void 0&&(p.unpackAlignment=c.unpackAlignment),c.compareFunction!==void 0&&(p.compareFunction=c.compareFunction),c.userData!==void 0&&(p.userData=c.userData),i[c.uuid]=p}return i}parseObject(t,e,n,i,o){let l;function c(g){return e[g]===void 0&&console.warn("THREE.ObjectLoader: Undefined geometry",g),e[g]}function h(g){if(g!==void 0){if(Array.isArray(g)){const v=[];for(let x=0,b=g.length;x<b;x++){const S=g[x];n[S]===void 0&&console.warn("THREE.ObjectLoader: Undefined material",S),v.push(n[S])}return v}return n[g]===void 0&&console.warn("THREE.ObjectLoader: Undefined material",g),n[g]}}function f(g){return i[g]===void 0&&console.warn("THREE.ObjectLoader: Undefined texture",g),i[g]}let p,m;switch(t.type){case"Scene":l=new Gm,t.background!==void 0&&(Number.isInteger(t.background)?l.background=new kt(t.background):l.background=f(t.background)),t.environment!==void 0&&(l.environment=f(t.environment)),t.fog!==void 0&&(t.fog.type==="Fog"?l.fog=new rf(t.fog.color,t.fog.near,t.fog.far):t.fog.type==="FogExp2"&&(l.fog=new af(t.fog.color,t.fog.density)),t.fog.name!==""&&(l.fog.name=t.fog.name)),t.backgroundBlurriness!==void 0&&(l.backgroundBlurriness=t.backgroundBlurriness),t.backgroundIntensity!==void 0&&(l.backgroundIntensity=t.backgroundIntensity),t.backgroundRotation!==void 0&&l.backgroundRotation.fromArray(t.backgroundRotation),t.environmentIntensity!==void 0&&(l.environmentIntensity=t.environmentIntensity),t.environmentRotation!==void 0&&l.environmentRotation.fromArray(t.environmentRotation);break;case"PerspectiveCamera":l=new cn(t.fov,t.aspect,t.near,t.far),t.focus!==void 0&&(l.focus=t.focus),t.zoom!==void 0&&(l.zoom=t.zoom),t.filmGauge!==void 0&&(l.filmGauge=t.filmGauge),t.filmOffset!==void 0&&(l.filmOffset=t.filmOffset),t.view!==void 0&&(l.view=Object.assign({},t.view));break;case"OrthographicCamera":l=new ma(t.left,t.right,t.top,t.bottom,t.near,t.far),t.zoom!==void 0&&(l.zoom=t.zoom),t.view!==void 0&&(l.view=Object.assign({},t.view));break;case"AmbientLight":l=new pS(t.color,t.intensity);break;case"DirectionalLight":l=new dS(t.color,t.intensity),l.target=t.target||"";break;case"PointLight":l=new fS(t.color,t.intensity,t.distance,t.decay);break;case"RectAreaLight":l=new mS(t.color,t.intensity,t.width,t.height);break;case"SpotLight":l=new hS(t.color,t.intensity,t.distance,t.angle,t.penumbra,t.decay),l.target=t.target||"";break;case"HemisphereLight":l=new uS(t.color,t.groundColor,t.intensity);break;case"LightProbe":l=new vS().fromJSON(t);break;case"SkinnedMesh":p=c(t.geometry),m=h(t.material),l=new Ux(p,m),t.bindMode!==void 0&&(l.bindMode=t.bindMode),t.bindMatrix!==void 0&&l.bindMatrix.fromArray(t.bindMatrix),t.skeleton!==void 0&&(l.skeleton=t.skeleton);break;case"Mesh":p=c(t.geometry),m=h(t.material),l=new dn(p,m);break;case"InstancedMesh":p=c(t.geometry),m=h(t.material);const g=t.count,v=t.instanceMatrix,x=t.instanceColor;l=new Nx(p,m,g),l.instanceMatrix=new Po(new Float32Array(v.array),16),x!==void 0&&(l.instanceColor=new Po(new Float32Array(x.array),x.itemSize));break;case"BatchedMesh":p=c(t.geometry),m=h(t.material),l=new Lx(t.maxInstanceCount,t.maxVertexCount,t.maxIndexCount,m),l.geometry=p,l.perObjectFrustumCulled=t.perObjectFrustumCulled,l.sortObjects=t.sortObjects,l._drawRanges=t.drawRanges,l._reservedRanges=t.reservedRanges,l._geometryInfo=t.geometryInfo.map(b=>{let S=null,_=null;return b.boundingBox!==void 0&&(S=new Gn().fromJSON(b.boundingBox)),b.boundingSphere!==void 0&&(_=new Rn().fromJSON(b.boundingSphere)),{...b,boundingBox:S,boundingSphere:_}}),l._instanceInfo=t.instanceInfo,l._availableInstanceIds=t._availableInstanceIds,l._availableGeometryIds=t._availableGeometryIds,l._nextIndexStart=t.nextIndexStart,l._nextVertexStart=t.nextVertexStart,l._geometryCount=t.geometryCount,l._maxInstanceCount=t.maxInstanceCount,l._maxVertexCount=t.maxVertexCount,l._maxIndexCount=t.maxIndexCount,l._geometryInitialized=t.geometryInitialized,l._matricesTexture=f(t.matricesTexture.uuid),l._indirectTexture=f(t.indirectTexture.uuid),t.colorsTexture!==void 0&&(l._colorsTexture=f(t.colorsTexture.uuid)),t.boundingSphere!==void 0&&(l.boundingSphere=new Rn().fromJSON(t.boundingSphere)),t.boundingBox!==void 0&&(l.boundingBox=new Gn().fromJSON(t.boundingBox));break;case"LOD":l=new Dx;break;case"Line":l=new _a(c(t.geometry),h(t.material));break;case"LineLoop":l=new Px(c(t.geometry),h(t.material));break;case"LineSegments":l=new fs(c(t.geometry),h(t.material));break;case"PointCloud":case"Points":l=new Ix(c(t.geometry),h(t.material));break;case"Sprite":l=new Rx(h(t.material));break;case"Group":l=new Mo;break;case"Bone":l=new Wm;break;default:l=new Le}if(l.uuid=t.uuid,t.name!==void 0&&(l.name=t.name),t.matrix!==void 0?(l.matrix.fromArray(t.matrix),t.matrixAutoUpdate!==void 0&&(l.matrixAutoUpdate=t.matrixAutoUpdate),l.matrixAutoUpdate&&l.matrix.decompose(l.position,l.quaternion,l.scale)):(t.position!==void 0&&l.position.fromArray(t.position),t.rotation!==void 0&&l.rotation.fromArray(t.rotation),t.quaternion!==void 0&&l.quaternion.fromArray(t.quaternion),t.scale!==void 0&&l.scale.fromArray(t.scale)),t.up!==void 0&&l.up.fromArray(t.up),t.castShadow!==void 0&&(l.castShadow=t.castShadow),t.receiveShadow!==void 0&&(l.receiveShadow=t.receiveShadow),t.shadow&&(t.shadow.intensity!==void 0&&(l.shadow.intensity=t.shadow.intensity),t.shadow.bias!==void 0&&(l.shadow.bias=t.shadow.bias),t.shadow.normalBias!==void 0&&(l.shadow.normalBias=t.shadow.normalBias),t.shadow.radius!==void 0&&(l.shadow.radius=t.shadow.radius),t.shadow.mapSize!==void 0&&l.shadow.mapSize.fromArray(t.shadow.mapSize),t.shadow.camera!==void 0&&(l.shadow.camera=this.parseObject(t.shadow.camera))),t.visible!==void 0&&(l.visible=t.visible),t.frustumCulled!==void 0&&(l.frustumCulled=t.frustumCulled),t.renderOrder!==void 0&&(l.renderOrder=t.renderOrder),t.userData!==void 0&&(l.userData=t.userData),t.layers!==void 0&&(l.layers.mask=t.layers),t.children!==void 0){const g=t.children;for(let v=0;v<g.length;v++)l.add(this.parseObject(g[v],e,n,i,o))}if(t.animations!==void 0){const g=t.animations;for(let v=0;v<g.length;v++){const x=g[v];l.animations.push(o[x])}}if(t.type==="LOD"){t.autoUpdate!==void 0&&(l.autoUpdate=t.autoUpdate);const g=t.levels;for(let v=0;v<g.length;v++){const x=g[v],b=l.getObjectByProperty("uuid",x.object);b!==void 0&&l.addLevel(b,x.distance,x.hysteresis)}}return l}bindSkeletons(t,e){Object.keys(e).length!==0&&t.traverse(function(n){if(n.isSkinnedMesh===!0&&n.skeleton!==void 0){const i=e[n.skeleton];i===void 0?console.warn("THREE.ObjectLoader: No skeleton found with UUID:",n.skeleton):n.bind(i,n.bindMatrix)}})}bindLightTargets(t){t.traverse(function(e){if(e.isDirectionalLight||e.isSpotLight){const n=e.target,i=t.getObjectByProperty("uuid",n);i!==void 0?e.target=i:e.target=new Le}})}}const tA={UVMapping:Yh,CubeReflectionMapping:Fs,CubeRefractionMapping:ga,EquirectangularReflectionMapping:kl,EquirectangularRefractionMapping:Wl,CubeUVReflectionMapping:Bo},M_={RepeatWrapping:Xl,ClampToEdgeWrapping:Pi,MirroredRepeatWrapping:ql},b_={NearestFilter:Cn,NearestMipmapNearestFilter:Cm,NearestMipmapLinearFilter:xo,LinearFilter:mn,LinearMipmapNearestFilter:Ll,LinearMipmapLinearFilter:rs},Rp=new WeakMap;class eA extends oi{constructor(t){super(t),this.isImageBitmapLoader=!0,typeof createImageBitmap>"u"&&console.warn("THREE.ImageBitmapLoader: createImageBitmap() not supported."),typeof fetch>"u"&&console.warn("THREE.ImageBitmapLoader: fetch() not supported."),this.options={premultiplyAlpha:"none"},this._abortController=new AbortController}setOptions(t){return this.options=t,this}load(t,e,n,i){t===void 0&&(t=""),this.path!==void 0&&(t=this.path+t),t=this.manager.resolveURL(t);const o=this,l=os.get(`image-bitmap:${t}`);if(l!==void 0){if(o.manager.itemStart(t),l.then){l.then(f=>{if(Rp.has(l)===!0)i&&i(Rp.get(l)),o.manager.itemError(t),o.manager.itemEnd(t);else return e&&e(f),o.manager.itemEnd(t),f});return}return setTimeout(function(){e&&e(l),o.manager.itemEnd(t)},0),l}const c={};c.credentials=this.crossOrigin==="anonymous"?"same-origin":"include",c.headers=this.requestHeader,c.signal=typeof AbortSignal.any=="function"?AbortSignal.any([this._abortController.signal,this.manager.abortController.signal]):this._abortController.signal;const h=fetch(t,c).then(function(f){return f.blob()}).then(function(f){return createImageBitmap(f,Object.assign(o.options,{colorSpaceConversion:"none"}))}).then(function(f){return os.add(`image-bitmap:${t}`,f),e&&e(f),o.manager.itemEnd(t),f}).catch(function(f){i&&i(f),Rp.set(h,f),os.remove(`image-bitmap:${t}`),o.manager.itemError(t),o.manager.itemEnd(t)});os.add(`image-bitmap:${t}`,h),o.manager.itemStart(t)}abort(){return this._abortController.abort(),this._abortController=new AbortController,this}}let Iu;class og{static getContext(){return Iu===void 0&&(Iu=new(window.AudioContext||window.webkitAudioContext)),Iu}static setContext(t){Iu=t}}class nA extends oi{constructor(t){super(t)}load(t,e,n,i){const o=this,l=new Vs(this.manager);l.setResponseType("arraybuffer"),l.setPath(this.path),l.setRequestHeader(this.requestHeader),l.setWithCredentials(this.withCredentials),l.load(t,function(h){try{const f=h.slice(0);og.getContext().decodeAudioData(f,function(m){e(m)}).catch(c)}catch(f){c(f)}},n,i);function c(h){i?i(h):console.error(h),o.manager.itemError(t)}}}const E_=new pe,T_=new pe,ja=new pe;class iA{constructor(){this.type="StereoCamera",this.aspect=1,this.eyeSep=.064,this.cameraL=new cn,this.cameraL.layers.enable(1),this.cameraL.matrixAutoUpdate=!1,this.cameraR=new cn,this.cameraR.layers.enable(2),this.cameraR.matrixAutoUpdate=!1,this._cache={focus:null,fov:null,aspect:null,near:null,far:null,zoom:null,eyeSep:null}}update(t){const e=this._cache;if(e.focus!==t.focus||e.fov!==t.fov||e.aspect!==t.aspect*this.aspect||e.near!==t.near||e.far!==t.far||e.zoom!==t.zoom||e.eyeSep!==this.eyeSep){e.focus=t.focus,e.fov=t.fov,e.aspect=t.aspect*this.aspect,e.near=t.near,e.far=t.far,e.zoom=t.zoom,e.eyeSep=this.eyeSep,ja.copy(t.projectionMatrix);const i=e.eyeSep/2,o=i*e.near/e.focus,l=e.near*Math.tan(dr*e.fov*.5)/e.zoom;let c,h;T_.elements[12]=-i,E_.elements[12]=i,c=-l*e.aspect+o,h=l*e.aspect+o,ja.elements[0]=2*e.near/(h-c),ja.elements[8]=(h+c)/(h-c),this.cameraL.projectionMatrix.copy(ja),c=-l*e.aspect-o,h=l*e.aspect-o,ja.elements[0]=2*e.near/(h-c),ja.elements[8]=(h+c)/(h-c),this.cameraR.projectionMatrix.copy(ja)}this.cameraL.matrixWorld.copy(t.matrixWorld).multiply(T_),this.cameraR.matrixWorld.copy(t.matrixWorld).multiply(E_)}}class xS extends cn{constructor(t=[]){super(),this.isArrayCamera=!0,this.isMultiViewCamera=!1,this.cameras=t}}class lg{constructor(t=!0){this.autoStart=t,this.startTime=0,this.oldTime=0,this.elapsedTime=0,this.running=!1}start(){this.startTime=performance.now(),this.oldTime=this.startTime,this.elapsedTime=0,this.running=!0}stop(){this.getElapsedTime(),this.running=!1,this.autoStart=!1}getElapsedTime(){return this.getDelta(),this.elapsedTime}getDelta(){let t=0;if(this.autoStart&&!this.running)return this.start(),0;if(this.running){const e=performance.now();t=(e-this.oldTime)/1e3,this.oldTime=e,this.elapsedTime+=t}return t}}const Za=new I,Dp=new Vn,sA=new I,Ka=new I,Ja=new I;class aA extends Le{constructor(){super(),this.type="AudioListener",this.context=og.getContext(),this.gain=this.context.createGain(),this.gain.connect(this.context.destination),this.filter=null,this.timeDelta=0,this._clock=new lg}getInput(){return this.gain}removeFilter(){return this.filter!==null&&(this.gain.disconnect(this.filter),this.filter.disconnect(this.context.destination),this.gain.connect(this.context.destination),this.filter=null),this}getFilter(){return this.filter}setFilter(t){return this.filter!==null?(this.gain.disconnect(this.filter),this.filter.disconnect(this.context.destination)):this.gain.disconnect(this.context.destination),this.filter=t,this.gain.connect(this.filter),this.filter.connect(this.context.destination),this}getMasterVolume(){return this.gain.gain.value}setMasterVolume(t){return this.gain.gain.setTargetAtTime(t,this.context.currentTime,.01),this}updateMatrixWorld(t){super.updateMatrixWorld(t);const e=this.context.listener;if(this.timeDelta=this._clock.getDelta(),this.matrixWorld.decompose(Za,Dp,sA),Ka.set(0,0,-1).applyQuaternion(Dp),Ja.set(0,1,0).applyQuaternion(Dp),e.positionX){const n=this.context.currentTime+this.timeDelta;e.positionX.linearRampToValueAtTime(Za.x,n),e.positionY.linearRampToValueAtTime(Za.y,n),e.positionZ.linearRampToValueAtTime(Za.z,n),e.forwardX.linearRampToValueAtTime(Ka.x,n),e.forwardY.linearRampToValueAtTime(Ka.y,n),e.forwardZ.linearRampToValueAtTime(Ka.z,n),e.upX.linearRampToValueAtTime(Ja.x,n),e.upY.linearRampToValueAtTime(Ja.y,n),e.upZ.linearRampToValueAtTime(Ja.z,n)}else e.setPosition(Za.x,Za.y,Za.z),e.setOrientation(Ka.x,Ka.y,Ka.z,Ja.x,Ja.y,Ja.z)}}class SS extends Le{constructor(t){super(),this.type="Audio",this.listener=t,this.context=t.context,this.gain=this.context.createGain(),this.gain.connect(t.getInput()),this.autoplay=!1,this.buffer=null,this.detune=0,this.loop=!1,this.loopStart=0,this.loopEnd=0,this.offset=0,this.duration=void 0,this.playbackRate=1,this.isPlaying=!1,this.hasPlaybackControl=!0,this.source=null,this.sourceType="empty",this._startedAt=0,this._progress=0,this._connected=!1,this.filters=[]}getOutput(){return this.gain}setNodeSource(t){return this.hasPlaybackControl=!1,this.sourceType="audioNode",this.source=t,this.connect(),this}setMediaElementSource(t){return this.hasPlaybackControl=!1,this.sourceType="mediaNode",this.source=this.context.createMediaElementSource(t),this.connect(),this}setMediaStreamSource(t){return this.hasPlaybackControl=!1,this.sourceType="mediaStreamNode",this.source=this.context.createMediaStreamSource(t),this.connect(),this}setBuffer(t){return this.buffer=t,this.sourceType="buffer",this.autoplay&&this.play(),this}play(t=0){if(this.isPlaying===!0){console.warn("THREE.Audio: Audio is already playing.");return}if(this.hasPlaybackControl===!1){console.warn("THREE.Audio: this Audio has no playback control.");return}this._startedAt=this.context.currentTime+t;const e=this.context.createBufferSource();return e.buffer=this.buffer,e.loop=this.loop,e.loopStart=this.loopStart,e.loopEnd=this.loopEnd,e.onended=this.onEnded.bind(this),e.start(this._startedAt,this._progress+this.offset,this.duration),this.isPlaying=!0,this.source=e,this.setDetune(this.detune),this.setPlaybackRate(this.playbackRate),this.connect()}pause(){if(this.hasPlaybackControl===!1){console.warn("THREE.Audio: this Audio has no playback control.");return}return this.isPlaying===!0&&(this._progress+=Math.max(this.context.currentTime-this._startedAt,0)*this.playbackRate,this.loop===!0&&(this._progress=this._progress%(this.duration||this.buffer.duration)),this.source.stop(),this.source.onended=null,this.isPlaying=!1),this}stop(t=0){if(this.hasPlaybackControl===!1){console.warn("THREE.Audio: this Audio has no playback control.");return}return this._progress=0,this.source!==null&&(this.source.stop(this.context.currentTime+t),this.source.onended=null),this.isPlaying=!1,this}connect(){if(this.filters.length>0){this.source.connect(this.filters[0]);for(let t=1,e=this.filters.length;t<e;t++)this.filters[t-1].connect(this.filters[t]);this.filters[this.filters.length-1].connect(this.getOutput())}else this.source.connect(this.getOutput());return this._connected=!0,this}disconnect(){if(this._connected!==!1){if(this.filters.length>0){this.source.disconnect(this.filters[0]);for(let t=1,e=this.filters.length;t<e;t++)this.filters[t-1].disconnect(this.filters[t]);this.filters[this.filters.length-1].disconnect(this.getOutput())}else this.source.disconnect(this.getOutput());return this._connected=!1,this}}getFilters(){return this.filters}setFilters(t){return t||(t=[]),this._connected===!0?(this.disconnect(),this.filters=t.slice(),this.connect()):this.filters=t.slice(),this}setDetune(t){return this.detune=t,this.isPlaying===!0&&this.source.detune!==void 0&&this.source.detune.setTargetAtTime(this.detune,this.context.currentTime,.01),this}getDetune(){return this.detune}getFilter(){return this.getFilters()[0]}setFilter(t){return this.setFilters(t?[t]:[])}setPlaybackRate(t){if(this.hasPlaybackControl===!1){console.warn("THREE.Audio: this Audio has no playback control.");return}return this.playbackRate=t,this.isPlaying===!0&&this.source.playbackRate.setTargetAtTime(this.playbackRate,this.context.currentTime,.01),this}getPlaybackRate(){return this.playbackRate}onEnded(){this.isPlaying=!1,this._progress=0}getLoop(){return this.hasPlaybackControl===!1?(console.warn("THREE.Audio: this Audio has no playback control."),!1):this.loop}setLoop(t){if(this.hasPlaybackControl===!1){console.warn("THREE.Audio: this Audio has no playback control.");return}return this.loop=t,this.isPlaying===!0&&(this.source.loop=this.loop),this}setLoopStart(t){return this.loopStart=t,this}setLoopEnd(t){return this.loopEnd=t,this}getVolume(){return this.gain.gain.value}setVolume(t){return this.gain.gain.setTargetAtTime(t,this.context.currentTime,.01),this}copy(t,e){return super.copy(t,e),t.sourceType!=="buffer"?(console.warn("THREE.Audio: Audio source type cannot be copied."),this):(this.autoplay=t.autoplay,this.buffer=t.buffer,this.detune=t.detune,this.loop=t.loop,this.loopStart=t.loopStart,this.loopEnd=t.loopEnd,this.offset=t.offset,this.duration=t.duration,this.playbackRate=t.playbackRate,this.hasPlaybackControl=t.hasPlaybackControl,this.sourceType=t.sourceType,this.filters=t.filters.slice(),this)}clone(t){return new this.constructor(this.listener).copy(this,t)}}const Qa=new I,A_=new Vn,rA=new I,$a=new I;class oA extends SS{constructor(t){super(t),this.panner=this.context.createPanner(),this.panner.panningModel="HRTF",this.panner.connect(this.gain)}connect(){return super.connect(),this.panner.connect(this.gain),this}disconnect(){return super.disconnect(),this.panner.disconnect(this.gain),this}getOutput(){return this.panner}getRefDistance(){return this.panner.refDistance}setRefDistance(t){return this.panner.refDistance=t,this}getRolloffFactor(){return this.panner.rolloffFactor}setRolloffFactor(t){return this.panner.rolloffFactor=t,this}getDistanceModel(){return this.panner.distanceModel}setDistanceModel(t){return this.panner.distanceModel=t,this}getMaxDistance(){return this.panner.maxDistance}setMaxDistance(t){return this.panner.maxDistance=t,this}setDirectionalCone(t,e,n){return this.panner.coneInnerAngle=t,this.panner.coneOuterAngle=e,this.panner.coneOuterGain=n,this}updateMatrixWorld(t){if(super.updateMatrixWorld(t),this.hasPlaybackControl===!0&&this.isPlaying===!1)return;this.matrixWorld.decompose(Qa,A_,rA),$a.set(0,0,1).applyQuaternion(A_);const e=this.panner;if(e.positionX){const n=this.context.currentTime+this.listener.timeDelta;e.positionX.linearRampToValueAtTime(Qa.x,n),e.positionY.linearRampToValueAtTime(Qa.y,n),e.positionZ.linearRampToValueAtTime(Qa.z,n),e.orientationX.linearRampToValueAtTime($a.x,n),e.orientationY.linearRampToValueAtTime($a.y,n),e.orientationZ.linearRampToValueAtTime($a.z,n)}else e.setPosition(Qa.x,Qa.y,Qa.z),e.setOrientation($a.x,$a.y,$a.z)}}class lA{constructor(t,e=2048){this.analyser=t.context.createAnalyser(),this.analyser.fftSize=e,this.data=new Uint8Array(this.analyser.frequencyBinCount),t.getOutput().connect(this.analyser)}getFrequencyData(){return this.analyser.getByteFrequencyData(this.data),this.data}getAverageFrequency(){let t=0;const e=this.getFrequencyData();for(let n=0;n<e.length;n++)t+=e[n];return t/e.length}}class MS{constructor(t,e,n){this.binding=t,this.valueSize=n;let i,o,l;switch(e){case"quaternion":i=this._slerp,o=this._slerpAdditive,l=this._setAdditiveIdentityQuaternion,this.buffer=new Float64Array(n*6),this._workIndex=5;break;case"string":case"bool":i=this._select,o=this._select,l=this._setAdditiveIdentityOther,this.buffer=new Array(n*5);break;default:i=this._lerp,o=this._lerpAdditive,l=this._setAdditiveIdentityNumeric,this.buffer=new Float64Array(n*5)}this._mixBufferRegion=i,this._mixBufferRegionAdditive=o,this._setIdentity=l,this._origIndex=3,this._addIndex=4,this.cumulativeWeight=0,this.cumulativeWeightAdditive=0,this.useCount=0,this.referenceCount=0}accumulate(t,e){const n=this.buffer,i=this.valueSize,o=t*i+i;let l=this.cumulativeWeight;if(l===0){for(let c=0;c!==i;++c)n[o+c]=n[c];l=e}else{l+=e;const c=e/l;this._mixBufferRegion(n,o,0,c,i)}this.cumulativeWeight=l}accumulateAdditive(t){const e=this.buffer,n=this.valueSize,i=n*this._addIndex;this.cumulativeWeightAdditive===0&&this._setIdentity(),this._mixBufferRegionAdditive(e,i,0,t,n),this.cumulativeWeightAdditive+=t}apply(t){const e=this.valueSize,n=this.buffer,i=t*e+e,o=this.cumulativeWeight,l=this.cumulativeWeightAdditive,c=this.binding;if(this.cumulativeWeight=0,this.cumulativeWeightAdditive=0,o<1){const h=e*this._origIndex;this._mixBufferRegion(n,i,h,1-o,e)}l>0&&this._mixBufferRegionAdditive(n,i,this._addIndex*e,1,e);for(let h=e,f=e+e;h!==f;++h)if(n[h]!==n[h+e]){c.setValue(n,i);break}}saveOriginalState(){const t=this.binding,e=this.buffer,n=this.valueSize,i=n*this._origIndex;t.getValue(e,i);for(let o=n,l=i;o!==l;++o)e[o]=e[i+o%n];this._setIdentity(),this.cumulativeWeight=0,this.cumulativeWeightAdditive=0}restoreOriginalState(){const t=this.valueSize*3;this.binding.setValue(this.buffer,t)}_setAdditiveIdentityNumeric(){const t=this._addIndex*this.valueSize,e=t+this.valueSize;for(let n=t;n<e;n++)this.buffer[n]=0}_setAdditiveIdentityQuaternion(){this._setAdditiveIdentityNumeric(),this.buffer[this._addIndex*this.valueSize+3]=1}_setAdditiveIdentityOther(){const t=this._origIndex*this.valueSize,e=this._addIndex*this.valueSize;for(let n=0;n<this.valueSize;n++)this.buffer[e+n]=this.buffer[t+n]}_select(t,e,n,i,o){if(i>=.5)for(let l=0;l!==o;++l)t[e+l]=t[n+l]}_slerp(t,e,n,i){Vn.slerpFlat(t,e,t,e,t,n,i)}_slerpAdditive(t,e,n,i,o){const l=this._workIndex*o;Vn.multiplyQuaternionsFlat(t,l,t,e,t,n),Vn.slerpFlat(t,e,t,e,t,l,i)}_lerp(t,e,n,i,o){const l=1-i;for(let c=0;c!==o;++c){const h=e+c;t[h]=t[h]*l+t[n+c]*i}}_lerpAdditive(t,e,n,i,o){for(let l=0;l!==o;++l){const c=e+l;t[c]=t[c]+t[n+l]*i}}}const cg="\\[\\]\\.:\\/",cA=new RegExp("["+cg+"]","g"),ug="[^"+cg+"]",uA="[^"+cg.replace("\\.","")+"]",hA=/((?:WC+[\/:])*)/.source.replace("WC",ug),fA=/(WCOD+)?/.source.replace("WCOD",uA),dA=/(?:\.(WC+)(?:\[(.+)\])?)?/.source.replace("WC",ug),pA=/\.(WC+)(?:\[(.+)\])?/.source.replace("WC",ug),mA=new RegExp("^"+hA+fA+dA+pA+"$"),gA=["material","materials","bones","map"];class vA{constructor(t,e,n){const i=n||Ue.parseTrackName(e);this._targetGroup=t,this._bindings=t.subscribe_(e,i)}getValue(t,e){this.bind();const n=this._targetGroup.nCachedObjects_,i=this._bindings[n];i!==void 0&&i.getValue(t,e)}setValue(t,e){const n=this._bindings;for(let i=this._targetGroup.nCachedObjects_,o=n.length;i!==o;++i)n[i].setValue(t,e)}bind(){const t=this._bindings;for(let e=this._targetGroup.nCachedObjects_,n=t.length;e!==n;++e)t[e].bind()}unbind(){const t=this._bindings;for(let e=this._targetGroup.nCachedObjects_,n=t.length;e!==n;++e)t[e].unbind()}}class Ue{constructor(t,e,n){this.path=e,this.parsedPath=n||Ue.parseTrackName(e),this.node=Ue.findNode(t,this.parsedPath.nodeName),this.rootNode=t,this.getValue=this._getValue_unbound,this.setValue=this._setValue_unbound}static create(t,e,n){return t&&t.isAnimationObjectGroup?new Ue.Composite(t,e,n):new Ue(t,e,n)}static sanitizeNodeName(t){return t.replace(/\s/g,"_").replace(cA,"")}static parseTrackName(t){const e=mA.exec(t);if(e===null)throw new Error("PropertyBinding: Cannot parse trackName: "+t);const n={nodeName:e[2],objectName:e[3],objectIndex:e[4],propertyName:e[5],propertyIndex:e[6]},i=n.nodeName&&n.nodeName.lastIndexOf(".");if(i!==void 0&&i!==-1){const o=n.nodeName.substring(i+1);gA.indexOf(o)!==-1&&(n.nodeName=n.nodeName.substring(0,i),n.objectName=o)}if(n.propertyName===null||n.propertyName.length===0)throw new Error("PropertyBinding: can not parse propertyName from trackName: "+t);return n}static findNode(t,e){if(e===void 0||e===""||e==="."||e===-1||e===t.name||e===t.uuid)return t;if(t.skeleton){const n=t.skeleton.getBoneByName(e);if(n!==void 0)return n}if(t.children){const n=function(o){for(let l=0;l<o.length;l++){const c=o[l];if(c.name===e||c.uuid===e)return c;const h=n(c.children);if(h)return h}return null},i=n(t.children);if(i)return i}return null}_getValue_unavailable(){}_setValue_unavailable(){}_getValue_direct(t,e){t[e]=this.targetObject[this.propertyName]}_getValue_array(t,e){const n=this.resolvedProperty;for(let i=0,o=n.length;i!==o;++i)t[e++]=n[i]}_getValue_arrayElement(t,e){t[e]=this.resolvedProperty[this.propertyIndex]}_getValue_toArray(t,e){this.resolvedProperty.toArray(t,e)}_setValue_direct(t,e){this.targetObject[this.propertyName]=t[e]}_setValue_direct_setNeedsUpdate(t,e){this.targetObject[this.propertyName]=t[e],this.targetObject.needsUpdate=!0}_setValue_direct_setMatrixWorldNeedsUpdate(t,e){this.targetObject[this.propertyName]=t[e],this.targetObject.matrixWorldNeedsUpdate=!0}_setValue_array(t,e){const n=this.resolvedProperty;for(let i=0,o=n.length;i!==o;++i)n[i]=t[e++]}_setValue_array_setNeedsUpdate(t,e){const n=this.resolvedProperty;for(let i=0,o=n.length;i!==o;++i)n[i]=t[e++];this.targetObject.needsUpdate=!0}_setValue_array_setMatrixWorldNeedsUpdate(t,e){const n=this.resolvedProperty;for(let i=0,o=n.length;i!==o;++i)n[i]=t[e++];this.targetObject.matrixWorldNeedsUpdate=!0}_setValue_arrayElement(t,e){this.resolvedProperty[this.propertyIndex]=t[e]}_setValue_arrayElement_setNeedsUpdate(t,e){this.resolvedProperty[this.propertyIndex]=t[e],this.targetObject.needsUpdate=!0}_setValue_arrayElement_setMatrixWorldNeedsUpdate(t,e){this.resolvedProperty[this.propertyIndex]=t[e],this.targetObject.matrixWorldNeedsUpdate=!0}_setValue_fromArray(t,e){this.resolvedProperty.fromArray(t,e)}_setValue_fromArray_setNeedsUpdate(t,e){this.resolvedProperty.fromArray(t,e),this.targetObject.needsUpdate=!0}_setValue_fromArray_setMatrixWorldNeedsUpdate(t,e){this.resolvedProperty.fromArray(t,e),this.targetObject.matrixWorldNeedsUpdate=!0}_getValue_unbound(t,e){this.bind(),this.getValue(t,e)}_setValue_unbound(t,e){this.bind(),this.setValue(t,e)}bind(){let t=this.node;const e=this.parsedPath,n=e.objectName,i=e.propertyName;let o=e.propertyIndex;if(t||(t=Ue.findNode(this.rootNode,e.nodeName),this.node=t),this.getValue=this._getValue_unavailable,this.setValue=this._setValue_unavailable,!t){console.warn("THREE.PropertyBinding: No target node found for track: "+this.path+".");return}if(n){let f=e.objectIndex;switch(n){case"materials":if(!t.material){console.error("THREE.PropertyBinding: Can not bind to material as node does not have a material.",this);return}if(!t.material.materials){console.error("THREE.PropertyBinding: Can not bind to material.materials as node.material does not have a materials array.",this);return}t=t.material.materials;break;case"bones":if(!t.skeleton){console.error("THREE.PropertyBinding: Can not bind to bones as node does not have a skeleton.",this);return}t=t.skeleton.bones;for(let p=0;p<t.length;p++)if(t[p].name===f){f=p;break}break;case"map":if("map"in t){t=t.map;break}if(!t.material){console.error("THREE.PropertyBinding: Can not bind to material as node does not have a material.",this);return}if(!t.material.map){console.error("THREE.PropertyBinding: Can not bind to material.map as node.material does not have a map.",this);return}t=t.material.map;break;default:if(t[n]===void 0){console.error("THREE.PropertyBinding: Can not bind to objectName of node undefined.",this);return}t=t[n]}if(f!==void 0){if(t[f]===void 0){console.error("THREE.PropertyBinding: Trying to bind to objectIndex of objectName, but is undefined.",this,t);return}t=t[f]}}const l=t[i];if(l===void 0){const f=e.nodeName;console.error("THREE.PropertyBinding: Trying to update property for track: "+f+"."+i+" but it wasn't found.",t);return}let c=this.Versioning.None;this.targetObject=t,t.isMaterial===!0?c=this.Versioning.NeedsUpdate:t.isObject3D===!0&&(c=this.Versioning.MatrixWorldNeedsUpdate);let h=this.BindingType.Direct;if(o!==void 0){if(i==="morphTargetInfluences"){if(!t.geometry){console.error("THREE.PropertyBinding: Can not bind to morphTargetInfluences because node does not have a geometry.",this);return}if(!t.geometry.morphAttributes){console.error("THREE.PropertyBinding: Can not bind to morphTargetInfluences because node does not have a geometry.morphAttributes.",this);return}t.morphTargetDictionary[o]!==void 0&&(o=t.morphTargetDictionary[o])}h=this.BindingType.ArrayElement,this.resolvedProperty=l,this.propertyIndex=o}else l.fromArray!==void 0&&l.toArray!==void 0?(h=this.BindingType.HasFromToArray,this.resolvedProperty=l):Array.isArray(l)?(h=this.BindingType.EntireArray,this.resolvedProperty=l):this.propertyName=i;this.getValue=this.GetterByBindingType[h],this.setValue=this.SetterByBindingTypeAndVersioning[h][c]}unbind(){this.node=null,this.getValue=this._getValue_unbound,this.setValue=this._setValue_unbound}}Ue.Composite=vA;Ue.prototype.BindingType={Direct:0,EntireArray:1,ArrayElement:2,HasFromToArray:3};Ue.prototype.Versioning={None:0,NeedsUpdate:1,MatrixWorldNeedsUpdate:2};Ue.prototype.GetterByBindingType=[Ue.prototype._getValue_direct,Ue.prototype._getValue_array,Ue.prototype._getValue_arrayElement,Ue.prototype._getValue_toArray];Ue.prototype.SetterByBindingTypeAndVersioning=[[Ue.prototype._setValue_direct,Ue.prototype._setValue_direct_setNeedsUpdate,Ue.prototype._setValue_direct_setMatrixWorldNeedsUpdate],[Ue.prototype._setValue_array,Ue.prototype._setValue_array_setNeedsUpdate,Ue.prototype._setValue_array_setMatrixWorldNeedsUpdate],[Ue.prototype._setValue_arrayElement,Ue.prototype._setValue_arrayElement_setNeedsUpdate,Ue.prototype._setValue_arrayElement_setMatrixWorldNeedsUpdate],[Ue.prototype._setValue_fromArray,Ue.prototype._setValue_fromArray_setNeedsUpdate,Ue.prototype._setValue_fromArray_setMatrixWorldNeedsUpdate]];class _A{constructor(){this.isAnimationObjectGroup=!0,this.uuid=Mi(),this._objects=Array.prototype.slice.call(arguments),this.nCachedObjects_=0;const t={};this._indicesByUUID=t;for(let n=0,i=arguments.length;n!==i;++n)t[arguments[n].uuid]=n;this._paths=[],this._parsedPaths=[],this._bindings=[],this._bindingsIndicesByPath={};const e=this;this.stats={objects:{get total(){return e._objects.length},get inUse(){return this.total-e.nCachedObjects_}},get bindingsPerObject(){return e._bindings.length}}}add(){const t=this._objects,e=this._indicesByUUID,n=this._paths,i=this._parsedPaths,o=this._bindings,l=o.length;let c,h=t.length,f=this.nCachedObjects_;for(let p=0,m=arguments.length;p!==m;++p){const g=arguments[p],v=g.uuid;let x=e[v];if(x===void 0){x=h++,e[v]=x,t.push(g);for(let b=0,S=l;b!==S;++b)o[b].push(new Ue(g,n[b],i[b]))}else if(x<f){c=t[x];const b=--f,S=t[b];e[S.uuid]=x,t[x]=S,e[v]=b,t[b]=g;for(let _=0,E=l;_!==E;++_){const A=o[_],T=A[b];let U=A[x];A[x]=T,U===void 0&&(U=new Ue(g,n[_],i[_])),A[b]=U}}else t[x]!==c&&console.error("THREE.AnimationObjectGroup: Different objects with the same UUID detected. Clean the caches or recreate your infrastructure when reloading scenes.")}this.nCachedObjects_=f}remove(){const t=this._objects,e=this._indicesByUUID,n=this._bindings,i=n.length;let o=this.nCachedObjects_;for(let l=0,c=arguments.length;l!==c;++l){const h=arguments[l],f=h.uuid,p=e[f];if(p!==void 0&&p>=o){const m=o++,g=t[m];e[g.uuid]=p,t[p]=g,e[f]=m,t[m]=h;for(let v=0,x=i;v!==x;++v){const b=n[v],S=b[m],_=b[p];b[p]=S,b[m]=_}}}this.nCachedObjects_=o}uncache(){const t=this._objects,e=this._indicesByUUID,n=this._bindings,i=n.length;let o=this.nCachedObjects_,l=t.length;for(let c=0,h=arguments.length;c!==h;++c){const f=arguments[c],p=f.uuid,m=e[p];if(m!==void 0)if(delete e[p],m<o){const g=--o,v=t[g],x=--l,b=t[x];e[v.uuid]=m,t[m]=v,e[b.uuid]=g,t[g]=b,t.pop();for(let S=0,_=i;S!==_;++S){const E=n[S],A=E[g],T=E[x];E[m]=A,E[g]=T,E.pop()}}else{const g=--l,v=t[g];g>0&&(e[v.uuid]=m),t[m]=v,t.pop();for(let x=0,b=i;x!==b;++x){const S=n[x];S[m]=S[g],S.pop()}}}this.nCachedObjects_=o}subscribe_(t,e){const n=this._bindingsIndicesByPath;let i=n[t];const o=this._bindings;if(i!==void 0)return o[i];const l=this._paths,c=this._parsedPaths,h=this._objects,f=h.length,p=this.nCachedObjects_,m=new Array(f);i=o.length,n[t]=i,l.push(t),c.push(e),o.push(m);for(let g=p,v=h.length;g!==v;++g){const x=h[g];m[g]=new Ue(x,t,e)}return m}unsubscribe_(t){const e=this._bindingsIndicesByPath,n=e[t];if(n!==void 0){const i=this._paths,o=this._parsedPaths,l=this._bindings,c=l.length-1,h=l[c],f=t[c];e[f]=n,l[n]=h,l.pop(),o[n]=o[c],o.pop(),i[n]=i[c],i.pop()}}}class bS{constructor(t,e,n=null,i=e.blendMode){this._mixer=t,this._clip=e,this._localRoot=n,this.blendMode=i;const o=e.tracks,l=o.length,c=new Array(l),h={endingStart:lr,endingEnd:lr};for(let f=0;f!==l;++f){const p=o[f].createInterpolant(null);c[f]=p,p.settings=h}this._interpolantSettings=h,this._interpolants=c,this._propertyBindings=new Array(l),this._cacheIndex=null,this._byClipCacheIndex=null,this._timeScaleInterpolant=null,this._weightInterpolant=null,this.loop=lx,this._loopCount=-1,this._startTime=null,this.time=0,this.timeScale=1,this._effectiveTimeScale=1,this.weight=1,this._effectiveWeight=1,this.repetitions=1/0,this.paused=!1,this.enabled=!0,this.clampWhenFinished=!1,this.zeroSlopeAtStart=!0,this.zeroSlopeAtEnd=!0}play(){return this._mixer._activateAction(this),this}stop(){return this._mixer._deactivateAction(this),this.reset()}reset(){return this.paused=!1,this.enabled=!0,this.time=0,this._loopCount=-1,this._startTime=null,this.stopFading().stopWarping()}isRunning(){return this.enabled&&!this.paused&&this.timeScale!==0&&this._startTime===null&&this._mixer._isActiveAction(this)}isScheduled(){return this._mixer._isActiveAction(this)}startAt(t){return this._startTime=t,this}setLoop(t,e){return this.loop=t,this.repetitions=e,this}setEffectiveWeight(t){return this.weight=t,this._effectiveWeight=this.enabled?t:0,this.stopFading()}getEffectiveWeight(){return this._effectiveWeight}fadeIn(t){return this._scheduleFading(t,0,1)}fadeOut(t){return this._scheduleFading(t,1,0)}crossFadeFrom(t,e,n=!1){if(t.fadeOut(e),this.fadeIn(e),n===!0){const i=this._clip.duration,o=t._clip.duration,l=o/i,c=i/o;t.warp(1,l,e),this.warp(c,1,e)}return this}crossFadeTo(t,e,n=!1){return t.crossFadeFrom(this,e,n)}stopFading(){const t=this._weightInterpolant;return t!==null&&(this._weightInterpolant=null,this._mixer._takeBackControlInterpolant(t)),this}setEffectiveTimeScale(t){return this.timeScale=t,this._effectiveTimeScale=this.paused?0:t,this.stopWarping()}getEffectiveTimeScale(){return this._effectiveTimeScale}setDuration(t){return this.timeScale=this._clip.duration/t,this.stopWarping()}syncWith(t){return this.time=t.time,this.timeScale=t.timeScale,this.stopWarping()}halt(t){return this.warp(this._effectiveTimeScale,0,t)}warp(t,e,n){const i=this._mixer,o=i.time,l=this.timeScale;let c=this._timeScaleInterpolant;c===null&&(c=i._lendControlInterpolant(),this._timeScaleInterpolant=c);const h=c.parameterPositions,f=c.sampleValues;return h[0]=o,h[1]=o+n,f[0]=t/l,f[1]=e/l,this}stopWarping(){const t=this._timeScaleInterpolant;return t!==null&&(this._timeScaleInterpolant=null,this._mixer._takeBackControlInterpolant(t)),this}getMixer(){return this._mixer}getClip(){return this._clip}getRoot(){return this._localRoot||this._mixer._root}_update(t,e,n,i){if(!this.enabled){this._updateWeight(t);return}const o=this._startTime;if(o!==null){const h=(t-o)*n;h<0||n===0?e=0:(this._startTime=null,e=n*h)}e*=this._updateTimeScale(t);const l=this._updateTime(e),c=this._updateWeight(t);if(c>0){const h=this._interpolants,f=this._propertyBindings;switch(this.blendMode){case Om:for(let p=0,m=h.length;p!==m;++p)h[p].evaluate(l),f[p].accumulateAdditive(c);break;case tf:default:for(let p=0,m=h.length;p!==m;++p)h[p].evaluate(l),f[p].accumulate(i,c)}}}_updateWeight(t){let e=0;if(this.enabled){e=this.weight;const n=this._weightInterpolant;if(n!==null){const i=n.evaluate(t)[0];e*=i,t>n.parameterPositions[1]&&(this.stopFading(),i===0&&(this.enabled=!1))}}return this._effectiveWeight=e,e}_updateTimeScale(t){let e=0;if(!this.paused){e=this.timeScale;const n=this._timeScaleInterpolant;if(n!==null){const i=n.evaluate(t)[0];e*=i,t>n.parameterPositions[1]&&(this.stopWarping(),e===0?this.paused=!0:this.timeScale=e)}}return this._effectiveTimeScale=e,e}_updateTime(t){const e=this._clip.duration,n=this.loop;let i=this.time+t,o=this._loopCount;const l=n===cx;if(t===0)return o===-1?i:l&&(o&1)===1?e-i:i;if(n===ox){o===-1&&(this._loopCount=0,this._setEndings(!0,!0,!1));t:{if(i>=e)i=e;else if(i<0)i=0;else{this.time=i;break t}this.clampWhenFinished?this.paused=!0:this.enabled=!1,this.time=i,this._mixer.dispatchEvent({type:"finished",action:this,direction:t<0?-1:1})}}else{if(o===-1&&(t>=0?(o=0,this._setEndings(!0,this.repetitions===0,l)):this._setEndings(this.repetitions===0,!0,l)),i>=e||i<0){const c=Math.floor(i/e);i-=e*c,o+=Math.abs(c);const h=this.repetitions-o;if(h<=0)this.clampWhenFinished?this.paused=!0:this.enabled=!1,i=t>0?e:0,this.time=i,this._mixer.dispatchEvent({type:"finished",action:this,direction:t>0?1:-1});else{if(h===1){const f=t<0;this._setEndings(f,!f,l)}else this._setEndings(!1,!1,l);this._loopCount=o,this.time=i,this._mixer.dispatchEvent({type:"loop",action:this,loopDelta:c})}}else this.time=i;if(l&&(o&1)===1)return e-i}return i}_setEndings(t,e,n){const i=this._interpolantSettings;n?(i.endingStart=cr,i.endingEnd=cr):(t?i.endingStart=this.zeroSlopeAtStart?cr:lr:i.endingStart=jl,e?i.endingEnd=this.zeroSlopeAtEnd?cr:lr:i.endingEnd=jl)}_scheduleFading(t,e,n){const i=this._mixer,o=i.time;let l=this._weightInterpolant;l===null&&(l=i._lendControlInterpolant(),this._weightInterpolant=l);const c=l.parameterPositions,h=l.sampleValues;return c[0]=o,h[0]=e,c[1]=o+t,h[1]=n,this}}const yA=new Float32Array(1);class xA extends hs{constructor(t){super(),this._root=t,this._initMemoryManager(),this._accuIndex=0,this.time=0,this.timeScale=1}_bindAction(t,e){const n=t._localRoot||this._root,i=t._clip.tracks,o=i.length,l=t._propertyBindings,c=t._interpolants,h=n.uuid,f=this._bindingsByRootAndName;let p=f[h];p===void 0&&(p={},f[h]=p);for(let m=0;m!==o;++m){const g=i[m],v=g.name;let x=p[v];if(x!==void 0)++x.referenceCount,l[m]=x;else{if(x=l[m],x!==void 0){x._cacheIndex===null&&(++x.referenceCount,this._addInactiveBinding(x,h,v));continue}const b=e&&e._propertyBindings[m].binding.parsedPath;x=new MS(Ue.create(n,v,b),g.ValueTypeName,g.getValueSize()),++x.referenceCount,this._addInactiveBinding(x,h,v),l[m]=x}c[m].resultBuffer=x.buffer}}_activateAction(t){if(!this._isActiveAction(t)){if(t._cacheIndex===null){const n=(t._localRoot||this._root).uuid,i=t._clip.uuid,o=this._actionsByClip[i];this._bindAction(t,o&&o.knownActions[0]),this._addInactiveAction(t,i,n)}const e=t._propertyBindings;for(let n=0,i=e.length;n!==i;++n){const o=e[n];o.useCount++===0&&(this._lendBinding(o),o.saveOriginalState())}this._lendAction(t)}}_deactivateAction(t){if(this._isActiveAction(t)){const e=t._propertyBindings;for(let n=0,i=e.length;n!==i;++n){const o=e[n];--o.useCount===0&&(o.restoreOriginalState(),this._takeBackBinding(o))}this._takeBackAction(t)}}_initMemoryManager(){this._actions=[],this._nActiveActions=0,this._actionsByClip={},this._bindings=[],this._nActiveBindings=0,this._bindingsByRootAndName={},this._controlInterpolants=[],this._nActiveControlInterpolants=0;const t=this;this.stats={actions:{get total(){return t._actions.length},get inUse(){return t._nActiveActions}},bindings:{get total(){return t._bindings.length},get inUse(){return t._nActiveBindings}},controlInterpolants:{get total(){return t._controlInterpolants.length},get inUse(){return t._nActiveControlInterpolants}}}}_isActiveAction(t){const e=t._cacheIndex;return e!==null&&e<this._nActiveActions}_addInactiveAction(t,e,n){const i=this._actions,o=this._actionsByClip;let l=o[e];if(l===void 0)l={knownActions:[t],actionByRoot:{}},t._byClipCacheIndex=0,o[e]=l;else{const c=l.knownActions;t._byClipCacheIndex=c.length,c.push(t)}t._cacheIndex=i.length,i.push(t),l.actionByRoot[n]=t}_removeInactiveAction(t){const e=this._actions,n=e[e.length-1],i=t._cacheIndex;n._cacheIndex=i,e[i]=n,e.pop(),t._cacheIndex=null;const o=t._clip.uuid,l=this._actionsByClip,c=l[o],h=c.knownActions,f=h[h.length-1],p=t._byClipCacheIndex;f._byClipCacheIndex=p,h[p]=f,h.pop(),t._byClipCacheIndex=null;const m=c.actionByRoot,g=(t._localRoot||this._root).uuid;delete m[g],h.length===0&&delete l[o],this._removeInactiveBindingsForAction(t)}_removeInactiveBindingsForAction(t){const e=t._propertyBindings;for(let n=0,i=e.length;n!==i;++n){const o=e[n];--o.referenceCount===0&&this._removeInactiveBinding(o)}}_lendAction(t){const e=this._actions,n=t._cacheIndex,i=this._nActiveActions++,o=e[i];t._cacheIndex=i,e[i]=t,o._cacheIndex=n,e[n]=o}_takeBackAction(t){const e=this._actions,n=t._cacheIndex,i=--this._nActiveActions,o=e[i];t._cacheIndex=i,e[i]=t,o._cacheIndex=n,e[n]=o}_addInactiveBinding(t,e,n){const i=this._bindingsByRootAndName,o=this._bindings;let l=i[e];l===void 0&&(l={},i[e]=l),l[n]=t,t._cacheIndex=o.length,o.push(t)}_removeInactiveBinding(t){const e=this._bindings,n=t.binding,i=n.rootNode.uuid,o=n.path,l=this._bindingsByRootAndName,c=l[i],h=e[e.length-1],f=t._cacheIndex;h._cacheIndex=f,e[f]=h,e.pop(),delete c[o],Object.keys(c).length===0&&delete l[i]}_lendBinding(t){const e=this._bindings,n=t._cacheIndex,i=this._nActiveBindings++,o=e[i];t._cacheIndex=i,e[i]=t,o._cacheIndex=n,e[n]=o}_takeBackBinding(t){const e=this._bindings,n=t._cacheIndex,i=--this._nActiveBindings,o=e[i];t._cacheIndex=i,e[i]=t,o._cacheIndex=n,e[n]=o}_lendControlInterpolant(){const t=this._controlInterpolants,e=this._nActiveControlInterpolants++;let n=t[e];return n===void 0&&(n=new ig(new Float32Array(2),new Float32Array(2),1,yA),n.__cacheIndex=e,t[e]=n),n}_takeBackControlInterpolant(t){const e=this._controlInterpolants,n=t.__cacheIndex,i=--this._nActiveControlInterpolants,o=e[i];t.__cacheIndex=i,e[i]=t,o.__cacheIndex=n,e[n]=o}clipAction(t,e,n){const i=e||this._root,o=i.uuid;let l=typeof t=="string"?ic.findByName(i,t):t;const c=l!==null?l.uuid:t,h=this._actionsByClip[c];let f=null;if(n===void 0&&(l!==null?n=l.blendMode:n=tf),h!==void 0){const m=h.actionByRoot[o];if(m!==void 0&&m.blendMode===n)return m;f=h.knownActions[0],l===null&&(l=f._clip)}if(l===null)return null;const p=new bS(this,l,e,n);return this._bindAction(p,f),this._addInactiveAction(p,c,o),p}existingAction(t,e){const n=e||this._root,i=n.uuid,o=typeof t=="string"?ic.findByName(n,t):t,l=o?o.uuid:t,c=this._actionsByClip[l];return c!==void 0&&c.actionByRoot[i]||null}stopAllAction(){const t=this._actions,e=this._nActiveActions;for(let n=e-1;n>=0;--n)t[n].stop();return this}update(t){t*=this.timeScale;const e=this._actions,n=this._nActiveActions,i=this.time+=t,o=Math.sign(t),l=this._accuIndex^=1;for(let f=0;f!==n;++f)e[f]._update(i,t,o,l);const c=this._bindings,h=this._nActiveBindings;for(let f=0;f!==h;++f)c[f].apply(l);return this}setTime(t){this.time=0;for(let e=0;e<this._actions.length;e++)this._actions[e].time=0;return this.update(t)}getRoot(){return this._root}uncacheClip(t){const e=this._actions,n=t.uuid,i=this._actionsByClip,o=i[n];if(o!==void 0){const l=o.knownActions;for(let c=0,h=l.length;c!==h;++c){const f=l[c];this._deactivateAction(f);const p=f._cacheIndex,m=e[e.length-1];f._cacheIndex=null,f._byClipCacheIndex=null,m._cacheIndex=p,e[p]=m,e.pop(),this._removeInactiveBindingsForAction(f)}delete i[n]}}uncacheRoot(t){const e=t.uuid,n=this._actionsByClip;for(const l in n){const c=n[l].actionByRoot,h=c[e];h!==void 0&&(this._deactivateAction(h),this._removeInactiveAction(h))}const i=this._bindingsByRootAndName,o=i[e];if(o!==void 0)for(const l in o){const c=o[l];c.restoreOriginalState(),this._removeInactiveBinding(c)}}uncacheAction(t,e){const n=this.existingAction(t,e);n!==null&&(this._deactivateAction(n),this._removeInactiveAction(n))}}class SA extends Fm{constructor(t=1,e=1,n=1,i={}){super(t,e,i),this.isRenderTarget3D=!0,this.depth=n,this.texture=new nf(null,t,e,n),this._setTextureOptions(i),this.texture.isRenderTargetTexture=!0}}class hg{constructor(t){this.value=t}clone(){return new hg(this.value.clone===void 0?this.value:this.value.clone())}}let MA=0;class bA extends hs{constructor(){super(),this.isUniformsGroup=!0,Object.defineProperty(this,"id",{value:MA++}),this.name="",this.usage=Kl,this.uniforms=[]}add(t){return this.uniforms.push(t),this}remove(t){const e=this.uniforms.indexOf(t);return e!==-1&&this.uniforms.splice(e,1),this}setName(t){return this.name=t,this}setUsage(t){return this.usage=t,this}dispose(){this.dispatchEvent({type:"dispose"})}copy(t){this.name=t.name,this.usage=t.usage;const e=t.uniforms;this.uniforms.length=0;for(let n=0,i=e.length;n<i;n++){const o=Array.isArray(e[n])?e[n]:[e[n]];for(let l=0;l<o.length;l++)this.uniforms.push(o[l].clone())}return this}clone(){return new this.constructor().copy(this)}}class EA extends of{constructor(t,e,n=1){super(t,e),this.isInstancedInterleavedBuffer=!0,this.meshPerAttribute=n}copy(t){return super.copy(t),this.meshPerAttribute=t.meshPerAttribute,this}clone(t){const e=super.clone(t);return e.meshPerAttribute=this.meshPerAttribute,e}toJSON(t){const e=super.toJSON(t);return e.isInstancedInterleavedBuffer=!0,e.meshPerAttribute=this.meshPerAttribute,e}}class TA{constructor(t,e,n,i,o,l=!1){this.isGLBufferAttribute=!0,this.name="",this.buffer=t,this.type=e,this.itemSize=n,this.elementSize=i,this.count=o,this.normalized=l,this.version=0}set needsUpdate(t){t===!0&&this.version++}setBuffer(t){return this.buffer=t,this}setType(t,e){return this.type=t,this.elementSize=e,this}setItemSize(t){return this.itemSize=t,this}setCount(t){return this.count=t,this}}const w_=new pe;class ES{constructor(t,e,n=0,i=1/0){this.ray=new yr(t,e),this.near=n,this.far=i,this.camera=null,this.layers=new No,this.params={Mesh:{},Line:{threshold:1},LOD:{},Points:{threshold:1},Sprite:{}}}set(t,e){this.ray.set(t,e)}setFromCamera(t,e){e.isPerspectiveCamera?(this.ray.origin.setFromMatrixPosition(e.matrixWorld),this.ray.direction.set(t.x,t.y,.5).unproject(e).sub(this.ray.origin).normalize(),this.camera=e):e.isOrthographicCamera?(this.ray.origin.set(t.x,t.y,(e.near+e.far)/(e.near-e.far)).unproject(e),this.ray.direction.set(0,0,-1).transformDirection(e.matrixWorld),this.camera=e):console.error("THREE.Raycaster: Unsupported camera type: "+e.type)}setFromXRController(t){return w_.identity().extractRotation(t.matrixWorld),this.ray.origin.setFromMatrixPosition(t.matrixWorld),this.ray.direction.set(0,0,-1).applyMatrix4(w_),this}intersectObject(t,e=!0,n=[]){return mm(t,this,n,e),n.sort(C_),n}intersectObjects(t,e=!0,n=[]){for(let i=0,o=t.length;i<o;i++)mm(t[i],this,n,e);return n.sort(C_),n}}function C_(s,t){return s.distance-t.distance}function mm(s,t,e,n){let i=!0;if(s.layers.test(t.layers)&&s.raycast(t,e)===!1&&(i=!1),i===!0&&n===!0){const o=s.children;for(let l=0,c=o.length;l<c;l++)mm(o[l],t,e,!0)}}class AA{constructor(){this._previousTime=0,this._currentTime=0,this._startTime=performance.now(),this._delta=0,this._elapsed=0,this._timescale=1,this._document=null,this._pageVisibilityHandler=null}connect(t){this._document=t,t.hidden!==void 0&&(this._pageVisibilityHandler=wA.bind(this),t.addEventListener("visibilitychange",this._pageVisibilityHandler,!1))}disconnect(){this._pageVisibilityHandler!==null&&(this._document.removeEventListener("visibilitychange",this._pageVisibilityHandler),this._pageVisibilityHandler=null),this._document=null}getDelta(){return this._delta/1e3}getElapsed(){return this._elapsed/1e3}getTimescale(){return this._timescale}setTimescale(t){return this._timescale=t,this}reset(){return this._currentTime=performance.now()-this._startTime,this}dispose(){this.disconnect()}update(t){return this._pageVisibilityHandler!==null&&this._document.hidden===!0?this._delta=0:(this._previousTime=this._currentTime,this._currentTime=(t!==void 0?t:performance.now())-this._startTime,this._delta=(this._currentTime-this._previousTime)*this._timescale,this._elapsed+=this._delta),this}}function wA(){this._document.hidden===!1&&this.reset()}class gm{constructor(t=1,e=0,n=0){this.radius=t,this.phi=e,this.theta=n}set(t,e,n){return this.radius=t,this.phi=e,this.theta=n,this}copy(t){return this.radius=t.radius,this.phi=t.phi,this.theta=t.theta,this}makeSafe(){return this.phi=de(this.phi,1e-6,Math.PI-1e-6),this}setFromVector3(t){return this.setFromCartesianCoords(t.x,t.y,t.z)}setFromCartesianCoords(t,e,n){return this.radius=Math.sqrt(t*t+e*e+n*n),this.radius===0?(this.theta=0,this.phi=0):(this.theta=Math.atan2(t,n),this.phi=Math.acos(de(e/this.radius,-1,1))),this}clone(){return new this.constructor().copy(this)}}class CA{constructor(t=1,e=0,n=0){this.radius=t,this.theta=e,this.y=n}set(t,e,n){return this.radius=t,this.theta=e,this.y=n,this}copy(t){return this.radius=t.radius,this.theta=t.theta,this.y=t.y,this}setFromVector3(t){return this.setFromCartesianCoords(t.x,t.y,t.z)}setFromCartesianCoords(t,e,n){return this.radius=Math.sqrt(t*t+n*n),this.theta=Math.atan2(t,n),this.y=e,this}clone(){return new this.constructor().copy(this)}}class fg{constructor(t,e,n,i){fg.prototype.isMatrix2=!0,this.elements=[1,0,0,1],t!==void 0&&this.set(t,e,n,i)}identity(){return this.set(1,0,0,1),this}fromArray(t,e=0){for(let n=0;n<4;n++)this.elements[n]=t[n+e];return this}set(t,e,n,i){const o=this.elements;return o[0]=t,o[2]=e,o[1]=n,o[3]=i,this}}const R_=new dt;class RA{constructor(t=new dt(1/0,1/0),e=new dt(-1/0,-1/0)){this.isBox2=!0,this.min=t,this.max=e}set(t,e){return this.min.copy(t),this.max.copy(e),this}setFromPoints(t){this.makeEmpty();for(let e=0,n=t.length;e<n;e++)this.expandByPoint(t[e]);return this}setFromCenterAndSize(t,e){const n=R_.copy(e).multiplyScalar(.5);return this.min.copy(t).sub(n),this.max.copy(t).add(n),this}clone(){return new this.constructor().copy(this)}copy(t){return this.min.copy(t.min),this.max.copy(t.max),this}makeEmpty(){return this.min.x=this.min.y=1/0,this.max.x=this.max.y=-1/0,this}isEmpty(){return this.max.x<this.min.x||this.max.y<this.min.y}getCenter(t){return this.isEmpty()?t.set(0,0):t.addVectors(this.min,this.max).multiplyScalar(.5)}getSize(t){return this.isEmpty()?t.set(0,0):t.subVectors(this.max,this.min)}expandByPoint(t){return this.min.min(t),this.max.max(t),this}expandByVector(t){return this.min.sub(t),this.max.add(t),this}expandByScalar(t){return this.min.addScalar(-t),this.max.addScalar(t),this}containsPoint(t){return t.x>=this.min.x&&t.x<=this.max.x&&t.y>=this.min.y&&t.y<=this.max.y}containsBox(t){return this.min.x<=t.min.x&&t.max.x<=this.max.x&&this.min.y<=t.min.y&&t.max.y<=this.max.y}getParameter(t,e){return e.set((t.x-this.min.x)/(this.max.x-this.min.x),(t.y-this.min.y)/(this.max.y-this.min.y))}intersectsBox(t){return t.max.x>=this.min.x&&t.min.x<=this.max.x&&t.max.y>=this.min.y&&t.min.y<=this.max.y}clampPoint(t,e){return e.copy(t).clamp(this.min,this.max)}distanceToPoint(t){return this.clampPoint(t,R_).distanceTo(t)}intersect(t){return this.min.max(t.min),this.max.min(t.max),this.isEmpty()&&this.makeEmpty(),this}union(t){return this.min.min(t.min),this.max.max(t.max),this}translate(t){return this.min.add(t),this.max.add(t),this}equals(t){return t.min.equals(this.min)&&t.max.equals(this.max)}}const D_=new I,Ou=new I,po=new I,mo=new I,Up=new I,DA=new I,UA=new I;class NA{constructor(t=new I,e=new I){this.start=t,this.end=e}set(t,e){return this.start.copy(t),this.end.copy(e),this}copy(t){return this.start.copy(t.start),this.end.copy(t.end),this}getCenter(t){return t.addVectors(this.start,this.end).multiplyScalar(.5)}delta(t){return t.subVectors(this.end,this.start)}distanceSq(){return this.start.distanceToSquared(this.end)}distance(){return this.start.distanceTo(this.end)}at(t,e){return this.delta(e).multiplyScalar(t).add(this.start)}closestPointToPointParameter(t,e){D_.subVectors(t,this.start),Ou.subVectors(this.end,this.start);const n=Ou.dot(Ou);let o=Ou.dot(D_)/n;return e&&(o=de(o,0,1)),o}closestPointToPoint(t,e,n){const i=this.closestPointToPointParameter(t,e);return this.delta(n).multiplyScalar(i).add(this.start)}distanceSqToLine3(t,e=DA,n=UA){const i=10000000000000001e-32;let o,l;const c=this.start,h=t.start,f=this.end,p=t.end;po.subVectors(f,c),mo.subVectors(p,h),Up.subVectors(c,h);const m=po.dot(po),g=mo.dot(mo),v=mo.dot(Up);if(m<=i&&g<=i)return e.copy(c),n.copy(h),e.sub(n),e.dot(e);if(m<=i)o=0,l=v/g,l=de(l,0,1);else{const x=po.dot(Up);if(g<=i)l=0,o=de(-x/m,0,1);else{const b=po.dot(mo),S=m*g-b*b;S!==0?o=de((b*v-x*g)/S,0,1):o=0,l=(b*o+v)/g,l<0?(l=0,o=de(-x/m,0,1)):l>1&&(l=1,o=de((b-x)/m,0,1))}}return e.copy(c).add(po.multiplyScalar(o)),n.copy(h).add(mo.multiplyScalar(l)),e.sub(n),e.dot(e)}applyMatrix4(t){return this.start.applyMatrix4(t),this.end.applyMatrix4(t),this}equals(t){return t.start.equals(this.start)&&t.end.equals(this.end)}clone(){return new this.constructor().copy(this)}}const U_=new I;class LA extends Le{constructor(t,e){super(),this.light=t,this.matrixAutoUpdate=!1,this.color=e,this.type="SpotLightHelper";const n=new xe,i=[0,0,0,0,0,1,0,0,0,1,0,1,0,0,0,-1,0,1,0,0,0,0,1,1,0,0,0,0,-1,1];for(let l=0,c=1,h=32;l<h;l++,c++){const f=l/h*Math.PI*2,p=c/h*Math.PI*2;i.push(Math.cos(f),Math.sin(f),1,Math.cos(p),Math.sin(p),1)}n.setAttribute("position",new Jt(i,3));const o=new $n({fog:!1,toneMapped:!1});this.cone=new fs(n,o),this.add(this.cone),this.update()}dispose(){this.cone.geometry.dispose(),this.cone.material.dispose()}update(){this.light.updateWorldMatrix(!0,!1),this.light.target.updateWorldMatrix(!0,!1),this.parent?(this.parent.updateWorldMatrix(!0),this.matrix.copy(this.parent.matrixWorld).invert().multiply(this.light.matrixWorld)):this.matrix.copy(this.light.matrixWorld),this.matrixWorld.copy(this.light.matrixWorld);const t=this.light.distance?this.light.distance:1e3,e=t*Math.tan(this.light.angle);this.cone.scale.set(e,e,t),U_.setFromMatrixPosition(this.light.target.matrixWorld),this.cone.lookAt(U_),this.color!==void 0?this.cone.material.color.set(this.color):this.cone.material.color.copy(this.light.color)}}const ua=new I,Bu=new pe,Np=new pe;class PA extends fs{constructor(t){const e=TS(t),n=new xe,i=[],o=[];for(let f=0;f<e.length;f++){const p=e[f];p.parent&&p.parent.isBone&&(i.push(0,0,0),i.push(0,0,0),o.push(0,0,0),o.push(0,0,0))}n.setAttribute("position",new Jt(i,3)),n.setAttribute("color",new Jt(o,3));const l=new $n({vertexColors:!0,depthTest:!1,depthWrite:!1,toneMapped:!1,transparent:!0});super(n,l),this.isSkeletonHelper=!0,this.type="SkeletonHelper",this.root=t,this.bones=e,this.matrix=t.matrixWorld,this.matrixAutoUpdate=!1;const c=new kt(255),h=new kt(65280);this.setColors(c,h)}updateMatrixWorld(t){const e=this.bones,n=this.geometry,i=n.getAttribute("position");Np.copy(this.root.matrixWorld).invert();for(let o=0,l=0;o<e.length;o++){const c=e[o];c.parent&&c.parent.isBone&&(Bu.multiplyMatrices(Np,c.matrixWorld),ua.setFromMatrixPosition(Bu),i.setXYZ(l,ua.x,ua.y,ua.z),Bu.multiplyMatrices(Np,c.parent.matrixWorld),ua.setFromMatrixPosition(Bu),i.setXYZ(l+1,ua.x,ua.y,ua.z),l+=2)}n.getAttribute("position").needsUpdate=!0,super.updateMatrixWorld(t)}setColors(t,e){const i=this.geometry.getAttribute("color");for(let o=0;o<i.count;o+=2)i.setXYZ(o,t.r,t.g,t.b),i.setXYZ(o+1,e.r,e.g,e.b);return i.needsUpdate=!0,this}dispose(){this.geometry.dispose(),this.material.dispose()}}function TS(s){const t=[];s.isBone===!0&&t.push(s);for(let e=0;e<s.children.length;e++)t.push(...TS(s.children[e]));return t}class IA extends dn{constructor(t,e,n){const i=new dc(e,4,2),o=new xa({wireframe:!0,fog:!1,toneMapped:!1});super(i,o),this.light=t,this.color=n,this.type="PointLightHelper",this.matrix=this.light.matrixWorld,this.matrixAutoUpdate=!1,this.update()}dispose(){this.geometry.dispose(),this.material.dispose()}update(){this.light.updateWorldMatrix(!0,!1),this.color!==void 0?this.material.color.set(this.color):this.material.color.copy(this.light.color)}}const OA=new I,N_=new kt,L_=new kt;class BA extends Le{constructor(t,e,n){super(),this.light=t,this.matrix=t.matrixWorld,this.matrixAutoUpdate=!1,this.color=n,this.type="HemisphereLightHelper";const i=new fc(e);i.rotateY(Math.PI*.5),this.material=new xa({wireframe:!0,fog:!1,toneMapped:!1}),this.color===void 0&&(this.material.vertexColors=!0);const o=i.getAttribute("position"),l=new Float32Array(o.count*3);i.setAttribute("color",new Xe(l,3)),this.add(new dn(i,this.material)),this.update()}dispose(){this.children[0].geometry.dispose(),this.children[0].material.dispose()}update(){const t=this.children[0];if(this.color!==void 0)this.material.color.set(this.color);else{const e=t.geometry.getAttribute("color");N_.copy(this.light.color),L_.copy(this.light.groundColor);for(let n=0,i=e.count;n<i;n++){const o=n<i/2?N_:L_;e.setXYZ(n,o.r,o.g,o.b)}e.needsUpdate=!0}this.light.updateWorldMatrix(!0,!1),t.lookAt(OA.setFromMatrixPosition(this.light.matrixWorld).negate())}}class zA extends fs{constructor(t=10,e=10,n=4473924,i=8947848){n=new kt(n),i=new kt(i);const o=e/2,l=t/e,c=t/2,h=[],f=[];for(let g=0,v=0,x=-c;g<=e;g++,x+=l){h.push(-c,0,x,c,0,x),h.push(x,0,-c,x,0,c);const b=g===o?n:i;b.toArray(f,v),v+=3,b.toArray(f,v),v+=3,b.toArray(f,v),v+=3,b.toArray(f,v),v+=3}const p=new xe;p.setAttribute("position",new Jt(h,3)),p.setAttribute("color",new Jt(f,3));const m=new $n({vertexColors:!0,toneMapped:!1});super(p,m),this.type="GridHelper"}dispose(){this.geometry.dispose(),this.material.dispose()}}class FA extends fs{constructor(t=10,e=16,n=8,i=64,o=4473924,l=8947848){o=new kt(o),l=new kt(l);const c=[],h=[];if(e>1)for(let m=0;m<e;m++){const g=m/e*(Math.PI*2),v=Math.sin(g)*t,x=Math.cos(g)*t;c.push(0,0,0),c.push(v,0,x);const b=m&1?o:l;h.push(b.r,b.g,b.b),h.push(b.r,b.g,b.b)}for(let m=0;m<n;m++){const g=m&1?o:l,v=t-t/n*m;for(let x=0;x<i;x++){let b=x/i*(Math.PI*2),S=Math.sin(b)*v,_=Math.cos(b)*v;c.push(S,0,_),h.push(g.r,g.g,g.b),b=(x+1)/i*(Math.PI*2),S=Math.sin(b)*v,_=Math.cos(b)*v,c.push(S,0,_),h.push(g.r,g.g,g.b)}}const f=new xe;f.setAttribute("position",new Jt(c,3)),f.setAttribute("color",new Jt(h,3));const p=new $n({vertexColors:!0,toneMapped:!1});super(f,p),this.type="PolarGridHelper"}dispose(){this.geometry.dispose(),this.material.dispose()}}const P_=new I,zu=new I,I_=new I;class HA extends Le{constructor(t,e,n){super(),this.light=t,this.matrix=t.matrixWorld,this.matrixAutoUpdate=!1,this.color=n,this.type="DirectionalLightHelper",e===void 0&&(e=1);let i=new xe;i.setAttribute("position",new Jt([-e,e,0,e,e,0,e,-e,0,-e,-e,0,-e,e,0],3));const o=new $n({fog:!1,toneMapped:!1});this.lightPlane=new _a(i,o),this.add(this.lightPlane),i=new xe,i.setAttribute("position",new Jt([0,0,0,0,0,1],3)),this.targetLine=new _a(i,o),this.add(this.targetLine),this.update()}dispose(){this.lightPlane.geometry.dispose(),this.lightPlane.material.dispose(),this.targetLine.geometry.dispose(),this.targetLine.material.dispose()}update(){this.light.updateWorldMatrix(!0,!1),this.light.target.updateWorldMatrix(!0,!1),P_.setFromMatrixPosition(this.light.matrixWorld),zu.setFromMatrixPosition(this.light.target.matrixWorld),I_.subVectors(zu,P_),this.lightPlane.lookAt(zu),this.color!==void 0?(this.lightPlane.material.color.set(this.color),this.targetLine.material.color.set(this.color)):(this.lightPlane.material.color.copy(this.light.color),this.targetLine.material.color.copy(this.light.color)),this.targetLine.lookAt(zu),this.targetLine.scale.z=I_.length()}}const Fu=new I,rn=new sf;class VA extends fs{constructor(t){const e=new xe,n=new $n({color:16777215,vertexColors:!0,toneMapped:!1}),i=[],o=[],l={};c("n1","n2"),c("n2","n4"),c("n4","n3"),c("n3","n1"),c("f1","f2"),c("f2","f4"),c("f4","f3"),c("f3","f1"),c("n1","f1"),c("n2","f2"),c("n3","f3"),c("n4","f4"),c("p","n1"),c("p","n2"),c("p","n3"),c("p","n4"),c("u1","u2"),c("u2","u3"),c("u3","u1"),c("c","t"),c("p","c"),c("cn1","cn2"),c("cn3","cn4"),c("cf1","cf2"),c("cf3","cf4");function c(x,b){h(x),h(b)}function h(x){i.push(0,0,0),o.push(0,0,0),l[x]===void 0&&(l[x]=[]),l[x].push(i.length/3-1)}e.setAttribute("position",new Jt(i,3)),e.setAttribute("color",new Jt(o,3)),super(e,n),this.type="CameraHelper",this.camera=t,this.camera.updateProjectionMatrix&&this.camera.updateProjectionMatrix(),this.matrix=t.matrixWorld,this.matrixAutoUpdate=!1,this.pointMap=l,this.update();const f=new kt(16755200),p=new kt(16711680),m=new kt(43775),g=new kt(16777215),v=new kt(3355443);this.setColors(f,p,m,g,v)}setColors(t,e,n,i,o){const c=this.geometry.getAttribute("color");return c.setXYZ(0,t.r,t.g,t.b),c.setXYZ(1,t.r,t.g,t.b),c.setXYZ(2,t.r,t.g,t.b),c.setXYZ(3,t.r,t.g,t.b),c.setXYZ(4,t.r,t.g,t.b),c.setXYZ(5,t.r,t.g,t.b),c.setXYZ(6,t.r,t.g,t.b),c.setXYZ(7,t.r,t.g,t.b),c.setXYZ(8,t.r,t.g,t.b),c.setXYZ(9,t.r,t.g,t.b),c.setXYZ(10,t.r,t.g,t.b),c.setXYZ(11,t.r,t.g,t.b),c.setXYZ(12,t.r,t.g,t.b),c.setXYZ(13,t.r,t.g,t.b),c.setXYZ(14,t.r,t.g,t.b),c.setXYZ(15,t.r,t.g,t.b),c.setXYZ(16,t.r,t.g,t.b),c.setXYZ(17,t.r,t.g,t.b),c.setXYZ(18,t.r,t.g,t.b),c.setXYZ(19,t.r,t.g,t.b),c.setXYZ(20,t.r,t.g,t.b),c.setXYZ(21,t.r,t.g,t.b),c.setXYZ(22,t.r,t.g,t.b),c.setXYZ(23,t.r,t.g,t.b),c.setXYZ(24,e.r,e.g,e.b),c.setXYZ(25,e.r,e.g,e.b),c.setXYZ(26,e.r,e.g,e.b),c.setXYZ(27,e.r,e.g,e.b),c.setXYZ(28,e.r,e.g,e.b),c.setXYZ(29,e.r,e.g,e.b),c.setXYZ(30,e.r,e.g,e.b),c.setXYZ(31,e.r,e.g,e.b),c.setXYZ(32,n.r,n.g,n.b),c.setXYZ(33,n.r,n.g,n.b),c.setXYZ(34,n.r,n.g,n.b),c.setXYZ(35,n.r,n.g,n.b),c.setXYZ(36,n.r,n.g,n.b),c.setXYZ(37,n.r,n.g,n.b),c.setXYZ(38,i.r,i.g,i.b),c.setXYZ(39,i.r,i.g,i.b),c.setXYZ(40,o.r,o.g,o.b),c.setXYZ(41,o.r,o.g,o.b),c.setXYZ(42,o.r,o.g,o.b),c.setXYZ(43,o.r,o.g,o.b),c.setXYZ(44,o.r,o.g,o.b),c.setXYZ(45,o.r,o.g,o.b),c.setXYZ(46,o.r,o.g,o.b),c.setXYZ(47,o.r,o.g,o.b),c.setXYZ(48,o.r,o.g,o.b),c.setXYZ(49,o.r,o.g,o.b),c.needsUpdate=!0,this}update(){const t=this.geometry,e=this.pointMap,n=1,i=1;let o,l;if(rn.projectionMatrixInverse.copy(this.camera.projectionMatrixInverse),this.camera.reversedDepth===!0)o=1,l=0;else if(this.camera.coordinateSystem===Si)o=-1,l=1;else if(this.camera.coordinateSystem===Do)o=0,l=1;else throw new Error("THREE.CameraHelper.update(): Invalid coordinate system: "+this.camera.coordinateSystem);ln("c",e,t,rn,0,0,o),ln("t",e,t,rn,0,0,l),ln("n1",e,t,rn,-n,-i,o),ln("n2",e,t,rn,n,-i,o),ln("n3",e,t,rn,-n,i,o),ln("n4",e,t,rn,n,i,o),ln("f1",e,t,rn,-n,-i,l),ln("f2",e,t,rn,n,-i,l),ln("f3",e,t,rn,-n,i,l),ln("f4",e,t,rn,n,i,l),ln("u1",e,t,rn,n*.7,i*1.1,o),ln("u2",e,t,rn,-n*.7,i*1.1,o),ln("u3",e,t,rn,0,i*2,o),ln("cf1",e,t,rn,-n,0,l),ln("cf2",e,t,rn,n,0,l),ln("cf3",e,t,rn,0,-i,l),ln("cf4",e,t,rn,0,i,l),ln("cn1",e,t,rn,-n,0,o),ln("cn2",e,t,rn,n,0,o),ln("cn3",e,t,rn,0,-i,o),ln("cn4",e,t,rn,0,i,o),t.getAttribute("position").needsUpdate=!0}dispose(){this.geometry.dispose(),this.material.dispose()}}function ln(s,t,e,n,i,o,l){Fu.set(i,o,l).unproject(n);const c=t[s];if(c!==void 0){const h=e.getAttribute("position");for(let f=0,p=c.length;f<p;f++)h.setXYZ(c[f],Fu.x,Fu.y,Fu.z)}}const Hu=new Gn;class GA extends fs{constructor(t,e=16776960){const n=new Uint16Array([0,1,1,2,2,3,3,0,4,5,5,6,6,7,7,4,0,4,1,5,2,6,3,7]),i=new Float32Array(24),o=new xe;o.setIndex(new Xe(n,1)),o.setAttribute("position",new Xe(i,3)),super(o,new $n({color:e,toneMapped:!1})),this.object=t,this.type="BoxHelper",this.matrixAutoUpdate=!1,this.update()}update(){if(this.object!==void 0&&Hu.setFromObject(this.object),Hu.isEmpty())return;const t=Hu.min,e=Hu.max,n=this.geometry.attributes.position,i=n.array;i[0]=e.x,i[1]=e.y,i[2]=e.z,i[3]=t.x,i[4]=e.y,i[5]=e.z,i[6]=t.x,i[7]=t.y,i[8]=e.z,i[9]=e.x,i[10]=t.y,i[11]=e.z,i[12]=e.x,i[13]=e.y,i[14]=t.z,i[15]=t.x,i[16]=e.y,i[17]=t.z,i[18]=t.x,i[19]=t.y,i[20]=t.z,i[21]=e.x,i[22]=t.y,i[23]=t.z,n.needsUpdate=!0,this.geometry.computeBoundingSphere()}setFromObject(t){return this.object=t,this.update(),this}copy(t,e){return super.copy(t,e),this.object=t.object,this}dispose(){this.geometry.dispose(),this.material.dispose()}}class kA extends fs{constructor(t,e=16776960){const n=new Uint16Array([0,1,1,2,2,3,3,0,4,5,5,6,6,7,7,4,0,4,1,5,2,6,3,7]),i=[1,1,1,-1,1,1,-1,-1,1,1,-1,1,1,1,-1,-1,1,-1,-1,-1,-1,1,-1,-1],o=new xe;o.setIndex(new Xe(n,1)),o.setAttribute("position",new Jt(i,3)),super(o,new $n({color:e,toneMapped:!1})),this.box=t,this.type="Box3Helper",this.geometry.computeBoundingSphere()}updateMatrixWorld(t){const e=this.box;e.isEmpty()||(e.getCenter(this.position),e.getSize(this.scale),this.scale.multiplyScalar(.5),super.updateMatrixWorld(t))}dispose(){this.geometry.dispose(),this.material.dispose()}}class WA extends _a{constructor(t,e=1,n=16776960){const i=n,o=[1,-1,0,-1,1,0,-1,-1,0,1,1,0,-1,1,0,-1,-1,0,1,-1,0,1,1,0],l=new xe;l.setAttribute("position",new Jt(o,3)),l.computeBoundingSphere(),super(l,new $n({color:i,toneMapped:!1})),this.type="PlaneHelper",this.plane=t,this.size=e;const c=[1,1,0,-1,1,0,-1,-1,0,1,1,0,-1,-1,0,1,-1,0],h=new xe;h.setAttribute("position",new Jt(c,3)),h.computeBoundingSphere(),this.add(new dn(h,new xa({color:i,opacity:.2,transparent:!0,depthWrite:!1,toneMapped:!1})))}updateMatrixWorld(t){this.position.set(0,0,0),this.scale.set(.5*this.size,.5*this.size,1),this.lookAt(this.plane.normal),this.translateZ(-this.plane.constant),super.updateMatrixWorld(t)}dispose(){this.geometry.dispose(),this.material.dispose(),this.children[0].geometry.dispose(),this.children[0].material.dispose()}}const O_=new I;let Vu,Lp;class XA extends Le{constructor(t=new I(0,0,1),e=new I(0,0,0),n=1,i=16776960,o=n*.2,l=o*.2){super(),this.type="ArrowHelper",Vu===void 0&&(Vu=new xe,Vu.setAttribute("position",new Jt([0,0,0,0,1,0],3)),Lp=new hc(.5,1,5,1),Lp.translate(0,-.5,0)),this.position.copy(e),this.line=new _a(Vu,new $n({color:i,toneMapped:!1})),this.line.matrixAutoUpdate=!1,this.add(this.line),this.cone=new dn(Lp,new xa({color:i,toneMapped:!1})),this.cone.matrixAutoUpdate=!1,this.add(this.cone),this.setDirection(t),this.setLength(n,o,l)}setDirection(t){if(t.y>.99999)this.quaternion.set(0,0,0,1);else if(t.y<-.99999)this.quaternion.set(1,0,0,0);else{O_.set(t.z,0,-t.x).normalize();const e=Math.acos(t.y);this.quaternion.setFromAxisAngle(O_,e)}}setLength(t,e=t*.2,n=e*.2){this.line.scale.set(1,Math.max(1e-4,t-e),1),this.line.updateMatrix(),this.cone.scale.set(n,e,n),this.cone.position.y=t,this.cone.updateMatrix()}setColor(t){this.line.material.color.set(t),this.cone.material.color.set(t)}copy(t){return super.copy(t,!1),this.line.copy(t.line),this.cone.copy(t.cone),this}dispose(){this.line.geometry.dispose(),this.line.material.dispose(),this.cone.geometry.dispose(),this.cone.material.dispose()}}class qA extends fs{constructor(t=1){const e=[0,0,0,t,0,0,0,0,0,0,t,0,0,0,0,0,0,t],n=[1,0,0,1,.6,0,0,1,0,.6,1,0,0,0,1,0,.6,1],i=new xe;i.setAttribute("position",new Jt(e,3)),i.setAttribute("color",new Jt(n,3));const o=new $n({vertexColors:!0,toneMapped:!1});super(i,o),this.type="AxesHelper"}setColors(t,e,n){const i=new kt,o=this.geometry.attributes.color.array;return i.set(t),i.toArray(o,0),i.toArray(o,3),i.set(e),i.toArray(o,6),i.toArray(o,9),i.set(n),i.toArray(o,12),i.toArray(o,15),this.geometry.attributes.color.needsUpdate=!0,this}dispose(){this.geometry.dispose(),this.material.dispose()}}class YA{constructor(){this.type="ShapePath",this.color=new kt,this.subPaths=[],this.currentPath=null}moveTo(t,e){return this.currentPath=new Hh,this.subPaths.push(this.currentPath),this.currentPath.moveTo(t,e),this}lineTo(t,e){return this.currentPath.lineTo(t,e),this}quadraticCurveTo(t,e,n,i){return this.currentPath.quadraticCurveTo(t,e,n,i),this}bezierCurveTo(t,e,n,i,o,l){return this.currentPath.bezierCurveTo(t,e,n,i,o,l),this}splineThru(t){return this.currentPath.splineThru(t),this}toShapes(t){function e(_){const E=[];for(let A=0,T=_.length;A<T;A++){const U=_[A],D=new pr;D.curves=U.curves,E.push(D)}return E}function n(_,E){const A=E.length;let T=!1;for(let U=A-1,D=0;D<A;U=D++){let P=E[U],O=E[D],C=O.x-P.x,w=O.y-P.y;if(Math.abs(w)>Number.EPSILON){if(w<0&&(P=E[D],C=-C,O=E[U],w=-w),_.y<P.y||_.y>O.y)continue;if(_.y===P.y){if(_.x===P.x)return!0}else{const B=w*(_.x-P.x)-C*(_.y-P.y);if(B===0)return!0;if(B<0)continue;T=!T}}else{if(_.y!==P.y)continue;if(O.x<=_.x&&_.x<=P.x||P.x<=_.x&&_.x<=O.x)return!0}}return T}const i=ji.isClockWise,o=this.subPaths;if(o.length===0)return[];let l,c,h;const f=[];if(o.length===1)return c=o[0],h=new pr,h.curves=c.curves,f.push(h),f;let p=!i(o[0].getPoints());p=t?!p:p;const m=[],g=[];let v=[],x=0,b;g[x]=void 0,v[x]=[];for(let _=0,E=o.length;_<E;_++)c=o[_],b=c.getPoints(),l=i(b),l=t?!l:l,l?(!p&&g[x]&&x++,g[x]={s:new pr,p:b},g[x].s.curves=c.curves,p&&x++,v[x]=[]):v[x].push({h:c,p:b[0]});if(!g[0])return e(o);if(g.length>1){let _=!1,E=0;for(let A=0,T=g.length;A<T;A++)m[A]=[];for(let A=0,T=g.length;A<T;A++){const U=v[A];for(let D=0;D<U.length;D++){const P=U[D];let O=!0;for(let C=0;C<g.length;C++)n(P.p,g[C].p)&&(A!==C&&E++,O?(O=!1,m[C].push(P)):_=!0);O&&m[A].push(P)}}E>0&&_===!1&&(v=m)}let S;for(let _=0,E=g.length;_<E;_++){h=g[_].s,f.push(h),S=v[_];for(let A=0,T=S.length;A<T;A++)h.holes.push(S[A].h)}return f}}class jA extends hs{constructor(t,e=null){super(),this.object=t,this.domElement=e,this.enabled=!0,this.state=-1,this.keys={},this.mouseButtons={LEFT:null,MIDDLE:null,RIGHT:null},this.touches={ONE:null,TWO:null}}connect(t){if(t===void 0){console.warn("THREE.Controls: connect() now requires an element.");return}this.domElement!==null&&this.disconnect(),this.domElement=t}disconnect(){}dispose(){}update(){}}function ZA(s,t){const e=s.image&&s.image.width?s.image.width/s.image.height:1;return e>t?(s.repeat.x=1,s.repeat.y=e/t,s.offset.x=0,s.offset.y=(1-s.repeat.y)/2):(s.repeat.x=t/e,s.repeat.y=1,s.offset.x=(1-s.repeat.x)/2,s.offset.y=0),s}function KA(s,t){const e=s.image&&s.image.width?s.image.width/s.image.height:1;return e>t?(s.repeat.x=t/e,s.repeat.y=1,s.offset.x=(1-s.repeat.x)/2,s.offset.y=0):(s.repeat.x=1,s.repeat.y=e/t,s.offset.x=0,s.offset.y=(1-s.repeat.y)/2),s}function JA(s){return s.repeat.x=1,s.repeat.y=1,s.offset.x=0,s.offset.y=0,s}function vm(s,t,e,n){const i=QA(n);switch(e){case Nm:return s*t;case Jh:return s*t/i.components*i.byteLength;case lc:return s*t/i.components*i.byteLength;case Pm:return s*t*2/i.components*i.byteLength;case Qh:return s*t*2/i.components*i.byteLength;case Lm:return s*t*3/i.components*i.byteLength;case Hn:return s*t*4/i.components*i.byteLength;case $h:return s*t*4/i.components*i.byteLength;case Pl:case Il:return Math.floor((s+3)/4)*Math.floor((t+3)/4)*8;case Ol:case Bl:return Math.floor((s+3)/4)*Math.floor((t+3)/4)*16;case hh:case dh:return Math.max(s,16)*Math.max(t,8)/4;case uh:case fh:return Math.max(s,8)*Math.max(t,8)/2;case ph:case mh:return Math.floor((s+3)/4)*Math.floor((t+3)/4)*8;case gh:return Math.floor((s+3)/4)*Math.floor((t+3)/4)*16;case vh:return Math.floor((s+3)/4)*Math.floor((t+3)/4)*16;case _h:return Math.floor((s+4)/5)*Math.floor((t+3)/4)*16;case yh:return Math.floor((s+4)/5)*Math.floor((t+4)/5)*16;case xh:return Math.floor((s+5)/6)*Math.floor((t+4)/5)*16;case Sh:return Math.floor((s+5)/6)*Math.floor((t+5)/6)*16;case Mh:return Math.floor((s+7)/8)*Math.floor((t+4)/5)*16;case bh:return Math.floor((s+7)/8)*Math.floor((t+5)/6)*16;case Eh:return Math.floor((s+7)/8)*Math.floor((t+7)/8)*16;case Th:return Math.floor((s+9)/10)*Math.floor((t+4)/5)*16;case Ah:return Math.floor((s+9)/10)*Math.floor((t+5)/6)*16;case wh:return Math.floor((s+9)/10)*Math.floor((t+7)/8)*16;case Ch:return Math.floor((s+9)/10)*Math.floor((t+9)/10)*16;case Rh:return Math.floor((s+11)/12)*Math.floor((t+9)/10)*16;case Dh:return Math.floor((s+11)/12)*Math.floor((t+11)/12)*16;case zl:case Uh:case Nh:return Math.ceil(s/4)*Math.ceil(t/4)*16;case Im:case Lh:return Math.ceil(s/4)*Math.ceil(t/4)*8;case Ph:case Ih:return Math.ceil(s/4)*Math.ceil(t/4)*16}throw new Error(`Unable to determine texture byte length for ${e} format.`)}function QA(s){switch(s){case Ii:case Rm:return{byteLength:1,components:1};case Ao:case Dm:case zo:return{byteLength:2,components:1};case Zh:case Kh:return{byteLength:2,components:4};case Hs:case jh:case ri:return{byteLength:4,components:1};case Um:return{byteLength:4,components:3}}throw new Error(`Unknown texture type ${s}.`)}class $A{static contain(t,e){return ZA(t,e)}static cover(t,e){return KA(t,e)}static fill(t){return JA(t)}static getByteLength(t,e,n,i){return vm(t,e,n,i)}}typeof __THREE_DEVTOOLS__<"u"&&__THREE_DEVTOOLS__.dispatchEvent(new CustomEvent("register",{detail:{revision:Xh}}));typeof window<"u"&&(window.__THREE__?console.warn("WARNING: Multiple instances of Three.js being imported."):window.__THREE__=Xh);/**
 * @license
 * Copyright 2010-2025 Three.js Authors
 * SPDX-License-Identifier: MIT
 */function AS(){let s=null,t=!1,e=null,n=null;function i(o,l){e(o,l),n=s.requestAnimationFrame(i)}return{start:function(){t!==!0&&e!==null&&(n=s.requestAnimationFrame(i),t=!0)},stop:function(){s.cancelAnimationFrame(n),t=!1},setAnimationLoop:function(o){e=o},setContext:function(o){s=o}}}function tw(s){const t=new WeakMap;function e(c,h){const f=c.array,p=c.usage,m=f.byteLength,g=s.createBuffer();s.bindBuffer(h,g),s.bufferData(h,f,p),c.onUploadCallback();let v;if(f instanceof Float32Array)v=s.FLOAT;else if(typeof Float16Array<"u"&&f instanceof Float16Array)v=s.HALF_FLOAT;else if(f instanceof Uint16Array)c.isFloat16BufferAttribute?v=s.HALF_FLOAT:v=s.UNSIGNED_SHORT;else if(f instanceof Int16Array)v=s.SHORT;else if(f instanceof Uint32Array)v=s.UNSIGNED_INT;else if(f instanceof Int32Array)v=s.INT;else if(f instanceof Int8Array)v=s.BYTE;else if(f instanceof Uint8Array)v=s.UNSIGNED_BYTE;else if(f instanceof Uint8ClampedArray)v=s.UNSIGNED_BYTE;else throw new Error("THREE.WebGLAttributes: Unsupported buffer data format: "+f);return{buffer:g,type:v,bytesPerElement:f.BYTES_PER_ELEMENT,version:c.version,size:m}}function n(c,h,f){const p=h.array,m=h.updateRanges;if(s.bindBuffer(f,c),m.length===0)s.bufferSubData(f,0,p);else{m.sort((v,x)=>v.start-x.start);let g=0;for(let v=1;v<m.length;v++){const x=m[g],b=m[v];b.start<=x.start+x.count+1?x.count=Math.max(x.count,b.start+b.count-x.start):(++g,m[g]=b)}m.length=g+1;for(let v=0,x=m.length;v<x;v++){const b=m[v];s.bufferSubData(f,b.start*p.BYTES_PER_ELEMENT,p,b.start,b.count)}h.clearUpdateRanges()}h.onUploadCallback()}function i(c){return c.isInterleavedBufferAttribute&&(c=c.data),t.get(c)}function o(c){c.isInterleavedBufferAttribute&&(c=c.data);const h=t.get(c);h&&(s.deleteBuffer(h.buffer),t.delete(c))}function l(c,h){if(c.isInterleavedBufferAttribute&&(c=c.data),c.isGLBufferAttribute){const p=t.get(c);(!p||p.version<c.version)&&t.set(c,{buffer:c.buffer,type:c.type,bytesPerElement:c.elementSize,version:c.version});return}const f=t.get(c);if(f===void 0)t.set(c,e(c,h));else if(f.version<c.version){if(f.size!==c.array.byteLength)throw new Error("THREE.WebGLAttributes: The size of the buffer attribute's array buffer does not match the original size. Resizing buffer attributes is not supported.");n(f.buffer,c,h),f.version=c.version}}return{get:i,remove:o,update:l}}var ew=`#ifdef USE_ALPHAHASH
	if ( diffuseColor.a < getAlphaHashThreshold( vPosition ) ) discard;
#endif`,nw=`#ifdef USE_ALPHAHASH
	const float ALPHA_HASH_SCALE = 0.05;
	float hash2D( vec2 value ) {
		return fract( 1.0e4 * sin( 17.0 * value.x + 0.1 * value.y ) * ( 0.1 + abs( sin( 13.0 * value.y + value.x ) ) ) );
	}
	float hash3D( vec3 value ) {
		return hash2D( vec2( hash2D( value.xy ), value.z ) );
	}
	float getAlphaHashThreshold( vec3 position ) {
		float maxDeriv = max(
			length( dFdx( position.xyz ) ),
			length( dFdy( position.xyz ) )
		);
		float pixScale = 1.0 / ( ALPHA_HASH_SCALE * maxDeriv );
		vec2 pixScales = vec2(
			exp2( floor( log2( pixScale ) ) ),
			exp2( ceil( log2( pixScale ) ) )
		);
		vec2 alpha = vec2(
			hash3D( floor( pixScales.x * position.xyz ) ),
			hash3D( floor( pixScales.y * position.xyz ) )
		);
		float lerpFactor = fract( log2( pixScale ) );
		float x = ( 1.0 - lerpFactor ) * alpha.x + lerpFactor * alpha.y;
		float a = min( lerpFactor, 1.0 - lerpFactor );
		vec3 cases = vec3(
			x * x / ( 2.0 * a * ( 1.0 - a ) ),
			( x - 0.5 * a ) / ( 1.0 - a ),
			1.0 - ( ( 1.0 - x ) * ( 1.0 - x ) / ( 2.0 * a * ( 1.0 - a ) ) )
		);
		float threshold = ( x < ( 1.0 - a ) )
			? ( ( x < a ) ? cases.x : cases.y )
			: cases.z;
		return clamp( threshold , 1.0e-6, 1.0 );
	}
#endif`,iw=`#ifdef USE_ALPHAMAP
	diffuseColor.a *= texture2D( alphaMap, vAlphaMapUv ).g;
#endif`,sw=`#ifdef USE_ALPHAMAP
	uniform sampler2D alphaMap;
#endif`,aw=`#ifdef USE_ALPHATEST
	#ifdef ALPHA_TO_COVERAGE
	diffuseColor.a = smoothstep( alphaTest, alphaTest + fwidth( diffuseColor.a ), diffuseColor.a );
	if ( diffuseColor.a == 0.0 ) discard;
	#else
	if ( diffuseColor.a < alphaTest ) discard;
	#endif
#endif`,rw=`#ifdef USE_ALPHATEST
	uniform float alphaTest;
#endif`,ow=`#ifdef USE_AOMAP
	float ambientOcclusion = ( texture2D( aoMap, vAoMapUv ).r - 1.0 ) * aoMapIntensity + 1.0;
	reflectedLight.indirectDiffuse *= ambientOcclusion;
	#if defined( USE_CLEARCOAT ) 
		clearcoatSpecularIndirect *= ambientOcclusion;
	#endif
	#if defined( USE_SHEEN ) 
		sheenSpecularIndirect *= ambientOcclusion;
	#endif
	#if defined( USE_ENVMAP ) && defined( STANDARD )
		float dotNV = saturate( dot( geometryNormal, geometryViewDir ) );
		reflectedLight.indirectSpecular *= computeSpecularOcclusion( dotNV, ambientOcclusion, material.roughness );
	#endif
#endif`,lw=`#ifdef USE_AOMAP
	uniform sampler2D aoMap;
	uniform float aoMapIntensity;
#endif`,cw=`#ifdef USE_BATCHING
	#if ! defined( GL_ANGLE_multi_draw )
	#define gl_DrawID _gl_DrawID
	uniform int _gl_DrawID;
	#endif
	uniform highp sampler2D batchingTexture;
	uniform highp usampler2D batchingIdTexture;
	mat4 getBatchingMatrix( const in float i ) {
		int size = textureSize( batchingTexture, 0 ).x;
		int j = int( i ) * 4;
		int x = j % size;
		int y = j / size;
		vec4 v1 = texelFetch( batchingTexture, ivec2( x, y ), 0 );
		vec4 v2 = texelFetch( batchingTexture, ivec2( x + 1, y ), 0 );
		vec4 v3 = texelFetch( batchingTexture, ivec2( x + 2, y ), 0 );
		vec4 v4 = texelFetch( batchingTexture, ivec2( x + 3, y ), 0 );
		return mat4( v1, v2, v3, v4 );
	}
	float getIndirectIndex( const in int i ) {
		int size = textureSize( batchingIdTexture, 0 ).x;
		int x = i % size;
		int y = i / size;
		return float( texelFetch( batchingIdTexture, ivec2( x, y ), 0 ).r );
	}
#endif
#ifdef USE_BATCHING_COLOR
	uniform sampler2D batchingColorTexture;
	vec3 getBatchingColor( const in float i ) {
		int size = textureSize( batchingColorTexture, 0 ).x;
		int j = int( i );
		int x = j % size;
		int y = j / size;
		return texelFetch( batchingColorTexture, ivec2( x, y ), 0 ).rgb;
	}
#endif`,uw=`#ifdef USE_BATCHING
	mat4 batchingMatrix = getBatchingMatrix( getIndirectIndex( gl_DrawID ) );
#endif`,hw=`vec3 transformed = vec3( position );
#ifdef USE_ALPHAHASH
	vPosition = vec3( position );
#endif`,fw=`vec3 objectNormal = vec3( normal );
#ifdef USE_TANGENT
	vec3 objectTangent = vec3( tangent.xyz );
#endif`,dw=`float G_BlinnPhong_Implicit( ) {
	return 0.25;
}
float D_BlinnPhong( const in float shininess, const in float dotNH ) {
	return RECIPROCAL_PI * ( shininess * 0.5 + 1.0 ) * pow( dotNH, shininess );
}
vec3 BRDF_BlinnPhong( const in vec3 lightDir, const in vec3 viewDir, const in vec3 normal, const in vec3 specularColor, const in float shininess ) {
	vec3 halfDir = normalize( lightDir + viewDir );
	float dotNH = saturate( dot( normal, halfDir ) );
	float dotVH = saturate( dot( viewDir, halfDir ) );
	vec3 F = F_Schlick( specularColor, 1.0, dotVH );
	float G = G_BlinnPhong_Implicit( );
	float D = D_BlinnPhong( shininess, dotNH );
	return F * ( G * D );
} // validated`,pw=`#ifdef USE_IRIDESCENCE
	const mat3 XYZ_TO_REC709 = mat3(
		 3.2404542, -0.9692660,  0.0556434,
		-1.5371385,  1.8760108, -0.2040259,
		-0.4985314,  0.0415560,  1.0572252
	);
	vec3 Fresnel0ToIor( vec3 fresnel0 ) {
		vec3 sqrtF0 = sqrt( fresnel0 );
		return ( vec3( 1.0 ) + sqrtF0 ) / ( vec3( 1.0 ) - sqrtF0 );
	}
	vec3 IorToFresnel0( vec3 transmittedIor, float incidentIor ) {
		return pow2( ( transmittedIor - vec3( incidentIor ) ) / ( transmittedIor + vec3( incidentIor ) ) );
	}
	float IorToFresnel0( float transmittedIor, float incidentIor ) {
		return pow2( ( transmittedIor - incidentIor ) / ( transmittedIor + incidentIor ));
	}
	vec3 evalSensitivity( float OPD, vec3 shift ) {
		float phase = 2.0 * PI * OPD * 1.0e-9;
		vec3 val = vec3( 5.4856e-13, 4.4201e-13, 5.2481e-13 );
		vec3 pos = vec3( 1.6810e+06, 1.7953e+06, 2.2084e+06 );
		vec3 var = vec3( 4.3278e+09, 9.3046e+09, 6.6121e+09 );
		vec3 xyz = val * sqrt( 2.0 * PI * var ) * cos( pos * phase + shift ) * exp( - pow2( phase ) * var );
		xyz.x += 9.7470e-14 * sqrt( 2.0 * PI * 4.5282e+09 ) * cos( 2.2399e+06 * phase + shift[ 0 ] ) * exp( - 4.5282e+09 * pow2( phase ) );
		xyz /= 1.0685e-7;
		vec3 rgb = XYZ_TO_REC709 * xyz;
		return rgb;
	}
	vec3 evalIridescence( float outsideIOR, float eta2, float cosTheta1, float thinFilmThickness, vec3 baseF0 ) {
		vec3 I;
		float iridescenceIOR = mix( outsideIOR, eta2, smoothstep( 0.0, 0.03, thinFilmThickness ) );
		float sinTheta2Sq = pow2( outsideIOR / iridescenceIOR ) * ( 1.0 - pow2( cosTheta1 ) );
		float cosTheta2Sq = 1.0 - sinTheta2Sq;
		if ( cosTheta2Sq < 0.0 ) {
			return vec3( 1.0 );
		}
		float cosTheta2 = sqrt( cosTheta2Sq );
		float R0 = IorToFresnel0( iridescenceIOR, outsideIOR );
		float R12 = F_Schlick( R0, 1.0, cosTheta1 );
		float T121 = 1.0 - R12;
		float phi12 = 0.0;
		if ( iridescenceIOR < outsideIOR ) phi12 = PI;
		float phi21 = PI - phi12;
		vec3 baseIOR = Fresnel0ToIor( clamp( baseF0, 0.0, 0.9999 ) );		vec3 R1 = IorToFresnel0( baseIOR, iridescenceIOR );
		vec3 R23 = F_Schlick( R1, 1.0, cosTheta2 );
		vec3 phi23 = vec3( 0.0 );
		if ( baseIOR[ 0 ] < iridescenceIOR ) phi23[ 0 ] = PI;
		if ( baseIOR[ 1 ] < iridescenceIOR ) phi23[ 1 ] = PI;
		if ( baseIOR[ 2 ] < iridescenceIOR ) phi23[ 2 ] = PI;
		float OPD = 2.0 * iridescenceIOR * thinFilmThickness * cosTheta2;
		vec3 phi = vec3( phi21 ) + phi23;
		vec3 R123 = clamp( R12 * R23, 1e-5, 0.9999 );
		vec3 r123 = sqrt( R123 );
		vec3 Rs = pow2( T121 ) * R23 / ( vec3( 1.0 ) - R123 );
		vec3 C0 = R12 + Rs;
		I = C0;
		vec3 Cm = Rs - T121;
		for ( int m = 1; m <= 2; ++ m ) {
			Cm *= r123;
			vec3 Sm = 2.0 * evalSensitivity( float( m ) * OPD, float( m ) * phi );
			I += Cm * Sm;
		}
		return max( I, vec3( 0.0 ) );
	}
#endif`,mw=`#ifdef USE_BUMPMAP
	uniform sampler2D bumpMap;
	uniform float bumpScale;
	vec2 dHdxy_fwd() {
		vec2 dSTdx = dFdx( vBumpMapUv );
		vec2 dSTdy = dFdy( vBumpMapUv );
		float Hll = bumpScale * texture2D( bumpMap, vBumpMapUv ).x;
		float dBx = bumpScale * texture2D( bumpMap, vBumpMapUv + dSTdx ).x - Hll;
		float dBy = bumpScale * texture2D( bumpMap, vBumpMapUv + dSTdy ).x - Hll;
		return vec2( dBx, dBy );
	}
	vec3 perturbNormalArb( vec3 surf_pos, vec3 surf_norm, vec2 dHdxy, float faceDirection ) {
		vec3 vSigmaX = normalize( dFdx( surf_pos.xyz ) );
		vec3 vSigmaY = normalize( dFdy( surf_pos.xyz ) );
		vec3 vN = surf_norm;
		vec3 R1 = cross( vSigmaY, vN );
		vec3 R2 = cross( vN, vSigmaX );
		float fDet = dot( vSigmaX, R1 ) * faceDirection;
		vec3 vGrad = sign( fDet ) * ( dHdxy.x * R1 + dHdxy.y * R2 );
		return normalize( abs( fDet ) * surf_norm - vGrad );
	}
#endif`,gw=`#if NUM_CLIPPING_PLANES > 0
	vec4 plane;
	#ifdef ALPHA_TO_COVERAGE
		float distanceToPlane, distanceGradient;
		float clipOpacity = 1.0;
		#pragma unroll_loop_start
		for ( int i = 0; i < UNION_CLIPPING_PLANES; i ++ ) {
			plane = clippingPlanes[ i ];
			distanceToPlane = - dot( vClipPosition, plane.xyz ) + plane.w;
			distanceGradient = fwidth( distanceToPlane ) / 2.0;
			clipOpacity *= smoothstep( - distanceGradient, distanceGradient, distanceToPlane );
			if ( clipOpacity == 0.0 ) discard;
		}
		#pragma unroll_loop_end
		#if UNION_CLIPPING_PLANES < NUM_CLIPPING_PLANES
			float unionClipOpacity = 1.0;
			#pragma unroll_loop_start
			for ( int i = UNION_CLIPPING_PLANES; i < NUM_CLIPPING_PLANES; i ++ ) {
				plane = clippingPlanes[ i ];
				distanceToPlane = - dot( vClipPosition, plane.xyz ) + plane.w;
				distanceGradient = fwidth( distanceToPlane ) / 2.0;
				unionClipOpacity *= 1.0 - smoothstep( - distanceGradient, distanceGradient, distanceToPlane );
			}
			#pragma unroll_loop_end
			clipOpacity *= 1.0 - unionClipOpacity;
		#endif
		diffuseColor.a *= clipOpacity;
		if ( diffuseColor.a == 0.0 ) discard;
	#else
		#pragma unroll_loop_start
		for ( int i = 0; i < UNION_CLIPPING_PLANES; i ++ ) {
			plane = clippingPlanes[ i ];
			if ( dot( vClipPosition, plane.xyz ) > plane.w ) discard;
		}
		#pragma unroll_loop_end
		#if UNION_CLIPPING_PLANES < NUM_CLIPPING_PLANES
			bool clipped = true;
			#pragma unroll_loop_start
			for ( int i = UNION_CLIPPING_PLANES; i < NUM_CLIPPING_PLANES; i ++ ) {
				plane = clippingPlanes[ i ];
				clipped = ( dot( vClipPosition, plane.xyz ) > plane.w ) && clipped;
			}
			#pragma unroll_loop_end
			if ( clipped ) discard;
		#endif
	#endif
#endif`,vw=`#if NUM_CLIPPING_PLANES > 0
	varying vec3 vClipPosition;
	uniform vec4 clippingPlanes[ NUM_CLIPPING_PLANES ];
#endif`,_w=`#if NUM_CLIPPING_PLANES > 0
	varying vec3 vClipPosition;
#endif`,yw=`#if NUM_CLIPPING_PLANES > 0
	vClipPosition = - mvPosition.xyz;
#endif`,xw=`#if defined( USE_COLOR_ALPHA )
	diffuseColor *= vColor;
#elif defined( USE_COLOR )
	diffuseColor.rgb *= vColor;
#endif`,Sw=`#if defined( USE_COLOR_ALPHA )
	varying vec4 vColor;
#elif defined( USE_COLOR )
	varying vec3 vColor;
#endif`,Mw=`#if defined( USE_COLOR_ALPHA )
	varying vec4 vColor;
#elif defined( USE_COLOR ) || defined( USE_INSTANCING_COLOR ) || defined( USE_BATCHING_COLOR )
	varying vec3 vColor;
#endif`,bw=`#if defined( USE_COLOR_ALPHA )
	vColor = vec4( 1.0 );
#elif defined( USE_COLOR ) || defined( USE_INSTANCING_COLOR ) || defined( USE_BATCHING_COLOR )
	vColor = vec3( 1.0 );
#endif
#ifdef USE_COLOR
	vColor *= color;
#endif
#ifdef USE_INSTANCING_COLOR
	vColor.xyz *= instanceColor.xyz;
#endif
#ifdef USE_BATCHING_COLOR
	vec3 batchingColor = getBatchingColor( getIndirectIndex( gl_DrawID ) );
	vColor.xyz *= batchingColor.xyz;
#endif`,Ew=`#define PI 3.141592653589793
#define PI2 6.283185307179586
#define PI_HALF 1.5707963267948966
#define RECIPROCAL_PI 0.3183098861837907
#define RECIPROCAL_PI2 0.15915494309189535
#define EPSILON 1e-6
#ifndef saturate
#define saturate( a ) clamp( a, 0.0, 1.0 )
#endif
#define whiteComplement( a ) ( 1.0 - saturate( a ) )
float pow2( const in float x ) { return x*x; }
vec3 pow2( const in vec3 x ) { return x*x; }
float pow3( const in float x ) { return x*x*x; }
float pow4( const in float x ) { float x2 = x*x; return x2*x2; }
float max3( const in vec3 v ) { return max( max( v.x, v.y ), v.z ); }
float average( const in vec3 v ) { return dot( v, vec3( 0.3333333 ) ); }
highp float rand( const in vec2 uv ) {
	const highp float a = 12.9898, b = 78.233, c = 43758.5453;
	highp float dt = dot( uv.xy, vec2( a,b ) ), sn = mod( dt, PI );
	return fract( sin( sn ) * c );
}
#ifdef HIGH_PRECISION
	float precisionSafeLength( vec3 v ) { return length( v ); }
#else
	float precisionSafeLength( vec3 v ) {
		float maxComponent = max3( abs( v ) );
		return length( v / maxComponent ) * maxComponent;
	}
#endif
struct IncidentLight {
	vec3 color;
	vec3 direction;
	bool visible;
};
struct ReflectedLight {
	vec3 directDiffuse;
	vec3 directSpecular;
	vec3 indirectDiffuse;
	vec3 indirectSpecular;
};
#ifdef USE_ALPHAHASH
	varying vec3 vPosition;
#endif
vec3 transformDirection( in vec3 dir, in mat4 matrix ) {
	return normalize( ( matrix * vec4( dir, 0.0 ) ).xyz );
}
vec3 inverseTransformDirection( in vec3 dir, in mat4 matrix ) {
	return normalize( ( vec4( dir, 0.0 ) * matrix ).xyz );
}
mat3 transposeMat3( const in mat3 m ) {
	mat3 tmp;
	tmp[ 0 ] = vec3( m[ 0 ].x, m[ 1 ].x, m[ 2 ].x );
	tmp[ 1 ] = vec3( m[ 0 ].y, m[ 1 ].y, m[ 2 ].y );
	tmp[ 2 ] = vec3( m[ 0 ].z, m[ 1 ].z, m[ 2 ].z );
	return tmp;
}
bool isPerspectiveMatrix( mat4 m ) {
	return m[ 2 ][ 3 ] == - 1.0;
}
vec2 equirectUv( in vec3 dir ) {
	float u = atan( dir.z, dir.x ) * RECIPROCAL_PI2 + 0.5;
	float v = asin( clamp( dir.y, - 1.0, 1.0 ) ) * RECIPROCAL_PI + 0.5;
	return vec2( u, v );
}
vec3 BRDF_Lambert( const in vec3 diffuseColor ) {
	return RECIPROCAL_PI * diffuseColor;
}
vec3 F_Schlick( const in vec3 f0, const in float f90, const in float dotVH ) {
	float fresnel = exp2( ( - 5.55473 * dotVH - 6.98316 ) * dotVH );
	return f0 * ( 1.0 - fresnel ) + ( f90 * fresnel );
}
float F_Schlick( const in float f0, const in float f90, const in float dotVH ) {
	float fresnel = exp2( ( - 5.55473 * dotVH - 6.98316 ) * dotVH );
	return f0 * ( 1.0 - fresnel ) + ( f90 * fresnel );
} // validated`,Tw=`#ifdef ENVMAP_TYPE_CUBE_UV
	#define cubeUV_minMipLevel 4.0
	#define cubeUV_minTileSize 16.0
	float getFace( vec3 direction ) {
		vec3 absDirection = abs( direction );
		float face = - 1.0;
		if ( absDirection.x > absDirection.z ) {
			if ( absDirection.x > absDirection.y )
				face = direction.x > 0.0 ? 0.0 : 3.0;
			else
				face = direction.y > 0.0 ? 1.0 : 4.0;
		} else {
			if ( absDirection.z > absDirection.y )
				face = direction.z > 0.0 ? 2.0 : 5.0;
			else
				face = direction.y > 0.0 ? 1.0 : 4.0;
		}
		return face;
	}
	vec2 getUV( vec3 direction, float face ) {
		vec2 uv;
		if ( face == 0.0 ) {
			uv = vec2( direction.z, direction.y ) / abs( direction.x );
		} else if ( face == 1.0 ) {
			uv = vec2( - direction.x, - direction.z ) / abs( direction.y );
		} else if ( face == 2.0 ) {
			uv = vec2( - direction.x, direction.y ) / abs( direction.z );
		} else if ( face == 3.0 ) {
			uv = vec2( - direction.z, direction.y ) / abs( direction.x );
		} else if ( face == 4.0 ) {
			uv = vec2( - direction.x, direction.z ) / abs( direction.y );
		} else {
			uv = vec2( direction.x, direction.y ) / abs( direction.z );
		}
		return 0.5 * ( uv + 1.0 );
	}
	vec3 bilinearCubeUV( sampler2D envMap, vec3 direction, float mipInt ) {
		float face = getFace( direction );
		float filterInt = max( cubeUV_minMipLevel - mipInt, 0.0 );
		mipInt = max( mipInt, cubeUV_minMipLevel );
		float faceSize = exp2( mipInt );
		highp vec2 uv = getUV( direction, face ) * ( faceSize - 2.0 ) + 1.0;
		if ( face > 2.0 ) {
			uv.y += faceSize;
			face -= 3.0;
		}
		uv.x += face * faceSize;
		uv.x += filterInt * 3.0 * cubeUV_minTileSize;
		uv.y += 4.0 * ( exp2( CUBEUV_MAX_MIP ) - faceSize );
		uv.x *= CUBEUV_TEXEL_WIDTH;
		uv.y *= CUBEUV_TEXEL_HEIGHT;
		#ifdef texture2DGradEXT
			return texture2DGradEXT( envMap, uv, vec2( 0.0 ), vec2( 0.0 ) ).rgb;
		#else
			return texture2D( envMap, uv ).rgb;
		#endif
	}
	#define cubeUV_r0 1.0
	#define cubeUV_m0 - 2.0
	#define cubeUV_r1 0.8
	#define cubeUV_m1 - 1.0
	#define cubeUV_r4 0.4
	#define cubeUV_m4 2.0
	#define cubeUV_r5 0.305
	#define cubeUV_m5 3.0
	#define cubeUV_r6 0.21
	#define cubeUV_m6 4.0
	float roughnessToMip( float roughness ) {
		float mip = 0.0;
		if ( roughness >= cubeUV_r1 ) {
			mip = ( cubeUV_r0 - roughness ) * ( cubeUV_m1 - cubeUV_m0 ) / ( cubeUV_r0 - cubeUV_r1 ) + cubeUV_m0;
		} else if ( roughness >= cubeUV_r4 ) {
			mip = ( cubeUV_r1 - roughness ) * ( cubeUV_m4 - cubeUV_m1 ) / ( cubeUV_r1 - cubeUV_r4 ) + cubeUV_m1;
		} else if ( roughness >= cubeUV_r5 ) {
			mip = ( cubeUV_r4 - roughness ) * ( cubeUV_m5 - cubeUV_m4 ) / ( cubeUV_r4 - cubeUV_r5 ) + cubeUV_m4;
		} else if ( roughness >= cubeUV_r6 ) {
			mip = ( cubeUV_r5 - roughness ) * ( cubeUV_m6 - cubeUV_m5 ) / ( cubeUV_r5 - cubeUV_r6 ) + cubeUV_m5;
		} else {
			mip = - 2.0 * log2( 1.16 * roughness );		}
		return mip;
	}
	vec4 textureCubeUV( sampler2D envMap, vec3 sampleDir, float roughness ) {
		float mip = clamp( roughnessToMip( roughness ), cubeUV_m0, CUBEUV_MAX_MIP );
		float mipF = fract( mip );
		float mipInt = floor( mip );
		vec3 color0 = bilinearCubeUV( envMap, sampleDir, mipInt );
		if ( mipF == 0.0 ) {
			return vec4( color0, 1.0 );
		} else {
			vec3 color1 = bilinearCubeUV( envMap, sampleDir, mipInt + 1.0 );
			return vec4( mix( color0, color1, mipF ), 1.0 );
		}
	}
#endif`,Aw=`vec3 transformedNormal = objectNormal;
#ifdef USE_TANGENT
	vec3 transformedTangent = objectTangent;
#endif
#ifdef USE_BATCHING
	mat3 bm = mat3( batchingMatrix );
	transformedNormal /= vec3( dot( bm[ 0 ], bm[ 0 ] ), dot( bm[ 1 ], bm[ 1 ] ), dot( bm[ 2 ], bm[ 2 ] ) );
	transformedNormal = bm * transformedNormal;
	#ifdef USE_TANGENT
		transformedTangent = bm * transformedTangent;
	#endif
#endif
#ifdef USE_INSTANCING
	mat3 im = mat3( instanceMatrix );
	transformedNormal /= vec3( dot( im[ 0 ], im[ 0 ] ), dot( im[ 1 ], im[ 1 ] ), dot( im[ 2 ], im[ 2 ] ) );
	transformedNormal = im * transformedNormal;
	#ifdef USE_TANGENT
		transformedTangent = im * transformedTangent;
	#endif
#endif
transformedNormal = normalMatrix * transformedNormal;
#ifdef FLIP_SIDED
	transformedNormal = - transformedNormal;
#endif
#ifdef USE_TANGENT
	transformedTangent = ( modelViewMatrix * vec4( transformedTangent, 0.0 ) ).xyz;
	#ifdef FLIP_SIDED
		transformedTangent = - transformedTangent;
	#endif
#endif`,ww=`#ifdef USE_DISPLACEMENTMAP
	uniform sampler2D displacementMap;
	uniform float displacementScale;
	uniform float displacementBias;
#endif`,Cw=`#ifdef USE_DISPLACEMENTMAP
	transformed += normalize( objectNormal ) * ( texture2D( displacementMap, vDisplacementMapUv ).x * displacementScale + displacementBias );
#endif`,Rw=`#ifdef USE_EMISSIVEMAP
	vec4 emissiveColor = texture2D( emissiveMap, vEmissiveMapUv );
	#ifdef DECODE_VIDEO_TEXTURE_EMISSIVE
		emissiveColor = sRGBTransferEOTF( emissiveColor );
	#endif
	totalEmissiveRadiance *= emissiveColor.rgb;
#endif`,Dw=`#ifdef USE_EMISSIVEMAP
	uniform sampler2D emissiveMap;
#endif`,Uw="gl_FragColor = linearToOutputTexel( gl_FragColor );",Nw=`vec4 LinearTransferOETF( in vec4 value ) {
	return value;
}
vec4 sRGBTransferEOTF( in vec4 value ) {
	return vec4( mix( pow( value.rgb * 0.9478672986 + vec3( 0.0521327014 ), vec3( 2.4 ) ), value.rgb * 0.0773993808, vec3( lessThanEqual( value.rgb, vec3( 0.04045 ) ) ) ), value.a );
}
vec4 sRGBTransferOETF( in vec4 value ) {
	return vec4( mix( pow( value.rgb, vec3( 0.41666 ) ) * 1.055 - vec3( 0.055 ), value.rgb * 12.92, vec3( lessThanEqual( value.rgb, vec3( 0.0031308 ) ) ) ), value.a );
}`,Lw=`#ifdef USE_ENVMAP
	#ifdef ENV_WORLDPOS
		vec3 cameraToFrag;
		if ( isOrthographic ) {
			cameraToFrag = normalize( vec3( - viewMatrix[ 0 ][ 2 ], - viewMatrix[ 1 ][ 2 ], - viewMatrix[ 2 ][ 2 ] ) );
		} else {
			cameraToFrag = normalize( vWorldPosition - cameraPosition );
		}
		vec3 worldNormal = inverseTransformDirection( normal, viewMatrix );
		#ifdef ENVMAP_MODE_REFLECTION
			vec3 reflectVec = reflect( cameraToFrag, worldNormal );
		#else
			vec3 reflectVec = refract( cameraToFrag, worldNormal, refractionRatio );
		#endif
	#else
		vec3 reflectVec = vReflect;
	#endif
	#ifdef ENVMAP_TYPE_CUBE
		vec4 envColor = textureCube( envMap, envMapRotation * vec3( flipEnvMap * reflectVec.x, reflectVec.yz ) );
	#else
		vec4 envColor = vec4( 0.0 );
	#endif
	#ifdef ENVMAP_BLENDING_MULTIPLY
		outgoingLight = mix( outgoingLight, outgoingLight * envColor.xyz, specularStrength * reflectivity );
	#elif defined( ENVMAP_BLENDING_MIX )
		outgoingLight = mix( outgoingLight, envColor.xyz, specularStrength * reflectivity );
	#elif defined( ENVMAP_BLENDING_ADD )
		outgoingLight += envColor.xyz * specularStrength * reflectivity;
	#endif
#endif`,Pw=`#ifdef USE_ENVMAP
	uniform float envMapIntensity;
	uniform float flipEnvMap;
	uniform mat3 envMapRotation;
	#ifdef ENVMAP_TYPE_CUBE
		uniform samplerCube envMap;
	#else
		uniform sampler2D envMap;
	#endif
	
#endif`,Iw=`#ifdef USE_ENVMAP
	uniform float reflectivity;
	#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG ) || defined( LAMBERT )
		#define ENV_WORLDPOS
	#endif
	#ifdef ENV_WORLDPOS
		varying vec3 vWorldPosition;
		uniform float refractionRatio;
	#else
		varying vec3 vReflect;
	#endif
#endif`,Ow=`#ifdef USE_ENVMAP
	#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG ) || defined( LAMBERT )
		#define ENV_WORLDPOS
	#endif
	#ifdef ENV_WORLDPOS
		
		varying vec3 vWorldPosition;
	#else
		varying vec3 vReflect;
		uniform float refractionRatio;
	#endif
#endif`,Bw=`#ifdef USE_ENVMAP
	#ifdef ENV_WORLDPOS
		vWorldPosition = worldPosition.xyz;
	#else
		vec3 cameraToVertex;
		if ( isOrthographic ) {
			cameraToVertex = normalize( vec3( - viewMatrix[ 0 ][ 2 ], - viewMatrix[ 1 ][ 2 ], - viewMatrix[ 2 ][ 2 ] ) );
		} else {
			cameraToVertex = normalize( worldPosition.xyz - cameraPosition );
		}
		vec3 worldNormal = inverseTransformDirection( transformedNormal, viewMatrix );
		#ifdef ENVMAP_MODE_REFLECTION
			vReflect = reflect( cameraToVertex, worldNormal );
		#else
			vReflect = refract( cameraToVertex, worldNormal, refractionRatio );
		#endif
	#endif
#endif`,zw=`#ifdef USE_FOG
	vFogDepth = - mvPosition.z;
#endif`,Fw=`#ifdef USE_FOG
	varying float vFogDepth;
#endif`,Hw=`#ifdef USE_FOG
	#ifdef FOG_EXP2
		float fogFactor = 1.0 - exp( - fogDensity * fogDensity * vFogDepth * vFogDepth );
	#else
		float fogFactor = smoothstep( fogNear, fogFar, vFogDepth );
	#endif
	gl_FragColor.rgb = mix( gl_FragColor.rgb, fogColor, fogFactor );
#endif`,Vw=`#ifdef USE_FOG
	uniform vec3 fogColor;
	varying float vFogDepth;
	#ifdef FOG_EXP2
		uniform float fogDensity;
	#else
		uniform float fogNear;
		uniform float fogFar;
	#endif
#endif`,Gw=`#ifdef USE_GRADIENTMAP
	uniform sampler2D gradientMap;
#endif
vec3 getGradientIrradiance( vec3 normal, vec3 lightDirection ) {
	float dotNL = dot( normal, lightDirection );
	vec2 coord = vec2( dotNL * 0.5 + 0.5, 0.0 );
	#ifdef USE_GRADIENTMAP
		return vec3( texture2D( gradientMap, coord ).r );
	#else
		vec2 fw = fwidth( coord ) * 0.5;
		return mix( vec3( 0.7 ), vec3( 1.0 ), smoothstep( 0.7 - fw.x, 0.7 + fw.x, coord.x ) );
	#endif
}`,kw=`#ifdef USE_LIGHTMAP
	uniform sampler2D lightMap;
	uniform float lightMapIntensity;
#endif`,Ww=`LambertMaterial material;
material.diffuseColor = diffuseColor.rgb;
material.specularStrength = specularStrength;`,Xw=`varying vec3 vViewPosition;
struct LambertMaterial {
	vec3 diffuseColor;
	float specularStrength;
};
void RE_Direct_Lambert( const in IncidentLight directLight, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in LambertMaterial material, inout ReflectedLight reflectedLight ) {
	float dotNL = saturate( dot( geometryNormal, directLight.direction ) );
	vec3 irradiance = dotNL * directLight.color;
	reflectedLight.directDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
}
void RE_IndirectDiffuse_Lambert( const in vec3 irradiance, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in LambertMaterial material, inout ReflectedLight reflectedLight ) {
	reflectedLight.indirectDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
}
#define RE_Direct				RE_Direct_Lambert
#define RE_IndirectDiffuse		RE_IndirectDiffuse_Lambert`,qw=`uniform bool receiveShadow;
uniform vec3 ambientLightColor;
#if defined( USE_LIGHT_PROBES )
	uniform vec3 lightProbe[ 9 ];
#endif
vec3 shGetIrradianceAt( in vec3 normal, in vec3 shCoefficients[ 9 ] ) {
	float x = normal.x, y = normal.y, z = normal.z;
	vec3 result = shCoefficients[ 0 ] * 0.886227;
	result += shCoefficients[ 1 ] * 2.0 * 0.511664 * y;
	result += shCoefficients[ 2 ] * 2.0 * 0.511664 * z;
	result += shCoefficients[ 3 ] * 2.0 * 0.511664 * x;
	result += shCoefficients[ 4 ] * 2.0 * 0.429043 * x * y;
	result += shCoefficients[ 5 ] * 2.0 * 0.429043 * y * z;
	result += shCoefficients[ 6 ] * ( 0.743125 * z * z - 0.247708 );
	result += shCoefficients[ 7 ] * 2.0 * 0.429043 * x * z;
	result += shCoefficients[ 8 ] * 0.429043 * ( x * x - y * y );
	return result;
}
vec3 getLightProbeIrradiance( const in vec3 lightProbe[ 9 ], const in vec3 normal ) {
	vec3 worldNormal = inverseTransformDirection( normal, viewMatrix );
	vec3 irradiance = shGetIrradianceAt( worldNormal, lightProbe );
	return irradiance;
}
vec3 getAmbientLightIrradiance( const in vec3 ambientLightColor ) {
	vec3 irradiance = ambientLightColor;
	return irradiance;
}
float getDistanceAttenuation( const in float lightDistance, const in float cutoffDistance, const in float decayExponent ) {
	float distanceFalloff = 1.0 / max( pow( lightDistance, decayExponent ), 0.01 );
	if ( cutoffDistance > 0.0 ) {
		distanceFalloff *= pow2( saturate( 1.0 - pow4( lightDistance / cutoffDistance ) ) );
	}
	return distanceFalloff;
}
float getSpotAttenuation( const in float coneCosine, const in float penumbraCosine, const in float angleCosine ) {
	return smoothstep( coneCosine, penumbraCosine, angleCosine );
}
#if NUM_DIR_LIGHTS > 0
	struct DirectionalLight {
		vec3 direction;
		vec3 color;
	};
	uniform DirectionalLight directionalLights[ NUM_DIR_LIGHTS ];
	void getDirectionalLightInfo( const in DirectionalLight directionalLight, out IncidentLight light ) {
		light.color = directionalLight.color;
		light.direction = directionalLight.direction;
		light.visible = true;
	}
#endif
#if NUM_POINT_LIGHTS > 0
	struct PointLight {
		vec3 position;
		vec3 color;
		float distance;
		float decay;
	};
	uniform PointLight pointLights[ NUM_POINT_LIGHTS ];
	void getPointLightInfo( const in PointLight pointLight, const in vec3 geometryPosition, out IncidentLight light ) {
		vec3 lVector = pointLight.position - geometryPosition;
		light.direction = normalize( lVector );
		float lightDistance = length( lVector );
		light.color = pointLight.color;
		light.color *= getDistanceAttenuation( lightDistance, pointLight.distance, pointLight.decay );
		light.visible = ( light.color != vec3( 0.0 ) );
	}
#endif
#if NUM_SPOT_LIGHTS > 0
	struct SpotLight {
		vec3 position;
		vec3 direction;
		vec3 color;
		float distance;
		float decay;
		float coneCos;
		float penumbraCos;
	};
	uniform SpotLight spotLights[ NUM_SPOT_LIGHTS ];
	void getSpotLightInfo( const in SpotLight spotLight, const in vec3 geometryPosition, out IncidentLight light ) {
		vec3 lVector = spotLight.position - geometryPosition;
		light.direction = normalize( lVector );
		float angleCos = dot( light.direction, spotLight.direction );
		float spotAttenuation = getSpotAttenuation( spotLight.coneCos, spotLight.penumbraCos, angleCos );
		if ( spotAttenuation > 0.0 ) {
			float lightDistance = length( lVector );
			light.color = spotLight.color * spotAttenuation;
			light.color *= getDistanceAttenuation( lightDistance, spotLight.distance, spotLight.decay );
			light.visible = ( light.color != vec3( 0.0 ) );
		} else {
			light.color = vec3( 0.0 );
			light.visible = false;
		}
	}
#endif
#if NUM_RECT_AREA_LIGHTS > 0
	struct RectAreaLight {
		vec3 color;
		vec3 position;
		vec3 halfWidth;
		vec3 halfHeight;
	};
	uniform sampler2D ltc_1;	uniform sampler2D ltc_2;
	uniform RectAreaLight rectAreaLights[ NUM_RECT_AREA_LIGHTS ];
#endif
#if NUM_HEMI_LIGHTS > 0
	struct HemisphereLight {
		vec3 direction;
		vec3 skyColor;
		vec3 groundColor;
	};
	uniform HemisphereLight hemisphereLights[ NUM_HEMI_LIGHTS ];
	vec3 getHemisphereLightIrradiance( const in HemisphereLight hemiLight, const in vec3 normal ) {
		float dotNL = dot( normal, hemiLight.direction );
		float hemiDiffuseWeight = 0.5 * dotNL + 0.5;
		vec3 irradiance = mix( hemiLight.groundColor, hemiLight.skyColor, hemiDiffuseWeight );
		return irradiance;
	}
#endif`,Yw=`#ifdef USE_ENVMAP
	vec3 getIBLIrradiance( const in vec3 normal ) {
		#ifdef ENVMAP_TYPE_CUBE_UV
			vec3 worldNormal = inverseTransformDirection( normal, viewMatrix );
			vec4 envMapColor = textureCubeUV( envMap, envMapRotation * worldNormal, 1.0 );
			return PI * envMapColor.rgb * envMapIntensity;
		#else
			return vec3( 0.0 );
		#endif
	}
	vec3 getIBLRadiance( const in vec3 viewDir, const in vec3 normal, const in float roughness ) {
		#ifdef ENVMAP_TYPE_CUBE_UV
			vec3 reflectVec = reflect( - viewDir, normal );
			reflectVec = normalize( mix( reflectVec, normal, roughness * roughness) );
			reflectVec = inverseTransformDirection( reflectVec, viewMatrix );
			vec4 envMapColor = textureCubeUV( envMap, envMapRotation * reflectVec, roughness );
			return envMapColor.rgb * envMapIntensity;
		#else
			return vec3( 0.0 );
		#endif
	}
	#ifdef USE_ANISOTROPY
		vec3 getIBLAnisotropyRadiance( const in vec3 viewDir, const in vec3 normal, const in float roughness, const in vec3 bitangent, const in float anisotropy ) {
			#ifdef ENVMAP_TYPE_CUBE_UV
				vec3 bentNormal = cross( bitangent, viewDir );
				bentNormal = normalize( cross( bentNormal, bitangent ) );
				bentNormal = normalize( mix( bentNormal, normal, pow2( pow2( 1.0 - anisotropy * ( 1.0 - roughness ) ) ) ) );
				return getIBLRadiance( viewDir, bentNormal, roughness );
			#else
				return vec3( 0.0 );
			#endif
		}
	#endif
#endif`,jw=`ToonMaterial material;
material.diffuseColor = diffuseColor.rgb;`,Zw=`varying vec3 vViewPosition;
struct ToonMaterial {
	vec3 diffuseColor;
};
void RE_Direct_Toon( const in IncidentLight directLight, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in ToonMaterial material, inout ReflectedLight reflectedLight ) {
	vec3 irradiance = getGradientIrradiance( geometryNormal, directLight.direction ) * directLight.color;
	reflectedLight.directDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
}
void RE_IndirectDiffuse_Toon( const in vec3 irradiance, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in ToonMaterial material, inout ReflectedLight reflectedLight ) {
	reflectedLight.indirectDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
}
#define RE_Direct				RE_Direct_Toon
#define RE_IndirectDiffuse		RE_IndirectDiffuse_Toon`,Kw=`BlinnPhongMaterial material;
material.diffuseColor = diffuseColor.rgb;
material.specularColor = specular;
material.specularShininess = shininess;
material.specularStrength = specularStrength;`,Jw=`varying vec3 vViewPosition;
struct BlinnPhongMaterial {
	vec3 diffuseColor;
	vec3 specularColor;
	float specularShininess;
	float specularStrength;
};
void RE_Direct_BlinnPhong( const in IncidentLight directLight, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in BlinnPhongMaterial material, inout ReflectedLight reflectedLight ) {
	float dotNL = saturate( dot( geometryNormal, directLight.direction ) );
	vec3 irradiance = dotNL * directLight.color;
	reflectedLight.directDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
	reflectedLight.directSpecular += irradiance * BRDF_BlinnPhong( directLight.direction, geometryViewDir, geometryNormal, material.specularColor, material.specularShininess ) * material.specularStrength;
}
void RE_IndirectDiffuse_BlinnPhong( const in vec3 irradiance, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in BlinnPhongMaterial material, inout ReflectedLight reflectedLight ) {
	reflectedLight.indirectDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
}
#define RE_Direct				RE_Direct_BlinnPhong
#define RE_IndirectDiffuse		RE_IndirectDiffuse_BlinnPhong`,Qw=`PhysicalMaterial material;
material.diffuseColor = diffuseColor.rgb * ( 1.0 - metalnessFactor );
vec3 dxy = max( abs( dFdx( nonPerturbedNormal ) ), abs( dFdy( nonPerturbedNormal ) ) );
float geometryRoughness = max( max( dxy.x, dxy.y ), dxy.z );
material.roughness = max( roughnessFactor, 0.0525 );material.roughness += geometryRoughness;
material.roughness = min( material.roughness, 1.0 );
#ifdef IOR
	material.ior = ior;
	#ifdef USE_SPECULAR
		float specularIntensityFactor = specularIntensity;
		vec3 specularColorFactor = specularColor;
		#ifdef USE_SPECULAR_COLORMAP
			specularColorFactor *= texture2D( specularColorMap, vSpecularColorMapUv ).rgb;
		#endif
		#ifdef USE_SPECULAR_INTENSITYMAP
			specularIntensityFactor *= texture2D( specularIntensityMap, vSpecularIntensityMapUv ).a;
		#endif
		material.specularF90 = mix( specularIntensityFactor, 1.0, metalnessFactor );
	#else
		float specularIntensityFactor = 1.0;
		vec3 specularColorFactor = vec3( 1.0 );
		material.specularF90 = 1.0;
	#endif
	material.specularColor = mix( min( pow2( ( material.ior - 1.0 ) / ( material.ior + 1.0 ) ) * specularColorFactor, vec3( 1.0 ) ) * specularIntensityFactor, diffuseColor.rgb, metalnessFactor );
#else
	material.specularColor = mix( vec3( 0.04 ), diffuseColor.rgb, metalnessFactor );
	material.specularF90 = 1.0;
#endif
#ifdef USE_CLEARCOAT
	material.clearcoat = clearcoat;
	material.clearcoatRoughness = clearcoatRoughness;
	material.clearcoatF0 = vec3( 0.04 );
	material.clearcoatF90 = 1.0;
	#ifdef USE_CLEARCOATMAP
		material.clearcoat *= texture2D( clearcoatMap, vClearcoatMapUv ).x;
	#endif
	#ifdef USE_CLEARCOAT_ROUGHNESSMAP
		material.clearcoatRoughness *= texture2D( clearcoatRoughnessMap, vClearcoatRoughnessMapUv ).y;
	#endif
	material.clearcoat = saturate( material.clearcoat );	material.clearcoatRoughness = max( material.clearcoatRoughness, 0.0525 );
	material.clearcoatRoughness += geometryRoughness;
	material.clearcoatRoughness = min( material.clearcoatRoughness, 1.0 );
#endif
#ifdef USE_DISPERSION
	material.dispersion = dispersion;
#endif
#ifdef USE_IRIDESCENCE
	material.iridescence = iridescence;
	material.iridescenceIOR = iridescenceIOR;
	#ifdef USE_IRIDESCENCEMAP
		material.iridescence *= texture2D( iridescenceMap, vIridescenceMapUv ).r;
	#endif
	#ifdef USE_IRIDESCENCE_THICKNESSMAP
		material.iridescenceThickness = (iridescenceThicknessMaximum - iridescenceThicknessMinimum) * texture2D( iridescenceThicknessMap, vIridescenceThicknessMapUv ).g + iridescenceThicknessMinimum;
	#else
		material.iridescenceThickness = iridescenceThicknessMaximum;
	#endif
#endif
#ifdef USE_SHEEN
	material.sheenColor = sheenColor;
	#ifdef USE_SHEEN_COLORMAP
		material.sheenColor *= texture2D( sheenColorMap, vSheenColorMapUv ).rgb;
	#endif
	material.sheenRoughness = clamp( sheenRoughness, 0.07, 1.0 );
	#ifdef USE_SHEEN_ROUGHNESSMAP
		material.sheenRoughness *= texture2D( sheenRoughnessMap, vSheenRoughnessMapUv ).a;
	#endif
#endif
#ifdef USE_ANISOTROPY
	#ifdef USE_ANISOTROPYMAP
		mat2 anisotropyMat = mat2( anisotropyVector.x, anisotropyVector.y, - anisotropyVector.y, anisotropyVector.x );
		vec3 anisotropyPolar = texture2D( anisotropyMap, vAnisotropyMapUv ).rgb;
		vec2 anisotropyV = anisotropyMat * normalize( 2.0 * anisotropyPolar.rg - vec2( 1.0 ) ) * anisotropyPolar.b;
	#else
		vec2 anisotropyV = anisotropyVector;
	#endif
	material.anisotropy = length( anisotropyV );
	if( material.anisotropy == 0.0 ) {
		anisotropyV = vec2( 1.0, 0.0 );
	} else {
		anisotropyV /= material.anisotropy;
		material.anisotropy = saturate( material.anisotropy );
	}
	material.alphaT = mix( pow2( material.roughness ), 1.0, pow2( material.anisotropy ) );
	material.anisotropyT = tbn[ 0 ] * anisotropyV.x + tbn[ 1 ] * anisotropyV.y;
	material.anisotropyB = tbn[ 1 ] * anisotropyV.x - tbn[ 0 ] * anisotropyV.y;
#endif`,$w=`struct PhysicalMaterial {
	vec3 diffuseColor;
	float roughness;
	vec3 specularColor;
	float specularF90;
	float dispersion;
	#ifdef USE_CLEARCOAT
		float clearcoat;
		float clearcoatRoughness;
		vec3 clearcoatF0;
		float clearcoatF90;
	#endif
	#ifdef USE_IRIDESCENCE
		float iridescence;
		float iridescenceIOR;
		float iridescenceThickness;
		vec3 iridescenceFresnel;
		vec3 iridescenceF0;
	#endif
	#ifdef USE_SHEEN
		vec3 sheenColor;
		float sheenRoughness;
	#endif
	#ifdef IOR
		float ior;
	#endif
	#ifdef USE_TRANSMISSION
		float transmission;
		float transmissionAlpha;
		float thickness;
		float attenuationDistance;
		vec3 attenuationColor;
	#endif
	#ifdef USE_ANISOTROPY
		float anisotropy;
		float alphaT;
		vec3 anisotropyT;
		vec3 anisotropyB;
	#endif
};
vec3 clearcoatSpecularDirect = vec3( 0.0 );
vec3 clearcoatSpecularIndirect = vec3( 0.0 );
vec3 sheenSpecularDirect = vec3( 0.0 );
vec3 sheenSpecularIndirect = vec3(0.0 );
vec3 Schlick_to_F0( const in vec3 f, const in float f90, const in float dotVH ) {
    float x = clamp( 1.0 - dotVH, 0.0, 1.0 );
    float x2 = x * x;
    float x5 = clamp( x * x2 * x2, 0.0, 0.9999 );
    return ( f - vec3( f90 ) * x5 ) / ( 1.0 - x5 );
}
float V_GGX_SmithCorrelated( const in float alpha, const in float dotNL, const in float dotNV ) {
	float a2 = pow2( alpha );
	float gv = dotNL * sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNV ) );
	float gl = dotNV * sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNL ) );
	return 0.5 / max( gv + gl, EPSILON );
}
float D_GGX( const in float alpha, const in float dotNH ) {
	float a2 = pow2( alpha );
	float denom = pow2( dotNH ) * ( a2 - 1.0 ) + 1.0;
	return RECIPROCAL_PI * a2 / pow2( denom );
}
#ifdef USE_ANISOTROPY
	float V_GGX_SmithCorrelated_Anisotropic( const in float alphaT, const in float alphaB, const in float dotTV, const in float dotBV, const in float dotTL, const in float dotBL, const in float dotNV, const in float dotNL ) {
		float gv = dotNL * length( vec3( alphaT * dotTV, alphaB * dotBV, dotNV ) );
		float gl = dotNV * length( vec3( alphaT * dotTL, alphaB * dotBL, dotNL ) );
		float v = 0.5 / ( gv + gl );
		return saturate(v);
	}
	float D_GGX_Anisotropic( const in float alphaT, const in float alphaB, const in float dotNH, const in float dotTH, const in float dotBH ) {
		float a2 = alphaT * alphaB;
		highp vec3 v = vec3( alphaB * dotTH, alphaT * dotBH, a2 * dotNH );
		highp float v2 = dot( v, v );
		float w2 = a2 / v2;
		return RECIPROCAL_PI * a2 * pow2 ( w2 );
	}
#endif
#ifdef USE_CLEARCOAT
	vec3 BRDF_GGX_Clearcoat( const in vec3 lightDir, const in vec3 viewDir, const in vec3 normal, const in PhysicalMaterial material) {
		vec3 f0 = material.clearcoatF0;
		float f90 = material.clearcoatF90;
		float roughness = material.clearcoatRoughness;
		float alpha = pow2( roughness );
		vec3 halfDir = normalize( lightDir + viewDir );
		float dotNL = saturate( dot( normal, lightDir ) );
		float dotNV = saturate( dot( normal, viewDir ) );
		float dotNH = saturate( dot( normal, halfDir ) );
		float dotVH = saturate( dot( viewDir, halfDir ) );
		vec3 F = F_Schlick( f0, f90, dotVH );
		float V = V_GGX_SmithCorrelated( alpha, dotNL, dotNV );
		float D = D_GGX( alpha, dotNH );
		return F * ( V * D );
	}
#endif
vec3 BRDF_GGX( const in vec3 lightDir, const in vec3 viewDir, const in vec3 normal, const in PhysicalMaterial material ) {
	vec3 f0 = material.specularColor;
	float f90 = material.specularF90;
	float roughness = material.roughness;
	float alpha = pow2( roughness );
	vec3 halfDir = normalize( lightDir + viewDir );
	float dotNL = saturate( dot( normal, lightDir ) );
	float dotNV = saturate( dot( normal, viewDir ) );
	float dotNH = saturate( dot( normal, halfDir ) );
	float dotVH = saturate( dot( viewDir, halfDir ) );
	vec3 F = F_Schlick( f0, f90, dotVH );
	#ifdef USE_IRIDESCENCE
		F = mix( F, material.iridescenceFresnel, material.iridescence );
	#endif
	#ifdef USE_ANISOTROPY
		float dotTL = dot( material.anisotropyT, lightDir );
		float dotTV = dot( material.anisotropyT, viewDir );
		float dotTH = dot( material.anisotropyT, halfDir );
		float dotBL = dot( material.anisotropyB, lightDir );
		float dotBV = dot( material.anisotropyB, viewDir );
		float dotBH = dot( material.anisotropyB, halfDir );
		float V = V_GGX_SmithCorrelated_Anisotropic( material.alphaT, alpha, dotTV, dotBV, dotTL, dotBL, dotNV, dotNL );
		float D = D_GGX_Anisotropic( material.alphaT, alpha, dotNH, dotTH, dotBH );
	#else
		float V = V_GGX_SmithCorrelated( alpha, dotNL, dotNV );
		float D = D_GGX( alpha, dotNH );
	#endif
	return F * ( V * D );
}
vec2 LTC_Uv( const in vec3 N, const in vec3 V, const in float roughness ) {
	const float LUT_SIZE = 64.0;
	const float LUT_SCALE = ( LUT_SIZE - 1.0 ) / LUT_SIZE;
	const float LUT_BIAS = 0.5 / LUT_SIZE;
	float dotNV = saturate( dot( N, V ) );
	vec2 uv = vec2( roughness, sqrt( 1.0 - dotNV ) );
	uv = uv * LUT_SCALE + LUT_BIAS;
	return uv;
}
float LTC_ClippedSphereFormFactor( const in vec3 f ) {
	float l = length( f );
	return max( ( l * l + f.z ) / ( l + 1.0 ), 0.0 );
}
vec3 LTC_EdgeVectorFormFactor( const in vec3 v1, const in vec3 v2 ) {
	float x = dot( v1, v2 );
	float y = abs( x );
	float a = 0.8543985 + ( 0.4965155 + 0.0145206 * y ) * y;
	float b = 3.4175940 + ( 4.1616724 + y ) * y;
	float v = a / b;
	float theta_sintheta = ( x > 0.0 ) ? v : 0.5 * inversesqrt( max( 1.0 - x * x, 1e-7 ) ) - v;
	return cross( v1, v2 ) * theta_sintheta;
}
vec3 LTC_Evaluate( const in vec3 N, const in vec3 V, const in vec3 P, const in mat3 mInv, const in vec3 rectCoords[ 4 ] ) {
	vec3 v1 = rectCoords[ 1 ] - rectCoords[ 0 ];
	vec3 v2 = rectCoords[ 3 ] - rectCoords[ 0 ];
	vec3 lightNormal = cross( v1, v2 );
	if( dot( lightNormal, P - rectCoords[ 0 ] ) < 0.0 ) return vec3( 0.0 );
	vec3 T1, T2;
	T1 = normalize( V - N * dot( V, N ) );
	T2 = - cross( N, T1 );
	mat3 mat = mInv * transposeMat3( mat3( T1, T2, N ) );
	vec3 coords[ 4 ];
	coords[ 0 ] = mat * ( rectCoords[ 0 ] - P );
	coords[ 1 ] = mat * ( rectCoords[ 1 ] - P );
	coords[ 2 ] = mat * ( rectCoords[ 2 ] - P );
	coords[ 3 ] = mat * ( rectCoords[ 3 ] - P );
	coords[ 0 ] = normalize( coords[ 0 ] );
	coords[ 1 ] = normalize( coords[ 1 ] );
	coords[ 2 ] = normalize( coords[ 2 ] );
	coords[ 3 ] = normalize( coords[ 3 ] );
	vec3 vectorFormFactor = vec3( 0.0 );
	vectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 0 ], coords[ 1 ] );
	vectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 1 ], coords[ 2 ] );
	vectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 2 ], coords[ 3 ] );
	vectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 3 ], coords[ 0 ] );
	float result = LTC_ClippedSphereFormFactor( vectorFormFactor );
	return vec3( result );
}
#if defined( USE_SHEEN )
float D_Charlie( float roughness, float dotNH ) {
	float alpha = pow2( roughness );
	float invAlpha = 1.0 / alpha;
	float cos2h = dotNH * dotNH;
	float sin2h = max( 1.0 - cos2h, 0.0078125 );
	return ( 2.0 + invAlpha ) * pow( sin2h, invAlpha * 0.5 ) / ( 2.0 * PI );
}
float V_Neubelt( float dotNV, float dotNL ) {
	return saturate( 1.0 / ( 4.0 * ( dotNL + dotNV - dotNL * dotNV ) ) );
}
vec3 BRDF_Sheen( const in vec3 lightDir, const in vec3 viewDir, const in vec3 normal, vec3 sheenColor, const in float sheenRoughness ) {
	vec3 halfDir = normalize( lightDir + viewDir );
	float dotNL = saturate( dot( normal, lightDir ) );
	float dotNV = saturate( dot( normal, viewDir ) );
	float dotNH = saturate( dot( normal, halfDir ) );
	float D = D_Charlie( sheenRoughness, dotNH );
	float V = V_Neubelt( dotNV, dotNL );
	return sheenColor * ( D * V );
}
#endif
float IBLSheenBRDF( const in vec3 normal, const in vec3 viewDir, const in float roughness ) {
	float dotNV = saturate( dot( normal, viewDir ) );
	float r2 = roughness * roughness;
	float a = roughness < 0.25 ? -339.2 * r2 + 161.4 * roughness - 25.9 : -8.48 * r2 + 14.3 * roughness - 9.95;
	float b = roughness < 0.25 ? 44.0 * r2 - 23.7 * roughness + 3.26 : 1.97 * r2 - 3.27 * roughness + 0.72;
	float DG = exp( a * dotNV + b ) + ( roughness < 0.25 ? 0.0 : 0.1 * ( roughness - 0.25 ) );
	return saturate( DG * RECIPROCAL_PI );
}
vec2 DFGApprox( const in vec3 normal, const in vec3 viewDir, const in float roughness ) {
	float dotNV = saturate( dot( normal, viewDir ) );
	const vec4 c0 = vec4( - 1, - 0.0275, - 0.572, 0.022 );
	const vec4 c1 = vec4( 1, 0.0425, 1.04, - 0.04 );
	vec4 r = roughness * c0 + c1;
	float a004 = min( r.x * r.x, exp2( - 9.28 * dotNV ) ) * r.x + r.y;
	vec2 fab = vec2( - 1.04, 1.04 ) * a004 + r.zw;
	return fab;
}
vec3 EnvironmentBRDF( const in vec3 normal, const in vec3 viewDir, const in vec3 specularColor, const in float specularF90, const in float roughness ) {
	vec2 fab = DFGApprox( normal, viewDir, roughness );
	return specularColor * fab.x + specularF90 * fab.y;
}
#ifdef USE_IRIDESCENCE
void computeMultiscatteringIridescence( const in vec3 normal, const in vec3 viewDir, const in vec3 specularColor, const in float specularF90, const in float iridescence, const in vec3 iridescenceF0, const in float roughness, inout vec3 singleScatter, inout vec3 multiScatter ) {
#else
void computeMultiscattering( const in vec3 normal, const in vec3 viewDir, const in vec3 specularColor, const in float specularF90, const in float roughness, inout vec3 singleScatter, inout vec3 multiScatter ) {
#endif
	vec2 fab = DFGApprox( normal, viewDir, roughness );
	#ifdef USE_IRIDESCENCE
		vec3 Fr = mix( specularColor, iridescenceF0, iridescence );
	#else
		vec3 Fr = specularColor;
	#endif
	vec3 FssEss = Fr * fab.x + specularF90 * fab.y;
	float Ess = fab.x + fab.y;
	float Ems = 1.0 - Ess;
	vec3 Favg = Fr + ( 1.0 - Fr ) * 0.047619;	vec3 Fms = FssEss * Favg / ( 1.0 - Ems * Favg );
	singleScatter += FssEss;
	multiScatter += Fms * Ems;
}
#if NUM_RECT_AREA_LIGHTS > 0
	void RE_Direct_RectArea_Physical( const in RectAreaLight rectAreaLight, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {
		vec3 normal = geometryNormal;
		vec3 viewDir = geometryViewDir;
		vec3 position = geometryPosition;
		vec3 lightPos = rectAreaLight.position;
		vec3 halfWidth = rectAreaLight.halfWidth;
		vec3 halfHeight = rectAreaLight.halfHeight;
		vec3 lightColor = rectAreaLight.color;
		float roughness = material.roughness;
		vec3 rectCoords[ 4 ];
		rectCoords[ 0 ] = lightPos + halfWidth - halfHeight;		rectCoords[ 1 ] = lightPos - halfWidth - halfHeight;
		rectCoords[ 2 ] = lightPos - halfWidth + halfHeight;
		rectCoords[ 3 ] = lightPos + halfWidth + halfHeight;
		vec2 uv = LTC_Uv( normal, viewDir, roughness );
		vec4 t1 = texture2D( ltc_1, uv );
		vec4 t2 = texture2D( ltc_2, uv );
		mat3 mInv = mat3(
			vec3( t1.x, 0, t1.y ),
			vec3(    0, 1,    0 ),
			vec3( t1.z, 0, t1.w )
		);
		vec3 fresnel = ( material.specularColor * t2.x + ( vec3( 1.0 ) - material.specularColor ) * t2.y );
		reflectedLight.directSpecular += lightColor * fresnel * LTC_Evaluate( normal, viewDir, position, mInv, rectCoords );
		reflectedLight.directDiffuse += lightColor * material.diffuseColor * LTC_Evaluate( normal, viewDir, position, mat3( 1.0 ), rectCoords );
	}
#endif
void RE_Direct_Physical( const in IncidentLight directLight, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {
	float dotNL = saturate( dot( geometryNormal, directLight.direction ) );
	vec3 irradiance = dotNL * directLight.color;
	#ifdef USE_CLEARCOAT
		float dotNLcc = saturate( dot( geometryClearcoatNormal, directLight.direction ) );
		vec3 ccIrradiance = dotNLcc * directLight.color;
		clearcoatSpecularDirect += ccIrradiance * BRDF_GGX_Clearcoat( directLight.direction, geometryViewDir, geometryClearcoatNormal, material );
	#endif
	#ifdef USE_SHEEN
		sheenSpecularDirect += irradiance * BRDF_Sheen( directLight.direction, geometryViewDir, geometryNormal, material.sheenColor, material.sheenRoughness );
	#endif
	reflectedLight.directSpecular += irradiance * BRDF_GGX( directLight.direction, geometryViewDir, geometryNormal, material );
	reflectedLight.directDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
}
void RE_IndirectDiffuse_Physical( const in vec3 irradiance, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {
	reflectedLight.indirectDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
}
void RE_IndirectSpecular_Physical( const in vec3 radiance, const in vec3 irradiance, const in vec3 clearcoatRadiance, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in PhysicalMaterial material, inout ReflectedLight reflectedLight) {
	#ifdef USE_CLEARCOAT
		clearcoatSpecularIndirect += clearcoatRadiance * EnvironmentBRDF( geometryClearcoatNormal, geometryViewDir, material.clearcoatF0, material.clearcoatF90, material.clearcoatRoughness );
	#endif
	#ifdef USE_SHEEN
		sheenSpecularIndirect += irradiance * material.sheenColor * IBLSheenBRDF( geometryNormal, geometryViewDir, material.sheenRoughness );
	#endif
	vec3 singleScattering = vec3( 0.0 );
	vec3 multiScattering = vec3( 0.0 );
	vec3 cosineWeightedIrradiance = irradiance * RECIPROCAL_PI;
	#ifdef USE_IRIDESCENCE
		computeMultiscatteringIridescence( geometryNormal, geometryViewDir, material.specularColor, material.specularF90, material.iridescence, material.iridescenceFresnel, material.roughness, singleScattering, multiScattering );
	#else
		computeMultiscattering( geometryNormal, geometryViewDir, material.specularColor, material.specularF90, material.roughness, singleScattering, multiScattering );
	#endif
	vec3 totalScattering = singleScattering + multiScattering;
	vec3 diffuse = material.diffuseColor * ( 1.0 - max( max( totalScattering.r, totalScattering.g ), totalScattering.b ) );
	reflectedLight.indirectSpecular += radiance * singleScattering;
	reflectedLight.indirectSpecular += multiScattering * cosineWeightedIrradiance;
	reflectedLight.indirectDiffuse += diffuse * cosineWeightedIrradiance;
}
#define RE_Direct				RE_Direct_Physical
#define RE_Direct_RectArea		RE_Direct_RectArea_Physical
#define RE_IndirectDiffuse		RE_IndirectDiffuse_Physical
#define RE_IndirectSpecular		RE_IndirectSpecular_Physical
float computeSpecularOcclusion( const in float dotNV, const in float ambientOcclusion, const in float roughness ) {
	return saturate( pow( dotNV + ambientOcclusion, exp2( - 16.0 * roughness - 1.0 ) ) - 1.0 + ambientOcclusion );
}`,tC=`
vec3 geometryPosition = - vViewPosition;
vec3 geometryNormal = normal;
vec3 geometryViewDir = ( isOrthographic ) ? vec3( 0, 0, 1 ) : normalize( vViewPosition );
vec3 geometryClearcoatNormal = vec3( 0.0 );
#ifdef USE_CLEARCOAT
	geometryClearcoatNormal = clearcoatNormal;
#endif
#ifdef USE_IRIDESCENCE
	float dotNVi = saturate( dot( normal, geometryViewDir ) );
	if ( material.iridescenceThickness == 0.0 ) {
		material.iridescence = 0.0;
	} else {
		material.iridescence = saturate( material.iridescence );
	}
	if ( material.iridescence > 0.0 ) {
		material.iridescenceFresnel = evalIridescence( 1.0, material.iridescenceIOR, dotNVi, material.iridescenceThickness, material.specularColor );
		material.iridescenceF0 = Schlick_to_F0( material.iridescenceFresnel, 1.0, dotNVi );
	}
#endif
IncidentLight directLight;
#if ( NUM_POINT_LIGHTS > 0 ) && defined( RE_Direct )
	PointLight pointLight;
	#if defined( USE_SHADOWMAP ) && NUM_POINT_LIGHT_SHADOWS > 0
	PointLightShadow pointLightShadow;
	#endif
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_POINT_LIGHTS; i ++ ) {
		pointLight = pointLights[ i ];
		getPointLightInfo( pointLight, geometryPosition, directLight );
		#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_POINT_LIGHT_SHADOWS )
		pointLightShadow = pointLightShadows[ i ];
		directLight.color *= ( directLight.visible && receiveShadow ) ? getPointShadow( pointShadowMap[ i ], pointLightShadow.shadowMapSize, pointLightShadow.shadowIntensity, pointLightShadow.shadowBias, pointLightShadow.shadowRadius, vPointShadowCoord[ i ], pointLightShadow.shadowCameraNear, pointLightShadow.shadowCameraFar ) : 1.0;
		#endif
		RE_Direct( directLight, geometryPosition, geometryNormal, geometryViewDir, geometryClearcoatNormal, material, reflectedLight );
	}
	#pragma unroll_loop_end
#endif
#if ( NUM_SPOT_LIGHTS > 0 ) && defined( RE_Direct )
	SpotLight spotLight;
	vec4 spotColor;
	vec3 spotLightCoord;
	bool inSpotLightMap;
	#if defined( USE_SHADOWMAP ) && NUM_SPOT_LIGHT_SHADOWS > 0
	SpotLightShadow spotLightShadow;
	#endif
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_SPOT_LIGHTS; i ++ ) {
		spotLight = spotLights[ i ];
		getSpotLightInfo( spotLight, geometryPosition, directLight );
		#if ( UNROLLED_LOOP_INDEX < NUM_SPOT_LIGHT_SHADOWS_WITH_MAPS )
		#define SPOT_LIGHT_MAP_INDEX UNROLLED_LOOP_INDEX
		#elif ( UNROLLED_LOOP_INDEX < NUM_SPOT_LIGHT_SHADOWS )
		#define SPOT_LIGHT_MAP_INDEX NUM_SPOT_LIGHT_MAPS
		#else
		#define SPOT_LIGHT_MAP_INDEX ( UNROLLED_LOOP_INDEX - NUM_SPOT_LIGHT_SHADOWS + NUM_SPOT_LIGHT_SHADOWS_WITH_MAPS )
		#endif
		#if ( SPOT_LIGHT_MAP_INDEX < NUM_SPOT_LIGHT_MAPS )
			spotLightCoord = vSpotLightCoord[ i ].xyz / vSpotLightCoord[ i ].w;
			inSpotLightMap = all( lessThan( abs( spotLightCoord * 2. - 1. ), vec3( 1.0 ) ) );
			spotColor = texture2D( spotLightMap[ SPOT_LIGHT_MAP_INDEX ], spotLightCoord.xy );
			directLight.color = inSpotLightMap ? directLight.color * spotColor.rgb : directLight.color;
		#endif
		#undef SPOT_LIGHT_MAP_INDEX
		#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_SPOT_LIGHT_SHADOWS )
		spotLightShadow = spotLightShadows[ i ];
		directLight.color *= ( directLight.visible && receiveShadow ) ? getShadow( spotShadowMap[ i ], spotLightShadow.shadowMapSize, spotLightShadow.shadowIntensity, spotLightShadow.shadowBias, spotLightShadow.shadowRadius, vSpotLightCoord[ i ] ) : 1.0;
		#endif
		RE_Direct( directLight, geometryPosition, geometryNormal, geometryViewDir, geometryClearcoatNormal, material, reflectedLight );
	}
	#pragma unroll_loop_end
#endif
#if ( NUM_DIR_LIGHTS > 0 ) && defined( RE_Direct )
	DirectionalLight directionalLight;
	#if defined( USE_SHADOWMAP ) && NUM_DIR_LIGHT_SHADOWS > 0
	DirectionalLightShadow directionalLightShadow;
	#endif
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_DIR_LIGHTS; i ++ ) {
		directionalLight = directionalLights[ i ];
		getDirectionalLightInfo( directionalLight, directLight );
		#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_DIR_LIGHT_SHADOWS )
		directionalLightShadow = directionalLightShadows[ i ];
		directLight.color *= ( directLight.visible && receiveShadow ) ? getShadow( directionalShadowMap[ i ], directionalLightShadow.shadowMapSize, directionalLightShadow.shadowIntensity, directionalLightShadow.shadowBias, directionalLightShadow.shadowRadius, vDirectionalShadowCoord[ i ] ) : 1.0;
		#endif
		RE_Direct( directLight, geometryPosition, geometryNormal, geometryViewDir, geometryClearcoatNormal, material, reflectedLight );
	}
	#pragma unroll_loop_end
#endif
#if ( NUM_RECT_AREA_LIGHTS > 0 ) && defined( RE_Direct_RectArea )
	RectAreaLight rectAreaLight;
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_RECT_AREA_LIGHTS; i ++ ) {
		rectAreaLight = rectAreaLights[ i ];
		RE_Direct_RectArea( rectAreaLight, geometryPosition, geometryNormal, geometryViewDir, geometryClearcoatNormal, material, reflectedLight );
	}
	#pragma unroll_loop_end
#endif
#if defined( RE_IndirectDiffuse )
	vec3 iblIrradiance = vec3( 0.0 );
	vec3 irradiance = getAmbientLightIrradiance( ambientLightColor );
	#if defined( USE_LIGHT_PROBES )
		irradiance += getLightProbeIrradiance( lightProbe, geometryNormal );
	#endif
	#if ( NUM_HEMI_LIGHTS > 0 )
		#pragma unroll_loop_start
		for ( int i = 0; i < NUM_HEMI_LIGHTS; i ++ ) {
			irradiance += getHemisphereLightIrradiance( hemisphereLights[ i ], geometryNormal );
		}
		#pragma unroll_loop_end
	#endif
#endif
#if defined( RE_IndirectSpecular )
	vec3 radiance = vec3( 0.0 );
	vec3 clearcoatRadiance = vec3( 0.0 );
#endif`,eC=`#if defined( RE_IndirectDiffuse )
	#ifdef USE_LIGHTMAP
		vec4 lightMapTexel = texture2D( lightMap, vLightMapUv );
		vec3 lightMapIrradiance = lightMapTexel.rgb * lightMapIntensity;
		irradiance += lightMapIrradiance;
	#endif
	#if defined( USE_ENVMAP ) && defined( STANDARD ) && defined( ENVMAP_TYPE_CUBE_UV )
		iblIrradiance += getIBLIrradiance( geometryNormal );
	#endif
#endif
#if defined( USE_ENVMAP ) && defined( RE_IndirectSpecular )
	#ifdef USE_ANISOTROPY
		radiance += getIBLAnisotropyRadiance( geometryViewDir, geometryNormal, material.roughness, material.anisotropyB, material.anisotropy );
	#else
		radiance += getIBLRadiance( geometryViewDir, geometryNormal, material.roughness );
	#endif
	#ifdef USE_CLEARCOAT
		clearcoatRadiance += getIBLRadiance( geometryViewDir, geometryClearcoatNormal, material.clearcoatRoughness );
	#endif
#endif`,nC=`#if defined( RE_IndirectDiffuse )
	RE_IndirectDiffuse( irradiance, geometryPosition, geometryNormal, geometryViewDir, geometryClearcoatNormal, material, reflectedLight );
#endif
#if defined( RE_IndirectSpecular )
	RE_IndirectSpecular( radiance, iblIrradiance, clearcoatRadiance, geometryPosition, geometryNormal, geometryViewDir, geometryClearcoatNormal, material, reflectedLight );
#endif`,iC=`#if defined( USE_LOGDEPTHBUF )
	gl_FragDepth = vIsPerspective == 0.0 ? gl_FragCoord.z : log2( vFragDepth ) * logDepthBufFC * 0.5;
#endif`,sC=`#if defined( USE_LOGDEPTHBUF )
	uniform float logDepthBufFC;
	varying float vFragDepth;
	varying float vIsPerspective;
#endif`,aC=`#ifdef USE_LOGDEPTHBUF
	varying float vFragDepth;
	varying float vIsPerspective;
#endif`,rC=`#ifdef USE_LOGDEPTHBUF
	vFragDepth = 1.0 + gl_Position.w;
	vIsPerspective = float( isPerspectiveMatrix( projectionMatrix ) );
#endif`,oC=`#ifdef USE_MAP
	vec4 sampledDiffuseColor = texture2D( map, vMapUv );
	#ifdef DECODE_VIDEO_TEXTURE
		sampledDiffuseColor = sRGBTransferEOTF( sampledDiffuseColor );
	#endif
	diffuseColor *= sampledDiffuseColor;
#endif`,lC=`#ifdef USE_MAP
	uniform sampler2D map;
#endif`,cC=`#if defined( USE_MAP ) || defined( USE_ALPHAMAP )
	#if defined( USE_POINTS_UV )
		vec2 uv = vUv;
	#else
		vec2 uv = ( uvTransform * vec3( gl_PointCoord.x, 1.0 - gl_PointCoord.y, 1 ) ).xy;
	#endif
#endif
#ifdef USE_MAP
	diffuseColor *= texture2D( map, uv );
#endif
#ifdef USE_ALPHAMAP
	diffuseColor.a *= texture2D( alphaMap, uv ).g;
#endif`,uC=`#if defined( USE_POINTS_UV )
	varying vec2 vUv;
#else
	#if defined( USE_MAP ) || defined( USE_ALPHAMAP )
		uniform mat3 uvTransform;
	#endif
#endif
#ifdef USE_MAP
	uniform sampler2D map;
#endif
#ifdef USE_ALPHAMAP
	uniform sampler2D alphaMap;
#endif`,hC=`float metalnessFactor = metalness;
#ifdef USE_METALNESSMAP
	vec4 texelMetalness = texture2D( metalnessMap, vMetalnessMapUv );
	metalnessFactor *= texelMetalness.b;
#endif`,fC=`#ifdef USE_METALNESSMAP
	uniform sampler2D metalnessMap;
#endif`,dC=`#ifdef USE_INSTANCING_MORPH
	float morphTargetInfluences[ MORPHTARGETS_COUNT ];
	float morphTargetBaseInfluence = texelFetch( morphTexture, ivec2( 0, gl_InstanceID ), 0 ).r;
	for ( int i = 0; i < MORPHTARGETS_COUNT; i ++ ) {
		morphTargetInfluences[i] =  texelFetch( morphTexture, ivec2( i + 1, gl_InstanceID ), 0 ).r;
	}
#endif`,pC=`#if defined( USE_MORPHCOLORS )
	vColor *= morphTargetBaseInfluence;
	for ( int i = 0; i < MORPHTARGETS_COUNT; i ++ ) {
		#if defined( USE_COLOR_ALPHA )
			if ( morphTargetInfluences[ i ] != 0.0 ) vColor += getMorph( gl_VertexID, i, 2 ) * morphTargetInfluences[ i ];
		#elif defined( USE_COLOR )
			if ( morphTargetInfluences[ i ] != 0.0 ) vColor += getMorph( gl_VertexID, i, 2 ).rgb * morphTargetInfluences[ i ];
		#endif
	}
#endif`,mC=`#ifdef USE_MORPHNORMALS
	objectNormal *= morphTargetBaseInfluence;
	for ( int i = 0; i < MORPHTARGETS_COUNT; i ++ ) {
		if ( morphTargetInfluences[ i ] != 0.0 ) objectNormal += getMorph( gl_VertexID, i, 1 ).xyz * morphTargetInfluences[ i ];
	}
#endif`,gC=`#ifdef USE_MORPHTARGETS
	#ifndef USE_INSTANCING_MORPH
		uniform float morphTargetBaseInfluence;
		uniform float morphTargetInfluences[ MORPHTARGETS_COUNT ];
	#endif
	uniform sampler2DArray morphTargetsTexture;
	uniform ivec2 morphTargetsTextureSize;
	vec4 getMorph( const in int vertexIndex, const in int morphTargetIndex, const in int offset ) {
		int texelIndex = vertexIndex * MORPHTARGETS_TEXTURE_STRIDE + offset;
		int y = texelIndex / morphTargetsTextureSize.x;
		int x = texelIndex - y * morphTargetsTextureSize.x;
		ivec3 morphUV = ivec3( x, y, morphTargetIndex );
		return texelFetch( morphTargetsTexture, morphUV, 0 );
	}
#endif`,vC=`#ifdef USE_MORPHTARGETS
	transformed *= morphTargetBaseInfluence;
	for ( int i = 0; i < MORPHTARGETS_COUNT; i ++ ) {
		if ( morphTargetInfluences[ i ] != 0.0 ) transformed += getMorph( gl_VertexID, i, 0 ).xyz * morphTargetInfluences[ i ];
	}
#endif`,_C=`float faceDirection = gl_FrontFacing ? 1.0 : - 1.0;
#ifdef FLAT_SHADED
	vec3 fdx = dFdx( vViewPosition );
	vec3 fdy = dFdy( vViewPosition );
	vec3 normal = normalize( cross( fdx, fdy ) );
#else
	vec3 normal = normalize( vNormal );
	#ifdef DOUBLE_SIDED
		normal *= faceDirection;
	#endif
#endif
#if defined( USE_NORMALMAP_TANGENTSPACE ) || defined( USE_CLEARCOAT_NORMALMAP ) || defined( USE_ANISOTROPY )
	#ifdef USE_TANGENT
		mat3 tbn = mat3( normalize( vTangent ), normalize( vBitangent ), normal );
	#else
		mat3 tbn = getTangentFrame( - vViewPosition, normal,
		#if defined( USE_NORMALMAP )
			vNormalMapUv
		#elif defined( USE_CLEARCOAT_NORMALMAP )
			vClearcoatNormalMapUv
		#else
			vUv
		#endif
		);
	#endif
	#if defined( DOUBLE_SIDED ) && ! defined( FLAT_SHADED )
		tbn[0] *= faceDirection;
		tbn[1] *= faceDirection;
	#endif
#endif
#ifdef USE_CLEARCOAT_NORMALMAP
	#ifdef USE_TANGENT
		mat3 tbn2 = mat3( normalize( vTangent ), normalize( vBitangent ), normal );
	#else
		mat3 tbn2 = getTangentFrame( - vViewPosition, normal, vClearcoatNormalMapUv );
	#endif
	#if defined( DOUBLE_SIDED ) && ! defined( FLAT_SHADED )
		tbn2[0] *= faceDirection;
		tbn2[1] *= faceDirection;
	#endif
#endif
vec3 nonPerturbedNormal = normal;`,yC=`#ifdef USE_NORMALMAP_OBJECTSPACE
	normal = texture2D( normalMap, vNormalMapUv ).xyz * 2.0 - 1.0;
	#ifdef FLIP_SIDED
		normal = - normal;
	#endif
	#ifdef DOUBLE_SIDED
		normal = normal * faceDirection;
	#endif
	normal = normalize( normalMatrix * normal );
#elif defined( USE_NORMALMAP_TANGENTSPACE )
	vec3 mapN = texture2D( normalMap, vNormalMapUv ).xyz * 2.0 - 1.0;
	mapN.xy *= normalScale;
	normal = normalize( tbn * mapN );
#elif defined( USE_BUMPMAP )
	normal = perturbNormalArb( - vViewPosition, normal, dHdxy_fwd(), faceDirection );
#endif`,xC=`#ifndef FLAT_SHADED
	varying vec3 vNormal;
	#ifdef USE_TANGENT
		varying vec3 vTangent;
		varying vec3 vBitangent;
	#endif
#endif`,SC=`#ifndef FLAT_SHADED
	varying vec3 vNormal;
	#ifdef USE_TANGENT
		varying vec3 vTangent;
		varying vec3 vBitangent;
	#endif
#endif`,MC=`#ifndef FLAT_SHADED
	vNormal = normalize( transformedNormal );
	#ifdef USE_TANGENT
		vTangent = normalize( transformedTangent );
		vBitangent = normalize( cross( vNormal, vTangent ) * tangent.w );
	#endif
#endif`,bC=`#ifdef USE_NORMALMAP
	uniform sampler2D normalMap;
	uniform vec2 normalScale;
#endif
#ifdef USE_NORMALMAP_OBJECTSPACE
	uniform mat3 normalMatrix;
#endif
#if ! defined ( USE_TANGENT ) && ( defined ( USE_NORMALMAP_TANGENTSPACE ) || defined ( USE_CLEARCOAT_NORMALMAP ) || defined( USE_ANISOTROPY ) )
	mat3 getTangentFrame( vec3 eye_pos, vec3 surf_norm, vec2 uv ) {
		vec3 q0 = dFdx( eye_pos.xyz );
		vec3 q1 = dFdy( eye_pos.xyz );
		vec2 st0 = dFdx( uv.st );
		vec2 st1 = dFdy( uv.st );
		vec3 N = surf_norm;
		vec3 q1perp = cross( q1, N );
		vec3 q0perp = cross( N, q0 );
		vec3 T = q1perp * st0.x + q0perp * st1.x;
		vec3 B = q1perp * st0.y + q0perp * st1.y;
		float det = max( dot( T, T ), dot( B, B ) );
		float scale = ( det == 0.0 ) ? 0.0 : inversesqrt( det );
		return mat3( T * scale, B * scale, N );
	}
#endif`,EC=`#ifdef USE_CLEARCOAT
	vec3 clearcoatNormal = nonPerturbedNormal;
#endif`,TC=`#ifdef USE_CLEARCOAT_NORMALMAP
	vec3 clearcoatMapN = texture2D( clearcoatNormalMap, vClearcoatNormalMapUv ).xyz * 2.0 - 1.0;
	clearcoatMapN.xy *= clearcoatNormalScale;
	clearcoatNormal = normalize( tbn2 * clearcoatMapN );
#endif`,AC=`#ifdef USE_CLEARCOATMAP
	uniform sampler2D clearcoatMap;
#endif
#ifdef USE_CLEARCOAT_NORMALMAP
	uniform sampler2D clearcoatNormalMap;
	uniform vec2 clearcoatNormalScale;
#endif
#ifdef USE_CLEARCOAT_ROUGHNESSMAP
	uniform sampler2D clearcoatRoughnessMap;
#endif`,wC=`#ifdef USE_IRIDESCENCEMAP
	uniform sampler2D iridescenceMap;
#endif
#ifdef USE_IRIDESCENCE_THICKNESSMAP
	uniform sampler2D iridescenceThicknessMap;
#endif`,CC=`#ifdef OPAQUE
diffuseColor.a = 1.0;
#endif
#ifdef USE_TRANSMISSION
diffuseColor.a *= material.transmissionAlpha;
#endif
gl_FragColor = vec4( outgoingLight, diffuseColor.a );`,RC=`vec3 packNormalToRGB( const in vec3 normal ) {
	return normalize( normal ) * 0.5 + 0.5;
}
vec3 unpackRGBToNormal( const in vec3 rgb ) {
	return 2.0 * rgb.xyz - 1.0;
}
const float PackUpscale = 256. / 255.;const float UnpackDownscale = 255. / 256.;const float ShiftRight8 = 1. / 256.;
const float Inv255 = 1. / 255.;
const vec4 PackFactors = vec4( 1.0, 256.0, 256.0 * 256.0, 256.0 * 256.0 * 256.0 );
const vec2 UnpackFactors2 = vec2( UnpackDownscale, 1.0 / PackFactors.g );
const vec3 UnpackFactors3 = vec3( UnpackDownscale / PackFactors.rg, 1.0 / PackFactors.b );
const vec4 UnpackFactors4 = vec4( UnpackDownscale / PackFactors.rgb, 1.0 / PackFactors.a );
vec4 packDepthToRGBA( const in float v ) {
	if( v <= 0.0 )
		return vec4( 0., 0., 0., 0. );
	if( v >= 1.0 )
		return vec4( 1., 1., 1., 1. );
	float vuf;
	float af = modf( v * PackFactors.a, vuf );
	float bf = modf( vuf * ShiftRight8, vuf );
	float gf = modf( vuf * ShiftRight8, vuf );
	return vec4( vuf * Inv255, gf * PackUpscale, bf * PackUpscale, af );
}
vec3 packDepthToRGB( const in float v ) {
	if( v <= 0.0 )
		return vec3( 0., 0., 0. );
	if( v >= 1.0 )
		return vec3( 1., 1., 1. );
	float vuf;
	float bf = modf( v * PackFactors.b, vuf );
	float gf = modf( vuf * ShiftRight8, vuf );
	return vec3( vuf * Inv255, gf * PackUpscale, bf );
}
vec2 packDepthToRG( const in float v ) {
	if( v <= 0.0 )
		return vec2( 0., 0. );
	if( v >= 1.0 )
		return vec2( 1., 1. );
	float vuf;
	float gf = modf( v * 256., vuf );
	return vec2( vuf * Inv255, gf );
}
float unpackRGBAToDepth( const in vec4 v ) {
	return dot( v, UnpackFactors4 );
}
float unpackRGBToDepth( const in vec3 v ) {
	return dot( v, UnpackFactors3 );
}
float unpackRGToDepth( const in vec2 v ) {
	return v.r * UnpackFactors2.r + v.g * UnpackFactors2.g;
}
vec4 pack2HalfToRGBA( const in vec2 v ) {
	vec4 r = vec4( v.x, fract( v.x * 255.0 ), v.y, fract( v.y * 255.0 ) );
	return vec4( r.x - r.y / 255.0, r.y, r.z - r.w / 255.0, r.w );
}
vec2 unpackRGBATo2Half( const in vec4 v ) {
	return vec2( v.x + ( v.y / 255.0 ), v.z + ( v.w / 255.0 ) );
}
float viewZToOrthographicDepth( const in float viewZ, const in float near, const in float far ) {
	return ( viewZ + near ) / ( near - far );
}
float orthographicDepthToViewZ( const in float depth, const in float near, const in float far ) {
	return depth * ( near - far ) - near;
}
float viewZToPerspectiveDepth( const in float viewZ, const in float near, const in float far ) {
	return ( ( near + viewZ ) * far ) / ( ( far - near ) * viewZ );
}
float perspectiveDepthToViewZ( const in float depth, const in float near, const in float far ) {
	return ( near * far ) / ( ( far - near ) * depth - far );
}`,DC=`#ifdef PREMULTIPLIED_ALPHA
	gl_FragColor.rgb *= gl_FragColor.a;
#endif`,UC=`vec4 mvPosition = vec4( transformed, 1.0 );
#ifdef USE_BATCHING
	mvPosition = batchingMatrix * mvPosition;
#endif
#ifdef USE_INSTANCING
	mvPosition = instanceMatrix * mvPosition;
#endif
mvPosition = modelViewMatrix * mvPosition;
gl_Position = projectionMatrix * mvPosition;`,NC=`#ifdef DITHERING
	gl_FragColor.rgb = dithering( gl_FragColor.rgb );
#endif`,LC=`#ifdef DITHERING
	vec3 dithering( vec3 color ) {
		float grid_position = rand( gl_FragCoord.xy );
		vec3 dither_shift_RGB = vec3( 0.25 / 255.0, -0.25 / 255.0, 0.25 / 255.0 );
		dither_shift_RGB = mix( 2.0 * dither_shift_RGB, -2.0 * dither_shift_RGB, grid_position );
		return color + dither_shift_RGB;
	}
#endif`,PC=`float roughnessFactor = roughness;
#ifdef USE_ROUGHNESSMAP
	vec4 texelRoughness = texture2D( roughnessMap, vRoughnessMapUv );
	roughnessFactor *= texelRoughness.g;
#endif`,IC=`#ifdef USE_ROUGHNESSMAP
	uniform sampler2D roughnessMap;
#endif`,OC=`#if NUM_SPOT_LIGHT_COORDS > 0
	varying vec4 vSpotLightCoord[ NUM_SPOT_LIGHT_COORDS ];
#endif
#if NUM_SPOT_LIGHT_MAPS > 0
	uniform sampler2D spotLightMap[ NUM_SPOT_LIGHT_MAPS ];
#endif
#ifdef USE_SHADOWMAP
	#if NUM_DIR_LIGHT_SHADOWS > 0
		uniform sampler2D directionalShadowMap[ NUM_DIR_LIGHT_SHADOWS ];
		varying vec4 vDirectionalShadowCoord[ NUM_DIR_LIGHT_SHADOWS ];
		struct DirectionalLightShadow {
			float shadowIntensity;
			float shadowBias;
			float shadowNormalBias;
			float shadowRadius;
			vec2 shadowMapSize;
		};
		uniform DirectionalLightShadow directionalLightShadows[ NUM_DIR_LIGHT_SHADOWS ];
	#endif
	#if NUM_SPOT_LIGHT_SHADOWS > 0
		uniform sampler2D spotShadowMap[ NUM_SPOT_LIGHT_SHADOWS ];
		struct SpotLightShadow {
			float shadowIntensity;
			float shadowBias;
			float shadowNormalBias;
			float shadowRadius;
			vec2 shadowMapSize;
		};
		uniform SpotLightShadow spotLightShadows[ NUM_SPOT_LIGHT_SHADOWS ];
	#endif
	#if NUM_POINT_LIGHT_SHADOWS > 0
		uniform sampler2D pointShadowMap[ NUM_POINT_LIGHT_SHADOWS ];
		varying vec4 vPointShadowCoord[ NUM_POINT_LIGHT_SHADOWS ];
		struct PointLightShadow {
			float shadowIntensity;
			float shadowBias;
			float shadowNormalBias;
			float shadowRadius;
			vec2 shadowMapSize;
			float shadowCameraNear;
			float shadowCameraFar;
		};
		uniform PointLightShadow pointLightShadows[ NUM_POINT_LIGHT_SHADOWS ];
	#endif
	float texture2DCompare( sampler2D depths, vec2 uv, float compare ) {
		float depth = unpackRGBAToDepth( texture2D( depths, uv ) );
		#ifdef USE_REVERSEDEPTHBUF
			return step( depth, compare );
		#else
			return step( compare, depth );
		#endif
	}
	vec2 texture2DDistribution( sampler2D shadow, vec2 uv ) {
		return unpackRGBATo2Half( texture2D( shadow, uv ) );
	}
	float VSMShadow (sampler2D shadow, vec2 uv, float compare ){
		float occlusion = 1.0;
		vec2 distribution = texture2DDistribution( shadow, uv );
		#ifdef USE_REVERSEDEPTHBUF
			float hard_shadow = step( distribution.x, compare );
		#else
			float hard_shadow = step( compare , distribution.x );
		#endif
		if (hard_shadow != 1.0 ) {
			float distance = compare - distribution.x ;
			float variance = max( 0.00000, distribution.y * distribution.y );
			float softness_probability = variance / (variance + distance * distance );			softness_probability = clamp( ( softness_probability - 0.3 ) / ( 0.95 - 0.3 ), 0.0, 1.0 );			occlusion = clamp( max( hard_shadow, softness_probability ), 0.0, 1.0 );
		}
		return occlusion;
	}
	float getShadow( sampler2D shadowMap, vec2 shadowMapSize, float shadowIntensity, float shadowBias, float shadowRadius, vec4 shadowCoord ) {
		float shadow = 1.0;
		shadowCoord.xyz /= shadowCoord.w;
		shadowCoord.z += shadowBias;
		bool inFrustum = shadowCoord.x >= 0.0 && shadowCoord.x <= 1.0 && shadowCoord.y >= 0.0 && shadowCoord.y <= 1.0;
		bool frustumTest = inFrustum && shadowCoord.z <= 1.0;
		if ( frustumTest ) {
		#if defined( SHADOWMAP_TYPE_PCF )
			vec2 texelSize = vec2( 1.0 ) / shadowMapSize;
			float dx0 = - texelSize.x * shadowRadius;
			float dy0 = - texelSize.y * shadowRadius;
			float dx1 = + texelSize.x * shadowRadius;
			float dy1 = + texelSize.y * shadowRadius;
			float dx2 = dx0 / 2.0;
			float dy2 = dy0 / 2.0;
			float dx3 = dx1 / 2.0;
			float dy3 = dy1 / 2.0;
			shadow = (
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, dy0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, dy0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, dy2 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy2 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, dy2 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, 0.0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, 0.0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy, shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, 0.0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, 0.0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, dy3 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy3 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, dy3 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, dy1 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy1 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, dy1 ), shadowCoord.z )
			) * ( 1.0 / 17.0 );
		#elif defined( SHADOWMAP_TYPE_PCF_SOFT )
			vec2 texelSize = vec2( 1.0 ) / shadowMapSize;
			float dx = texelSize.x;
			float dy = texelSize.y;
			vec2 uv = shadowCoord.xy;
			vec2 f = fract( uv * shadowMapSize + 0.5 );
			uv -= f * texelSize;
			shadow = (
				texture2DCompare( shadowMap, uv, shadowCoord.z ) +
				texture2DCompare( shadowMap, uv + vec2( dx, 0.0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, uv + vec2( 0.0, dy ), shadowCoord.z ) +
				texture2DCompare( shadowMap, uv + texelSize, shadowCoord.z ) +
				mix( texture2DCompare( shadowMap, uv + vec2( -dx, 0.0 ), shadowCoord.z ),
					 texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, 0.0 ), shadowCoord.z ),
					 f.x ) +
				mix( texture2DCompare( shadowMap, uv + vec2( -dx, dy ), shadowCoord.z ),
					 texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, dy ), shadowCoord.z ),
					 f.x ) +
				mix( texture2DCompare( shadowMap, uv + vec2( 0.0, -dy ), shadowCoord.z ),
					 texture2DCompare( shadowMap, uv + vec2( 0.0, 2.0 * dy ), shadowCoord.z ),
					 f.y ) +
				mix( texture2DCompare( shadowMap, uv + vec2( dx, -dy ), shadowCoord.z ),
					 texture2DCompare( shadowMap, uv + vec2( dx, 2.0 * dy ), shadowCoord.z ),
					 f.y ) +
				mix( mix( texture2DCompare( shadowMap, uv + vec2( -dx, -dy ), shadowCoord.z ),
						  texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, -dy ), shadowCoord.z ),
						  f.x ),
					 mix( texture2DCompare( shadowMap, uv + vec2( -dx, 2.0 * dy ), shadowCoord.z ),
						  texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, 2.0 * dy ), shadowCoord.z ),
						  f.x ),
					 f.y )
			) * ( 1.0 / 9.0 );
		#elif defined( SHADOWMAP_TYPE_VSM )
			shadow = VSMShadow( shadowMap, shadowCoord.xy, shadowCoord.z );
		#else
			shadow = texture2DCompare( shadowMap, shadowCoord.xy, shadowCoord.z );
		#endif
		}
		return mix( 1.0, shadow, shadowIntensity );
	}
	vec2 cubeToUV( vec3 v, float texelSizeY ) {
		vec3 absV = abs( v );
		float scaleToCube = 1.0 / max( absV.x, max( absV.y, absV.z ) );
		absV *= scaleToCube;
		v *= scaleToCube * ( 1.0 - 2.0 * texelSizeY );
		vec2 planar = v.xy;
		float almostATexel = 1.5 * texelSizeY;
		float almostOne = 1.0 - almostATexel;
		if ( absV.z >= almostOne ) {
			if ( v.z > 0.0 )
				planar.x = 4.0 - v.x;
		} else if ( absV.x >= almostOne ) {
			float signX = sign( v.x );
			planar.x = v.z * signX + 2.0 * signX;
		} else if ( absV.y >= almostOne ) {
			float signY = sign( v.y );
			planar.x = v.x + 2.0 * signY + 2.0;
			planar.y = v.z * signY - 2.0;
		}
		return vec2( 0.125, 0.25 ) * planar + vec2( 0.375, 0.75 );
	}
	float getPointShadow( sampler2D shadowMap, vec2 shadowMapSize, float shadowIntensity, float shadowBias, float shadowRadius, vec4 shadowCoord, float shadowCameraNear, float shadowCameraFar ) {
		float shadow = 1.0;
		vec3 lightToPosition = shadowCoord.xyz;
		
		float lightToPositionLength = length( lightToPosition );
		if ( lightToPositionLength - shadowCameraFar <= 0.0 && lightToPositionLength - shadowCameraNear >= 0.0 ) {
			float dp = ( lightToPositionLength - shadowCameraNear ) / ( shadowCameraFar - shadowCameraNear );			dp += shadowBias;
			vec3 bd3D = normalize( lightToPosition );
			vec2 texelSize = vec2( 1.0 ) / ( shadowMapSize * vec2( 4.0, 2.0 ) );
			#if defined( SHADOWMAP_TYPE_PCF ) || defined( SHADOWMAP_TYPE_PCF_SOFT ) || defined( SHADOWMAP_TYPE_VSM )
				vec2 offset = vec2( - 1, 1 ) * shadowRadius * texelSize.y;
				shadow = (
					texture2DCompare( shadowMap, cubeToUV( bd3D + offset.xyy, texelSize.y ), dp ) +
					texture2DCompare( shadowMap, cubeToUV( bd3D + offset.yyy, texelSize.y ), dp ) +
					texture2DCompare( shadowMap, cubeToUV( bd3D + offset.xyx, texelSize.y ), dp ) +
					texture2DCompare( shadowMap, cubeToUV( bd3D + offset.yyx, texelSize.y ), dp ) +
					texture2DCompare( shadowMap, cubeToUV( bd3D, texelSize.y ), dp ) +
					texture2DCompare( shadowMap, cubeToUV( bd3D + offset.xxy, texelSize.y ), dp ) +
					texture2DCompare( shadowMap, cubeToUV( bd3D + offset.yxy, texelSize.y ), dp ) +
					texture2DCompare( shadowMap, cubeToUV( bd3D + offset.xxx, texelSize.y ), dp ) +
					texture2DCompare( shadowMap, cubeToUV( bd3D + offset.yxx, texelSize.y ), dp )
				) * ( 1.0 / 9.0 );
			#else
				shadow = texture2DCompare( shadowMap, cubeToUV( bd3D, texelSize.y ), dp );
			#endif
		}
		return mix( 1.0, shadow, shadowIntensity );
	}
#endif`,BC=`#if NUM_SPOT_LIGHT_COORDS > 0
	uniform mat4 spotLightMatrix[ NUM_SPOT_LIGHT_COORDS ];
	varying vec4 vSpotLightCoord[ NUM_SPOT_LIGHT_COORDS ];
#endif
#ifdef USE_SHADOWMAP
	#if NUM_DIR_LIGHT_SHADOWS > 0
		uniform mat4 directionalShadowMatrix[ NUM_DIR_LIGHT_SHADOWS ];
		varying vec4 vDirectionalShadowCoord[ NUM_DIR_LIGHT_SHADOWS ];
		struct DirectionalLightShadow {
			float shadowIntensity;
			float shadowBias;
			float shadowNormalBias;
			float shadowRadius;
			vec2 shadowMapSize;
		};
		uniform DirectionalLightShadow directionalLightShadows[ NUM_DIR_LIGHT_SHADOWS ];
	#endif
	#if NUM_SPOT_LIGHT_SHADOWS > 0
		struct SpotLightShadow {
			float shadowIntensity;
			float shadowBias;
			float shadowNormalBias;
			float shadowRadius;
			vec2 shadowMapSize;
		};
		uniform SpotLightShadow spotLightShadows[ NUM_SPOT_LIGHT_SHADOWS ];
	#endif
	#if NUM_POINT_LIGHT_SHADOWS > 0
		uniform mat4 pointShadowMatrix[ NUM_POINT_LIGHT_SHADOWS ];
		varying vec4 vPointShadowCoord[ NUM_POINT_LIGHT_SHADOWS ];
		struct PointLightShadow {
			float shadowIntensity;
			float shadowBias;
			float shadowNormalBias;
			float shadowRadius;
			vec2 shadowMapSize;
			float shadowCameraNear;
			float shadowCameraFar;
		};
		uniform PointLightShadow pointLightShadows[ NUM_POINT_LIGHT_SHADOWS ];
	#endif
#endif`,zC=`#if ( defined( USE_SHADOWMAP ) && ( NUM_DIR_LIGHT_SHADOWS > 0 || NUM_POINT_LIGHT_SHADOWS > 0 ) ) || ( NUM_SPOT_LIGHT_COORDS > 0 )
	vec3 shadowWorldNormal = inverseTransformDirection( transformedNormal, viewMatrix );
	vec4 shadowWorldPosition;
#endif
#if defined( USE_SHADOWMAP )
	#if NUM_DIR_LIGHT_SHADOWS > 0
		#pragma unroll_loop_start
		for ( int i = 0; i < NUM_DIR_LIGHT_SHADOWS; i ++ ) {
			shadowWorldPosition = worldPosition + vec4( shadowWorldNormal * directionalLightShadows[ i ].shadowNormalBias, 0 );
			vDirectionalShadowCoord[ i ] = directionalShadowMatrix[ i ] * shadowWorldPosition;
		}
		#pragma unroll_loop_end
	#endif
	#if NUM_POINT_LIGHT_SHADOWS > 0
		#pragma unroll_loop_start
		for ( int i = 0; i < NUM_POINT_LIGHT_SHADOWS; i ++ ) {
			shadowWorldPosition = worldPosition + vec4( shadowWorldNormal * pointLightShadows[ i ].shadowNormalBias, 0 );
			vPointShadowCoord[ i ] = pointShadowMatrix[ i ] * shadowWorldPosition;
		}
		#pragma unroll_loop_end
	#endif
#endif
#if NUM_SPOT_LIGHT_COORDS > 0
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_SPOT_LIGHT_COORDS; i ++ ) {
		shadowWorldPosition = worldPosition;
		#if ( defined( USE_SHADOWMAP ) && UNROLLED_LOOP_INDEX < NUM_SPOT_LIGHT_SHADOWS )
			shadowWorldPosition.xyz += shadowWorldNormal * spotLightShadows[ i ].shadowNormalBias;
		#endif
		vSpotLightCoord[ i ] = spotLightMatrix[ i ] * shadowWorldPosition;
	}
	#pragma unroll_loop_end
#endif`,FC=`float getShadowMask() {
	float shadow = 1.0;
	#ifdef USE_SHADOWMAP
	#if NUM_DIR_LIGHT_SHADOWS > 0
	DirectionalLightShadow directionalLight;
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_DIR_LIGHT_SHADOWS; i ++ ) {
		directionalLight = directionalLightShadows[ i ];
		shadow *= receiveShadow ? getShadow( directionalShadowMap[ i ], directionalLight.shadowMapSize, directionalLight.shadowIntensity, directionalLight.shadowBias, directionalLight.shadowRadius, vDirectionalShadowCoord[ i ] ) : 1.0;
	}
	#pragma unroll_loop_end
	#endif
	#if NUM_SPOT_LIGHT_SHADOWS > 0
	SpotLightShadow spotLight;
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_SPOT_LIGHT_SHADOWS; i ++ ) {
		spotLight = spotLightShadows[ i ];
		shadow *= receiveShadow ? getShadow( spotShadowMap[ i ], spotLight.shadowMapSize, spotLight.shadowIntensity, spotLight.shadowBias, spotLight.shadowRadius, vSpotLightCoord[ i ] ) : 1.0;
	}
	#pragma unroll_loop_end
	#endif
	#if NUM_POINT_LIGHT_SHADOWS > 0
	PointLightShadow pointLight;
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_POINT_LIGHT_SHADOWS; i ++ ) {
		pointLight = pointLightShadows[ i ];
		shadow *= receiveShadow ? getPointShadow( pointShadowMap[ i ], pointLight.shadowMapSize, pointLight.shadowIntensity, pointLight.shadowBias, pointLight.shadowRadius, vPointShadowCoord[ i ], pointLight.shadowCameraNear, pointLight.shadowCameraFar ) : 1.0;
	}
	#pragma unroll_loop_end
	#endif
	#endif
	return shadow;
}`,HC=`#ifdef USE_SKINNING
	mat4 boneMatX = getBoneMatrix( skinIndex.x );
	mat4 boneMatY = getBoneMatrix( skinIndex.y );
	mat4 boneMatZ = getBoneMatrix( skinIndex.z );
	mat4 boneMatW = getBoneMatrix( skinIndex.w );
#endif`,VC=`#ifdef USE_SKINNING
	uniform mat4 bindMatrix;
	uniform mat4 bindMatrixInverse;
	uniform highp sampler2D boneTexture;
	mat4 getBoneMatrix( const in float i ) {
		int size = textureSize( boneTexture, 0 ).x;
		int j = int( i ) * 4;
		int x = j % size;
		int y = j / size;
		vec4 v1 = texelFetch( boneTexture, ivec2( x, y ), 0 );
		vec4 v2 = texelFetch( boneTexture, ivec2( x + 1, y ), 0 );
		vec4 v3 = texelFetch( boneTexture, ivec2( x + 2, y ), 0 );
		vec4 v4 = texelFetch( boneTexture, ivec2( x + 3, y ), 0 );
		return mat4( v1, v2, v3, v4 );
	}
#endif`,GC=`#ifdef USE_SKINNING
	vec4 skinVertex = bindMatrix * vec4( transformed, 1.0 );
	vec4 skinned = vec4( 0.0 );
	skinned += boneMatX * skinVertex * skinWeight.x;
	skinned += boneMatY * skinVertex * skinWeight.y;
	skinned += boneMatZ * skinVertex * skinWeight.z;
	skinned += boneMatW * skinVertex * skinWeight.w;
	transformed = ( bindMatrixInverse * skinned ).xyz;
#endif`,kC=`#ifdef USE_SKINNING
	mat4 skinMatrix = mat4( 0.0 );
	skinMatrix += skinWeight.x * boneMatX;
	skinMatrix += skinWeight.y * boneMatY;
	skinMatrix += skinWeight.z * boneMatZ;
	skinMatrix += skinWeight.w * boneMatW;
	skinMatrix = bindMatrixInverse * skinMatrix * bindMatrix;
	objectNormal = vec4( skinMatrix * vec4( objectNormal, 0.0 ) ).xyz;
	#ifdef USE_TANGENT
		objectTangent = vec4( skinMatrix * vec4( objectTangent, 0.0 ) ).xyz;
	#endif
#endif`,WC=`float specularStrength;
#ifdef USE_SPECULARMAP
	vec4 texelSpecular = texture2D( specularMap, vSpecularMapUv );
	specularStrength = texelSpecular.r;
#else
	specularStrength = 1.0;
#endif`,XC=`#ifdef USE_SPECULARMAP
	uniform sampler2D specularMap;
#endif`,qC=`#if defined( TONE_MAPPING )
	gl_FragColor.rgb = toneMapping( gl_FragColor.rgb );
#endif`,YC=`#ifndef saturate
#define saturate( a ) clamp( a, 0.0, 1.0 )
#endif
uniform float toneMappingExposure;
vec3 LinearToneMapping( vec3 color ) {
	return saturate( toneMappingExposure * color );
}
vec3 ReinhardToneMapping( vec3 color ) {
	color *= toneMappingExposure;
	return saturate( color / ( vec3( 1.0 ) + color ) );
}
vec3 CineonToneMapping( vec3 color ) {
	color *= toneMappingExposure;
	color = max( vec3( 0.0 ), color - 0.004 );
	return pow( ( color * ( 6.2 * color + 0.5 ) ) / ( color * ( 6.2 * color + 1.7 ) + 0.06 ), vec3( 2.2 ) );
}
vec3 RRTAndODTFit( vec3 v ) {
	vec3 a = v * ( v + 0.0245786 ) - 0.000090537;
	vec3 b = v * ( 0.983729 * v + 0.4329510 ) + 0.238081;
	return a / b;
}
vec3 ACESFilmicToneMapping( vec3 color ) {
	const mat3 ACESInputMat = mat3(
		vec3( 0.59719, 0.07600, 0.02840 ),		vec3( 0.35458, 0.90834, 0.13383 ),
		vec3( 0.04823, 0.01566, 0.83777 )
	);
	const mat3 ACESOutputMat = mat3(
		vec3(  1.60475, -0.10208, -0.00327 ),		vec3( -0.53108,  1.10813, -0.07276 ),
		vec3( -0.07367, -0.00605,  1.07602 )
	);
	color *= toneMappingExposure / 0.6;
	color = ACESInputMat * color;
	color = RRTAndODTFit( color );
	color = ACESOutputMat * color;
	return saturate( color );
}
const mat3 LINEAR_REC2020_TO_LINEAR_SRGB = mat3(
	vec3( 1.6605, - 0.1246, - 0.0182 ),
	vec3( - 0.5876, 1.1329, - 0.1006 ),
	vec3( - 0.0728, - 0.0083, 1.1187 )
);
const mat3 LINEAR_SRGB_TO_LINEAR_REC2020 = mat3(
	vec3( 0.6274, 0.0691, 0.0164 ),
	vec3( 0.3293, 0.9195, 0.0880 ),
	vec3( 0.0433, 0.0113, 0.8956 )
);
vec3 agxDefaultContrastApprox( vec3 x ) {
	vec3 x2 = x * x;
	vec3 x4 = x2 * x2;
	return + 15.5 * x4 * x2
		- 40.14 * x4 * x
		+ 31.96 * x4
		- 6.868 * x2 * x
		+ 0.4298 * x2
		+ 0.1191 * x
		- 0.00232;
}
vec3 AgXToneMapping( vec3 color ) {
	const mat3 AgXInsetMatrix = mat3(
		vec3( 0.856627153315983, 0.137318972929847, 0.11189821299995 ),
		vec3( 0.0951212405381588, 0.761241990602591, 0.0767994186031903 ),
		vec3( 0.0482516061458583, 0.101439036467562, 0.811302368396859 )
	);
	const mat3 AgXOutsetMatrix = mat3(
		vec3( 1.1271005818144368, - 0.1413297634984383, - 0.14132976349843826 ),
		vec3( - 0.11060664309660323, 1.157823702216272, - 0.11060664309660294 ),
		vec3( - 0.016493938717834573, - 0.016493938717834257, 1.2519364065950405 )
	);
	const float AgxMinEv = - 12.47393;	const float AgxMaxEv = 4.026069;
	color *= toneMappingExposure;
	color = LINEAR_SRGB_TO_LINEAR_REC2020 * color;
	color = AgXInsetMatrix * color;
	color = max( color, 1e-10 );	color = log2( color );
	color = ( color - AgxMinEv ) / ( AgxMaxEv - AgxMinEv );
	color = clamp( color, 0.0, 1.0 );
	color = agxDefaultContrastApprox( color );
	color = AgXOutsetMatrix * color;
	color = pow( max( vec3( 0.0 ), color ), vec3( 2.2 ) );
	color = LINEAR_REC2020_TO_LINEAR_SRGB * color;
	color = clamp( color, 0.0, 1.0 );
	return color;
}
vec3 NeutralToneMapping( vec3 color ) {
	const float StartCompression = 0.8 - 0.04;
	const float Desaturation = 0.15;
	color *= toneMappingExposure;
	float x = min( color.r, min( color.g, color.b ) );
	float offset = x < 0.08 ? x - 6.25 * x * x : 0.04;
	color -= offset;
	float peak = max( color.r, max( color.g, color.b ) );
	if ( peak < StartCompression ) return color;
	float d = 1. - StartCompression;
	float newPeak = 1. - d * d / ( peak + d - StartCompression );
	color *= newPeak / peak;
	float g = 1. - 1. / ( Desaturation * ( peak - newPeak ) + 1. );
	return mix( color, vec3( newPeak ), g );
}
vec3 CustomToneMapping( vec3 color ) { return color; }`,jC=`#ifdef USE_TRANSMISSION
	material.transmission = transmission;
	material.transmissionAlpha = 1.0;
	material.thickness = thickness;
	material.attenuationDistance = attenuationDistance;
	material.attenuationColor = attenuationColor;
	#ifdef USE_TRANSMISSIONMAP
		material.transmission *= texture2D( transmissionMap, vTransmissionMapUv ).r;
	#endif
	#ifdef USE_THICKNESSMAP
		material.thickness *= texture2D( thicknessMap, vThicknessMapUv ).g;
	#endif
	vec3 pos = vWorldPosition;
	vec3 v = normalize( cameraPosition - pos );
	vec3 n = inverseTransformDirection( normal, viewMatrix );
	vec4 transmitted = getIBLVolumeRefraction(
		n, v, material.roughness, material.diffuseColor, material.specularColor, material.specularF90,
		pos, modelMatrix, viewMatrix, projectionMatrix, material.dispersion, material.ior, material.thickness,
		material.attenuationColor, material.attenuationDistance );
	material.transmissionAlpha = mix( material.transmissionAlpha, transmitted.a, material.transmission );
	totalDiffuse = mix( totalDiffuse, transmitted.rgb, material.transmission );
#endif`,ZC=`#ifdef USE_TRANSMISSION
	uniform float transmission;
	uniform float thickness;
	uniform float attenuationDistance;
	uniform vec3 attenuationColor;
	#ifdef USE_TRANSMISSIONMAP
		uniform sampler2D transmissionMap;
	#endif
	#ifdef USE_THICKNESSMAP
		uniform sampler2D thicknessMap;
	#endif
	uniform vec2 transmissionSamplerSize;
	uniform sampler2D transmissionSamplerMap;
	uniform mat4 modelMatrix;
	uniform mat4 projectionMatrix;
	varying vec3 vWorldPosition;
	float w0( float a ) {
		return ( 1.0 / 6.0 ) * ( a * ( a * ( - a + 3.0 ) - 3.0 ) + 1.0 );
	}
	float w1( float a ) {
		return ( 1.0 / 6.0 ) * ( a *  a * ( 3.0 * a - 6.0 ) + 4.0 );
	}
	float w2( float a ){
		return ( 1.0 / 6.0 ) * ( a * ( a * ( - 3.0 * a + 3.0 ) + 3.0 ) + 1.0 );
	}
	float w3( float a ) {
		return ( 1.0 / 6.0 ) * ( a * a * a );
	}
	float g0( float a ) {
		return w0( a ) + w1( a );
	}
	float g1( float a ) {
		return w2( a ) + w3( a );
	}
	float h0( float a ) {
		return - 1.0 + w1( a ) / ( w0( a ) + w1( a ) );
	}
	float h1( float a ) {
		return 1.0 + w3( a ) / ( w2( a ) + w3( a ) );
	}
	vec4 bicubic( sampler2D tex, vec2 uv, vec4 texelSize, float lod ) {
		uv = uv * texelSize.zw + 0.5;
		vec2 iuv = floor( uv );
		vec2 fuv = fract( uv );
		float g0x = g0( fuv.x );
		float g1x = g1( fuv.x );
		float h0x = h0( fuv.x );
		float h1x = h1( fuv.x );
		float h0y = h0( fuv.y );
		float h1y = h1( fuv.y );
		vec2 p0 = ( vec2( iuv.x + h0x, iuv.y + h0y ) - 0.5 ) * texelSize.xy;
		vec2 p1 = ( vec2( iuv.x + h1x, iuv.y + h0y ) - 0.5 ) * texelSize.xy;
		vec2 p2 = ( vec2( iuv.x + h0x, iuv.y + h1y ) - 0.5 ) * texelSize.xy;
		vec2 p3 = ( vec2( iuv.x + h1x, iuv.y + h1y ) - 0.5 ) * texelSize.xy;
		return g0( fuv.y ) * ( g0x * textureLod( tex, p0, lod ) + g1x * textureLod( tex, p1, lod ) ) +
			g1( fuv.y ) * ( g0x * textureLod( tex, p2, lod ) + g1x * textureLod( tex, p3, lod ) );
	}
	vec4 textureBicubic( sampler2D sampler, vec2 uv, float lod ) {
		vec2 fLodSize = vec2( textureSize( sampler, int( lod ) ) );
		vec2 cLodSize = vec2( textureSize( sampler, int( lod + 1.0 ) ) );
		vec2 fLodSizeInv = 1.0 / fLodSize;
		vec2 cLodSizeInv = 1.0 / cLodSize;
		vec4 fSample = bicubic( sampler, uv, vec4( fLodSizeInv, fLodSize ), floor( lod ) );
		vec4 cSample = bicubic( sampler, uv, vec4( cLodSizeInv, cLodSize ), ceil( lod ) );
		return mix( fSample, cSample, fract( lod ) );
	}
	vec3 getVolumeTransmissionRay( const in vec3 n, const in vec3 v, const in float thickness, const in float ior, const in mat4 modelMatrix ) {
		vec3 refractionVector = refract( - v, normalize( n ), 1.0 / ior );
		vec3 modelScale;
		modelScale.x = length( vec3( modelMatrix[ 0 ].xyz ) );
		modelScale.y = length( vec3( modelMatrix[ 1 ].xyz ) );
		modelScale.z = length( vec3( modelMatrix[ 2 ].xyz ) );
		return normalize( refractionVector ) * thickness * modelScale;
	}
	float applyIorToRoughness( const in float roughness, const in float ior ) {
		return roughness * clamp( ior * 2.0 - 2.0, 0.0, 1.0 );
	}
	vec4 getTransmissionSample( const in vec2 fragCoord, const in float roughness, const in float ior ) {
		float lod = log2( transmissionSamplerSize.x ) * applyIorToRoughness( roughness, ior );
		return textureBicubic( transmissionSamplerMap, fragCoord.xy, lod );
	}
	vec3 volumeAttenuation( const in float transmissionDistance, const in vec3 attenuationColor, const in float attenuationDistance ) {
		if ( isinf( attenuationDistance ) ) {
			return vec3( 1.0 );
		} else {
			vec3 attenuationCoefficient = -log( attenuationColor ) / attenuationDistance;
			vec3 transmittance = exp( - attenuationCoefficient * transmissionDistance );			return transmittance;
		}
	}
	vec4 getIBLVolumeRefraction( const in vec3 n, const in vec3 v, const in float roughness, const in vec3 diffuseColor,
		const in vec3 specularColor, const in float specularF90, const in vec3 position, const in mat4 modelMatrix,
		const in mat4 viewMatrix, const in mat4 projMatrix, const in float dispersion, const in float ior, const in float thickness,
		const in vec3 attenuationColor, const in float attenuationDistance ) {
		vec4 transmittedLight;
		vec3 transmittance;
		#ifdef USE_DISPERSION
			float halfSpread = ( ior - 1.0 ) * 0.025 * dispersion;
			vec3 iors = vec3( ior - halfSpread, ior, ior + halfSpread );
			for ( int i = 0; i < 3; i ++ ) {
				vec3 transmissionRay = getVolumeTransmissionRay( n, v, thickness, iors[ i ], modelMatrix );
				vec3 refractedRayExit = position + transmissionRay;
				vec4 ndcPos = projMatrix * viewMatrix * vec4( refractedRayExit, 1.0 );
				vec2 refractionCoords = ndcPos.xy / ndcPos.w;
				refractionCoords += 1.0;
				refractionCoords /= 2.0;
				vec4 transmissionSample = getTransmissionSample( refractionCoords, roughness, iors[ i ] );
				transmittedLight[ i ] = transmissionSample[ i ];
				transmittedLight.a += transmissionSample.a;
				transmittance[ i ] = diffuseColor[ i ] * volumeAttenuation( length( transmissionRay ), attenuationColor, attenuationDistance )[ i ];
			}
			transmittedLight.a /= 3.0;
		#else
			vec3 transmissionRay = getVolumeTransmissionRay( n, v, thickness, ior, modelMatrix );
			vec3 refractedRayExit = position + transmissionRay;
			vec4 ndcPos = projMatrix * viewMatrix * vec4( refractedRayExit, 1.0 );
			vec2 refractionCoords = ndcPos.xy / ndcPos.w;
			refractionCoords += 1.0;
			refractionCoords /= 2.0;
			transmittedLight = getTransmissionSample( refractionCoords, roughness, ior );
			transmittance = diffuseColor * volumeAttenuation( length( transmissionRay ), attenuationColor, attenuationDistance );
		#endif
		vec3 attenuatedColor = transmittance * transmittedLight.rgb;
		vec3 F = EnvironmentBRDF( n, v, specularColor, specularF90, roughness );
		float transmittanceFactor = ( transmittance.r + transmittance.g + transmittance.b ) / 3.0;
		return vec4( ( 1.0 - F ) * attenuatedColor, 1.0 - ( 1.0 - transmittedLight.a ) * transmittanceFactor );
	}
#endif`,KC=`#if defined( USE_UV ) || defined( USE_ANISOTROPY )
	varying vec2 vUv;
#endif
#ifdef USE_MAP
	varying vec2 vMapUv;
#endif
#ifdef USE_ALPHAMAP
	varying vec2 vAlphaMapUv;
#endif
#ifdef USE_LIGHTMAP
	varying vec2 vLightMapUv;
#endif
#ifdef USE_AOMAP
	varying vec2 vAoMapUv;
#endif
#ifdef USE_BUMPMAP
	varying vec2 vBumpMapUv;
#endif
#ifdef USE_NORMALMAP
	varying vec2 vNormalMapUv;
#endif
#ifdef USE_EMISSIVEMAP
	varying vec2 vEmissiveMapUv;
#endif
#ifdef USE_METALNESSMAP
	varying vec2 vMetalnessMapUv;
#endif
#ifdef USE_ROUGHNESSMAP
	varying vec2 vRoughnessMapUv;
#endif
#ifdef USE_ANISOTROPYMAP
	varying vec2 vAnisotropyMapUv;
#endif
#ifdef USE_CLEARCOATMAP
	varying vec2 vClearcoatMapUv;
#endif
#ifdef USE_CLEARCOAT_NORMALMAP
	varying vec2 vClearcoatNormalMapUv;
#endif
#ifdef USE_CLEARCOAT_ROUGHNESSMAP
	varying vec2 vClearcoatRoughnessMapUv;
#endif
#ifdef USE_IRIDESCENCEMAP
	varying vec2 vIridescenceMapUv;
#endif
#ifdef USE_IRIDESCENCE_THICKNESSMAP
	varying vec2 vIridescenceThicknessMapUv;
#endif
#ifdef USE_SHEEN_COLORMAP
	varying vec2 vSheenColorMapUv;
#endif
#ifdef USE_SHEEN_ROUGHNESSMAP
	varying vec2 vSheenRoughnessMapUv;
#endif
#ifdef USE_SPECULARMAP
	varying vec2 vSpecularMapUv;
#endif
#ifdef USE_SPECULAR_COLORMAP
	varying vec2 vSpecularColorMapUv;
#endif
#ifdef USE_SPECULAR_INTENSITYMAP
	varying vec2 vSpecularIntensityMapUv;
#endif
#ifdef USE_TRANSMISSIONMAP
	uniform mat3 transmissionMapTransform;
	varying vec2 vTransmissionMapUv;
#endif
#ifdef USE_THICKNESSMAP
	uniform mat3 thicknessMapTransform;
	varying vec2 vThicknessMapUv;
#endif`,JC=`#if defined( USE_UV ) || defined( USE_ANISOTROPY )
	varying vec2 vUv;
#endif
#ifdef USE_MAP
	uniform mat3 mapTransform;
	varying vec2 vMapUv;
#endif
#ifdef USE_ALPHAMAP
	uniform mat3 alphaMapTransform;
	varying vec2 vAlphaMapUv;
#endif
#ifdef USE_LIGHTMAP
	uniform mat3 lightMapTransform;
	varying vec2 vLightMapUv;
#endif
#ifdef USE_AOMAP
	uniform mat3 aoMapTransform;
	varying vec2 vAoMapUv;
#endif
#ifdef USE_BUMPMAP
	uniform mat3 bumpMapTransform;
	varying vec2 vBumpMapUv;
#endif
#ifdef USE_NORMALMAP
	uniform mat3 normalMapTransform;
	varying vec2 vNormalMapUv;
#endif
#ifdef USE_DISPLACEMENTMAP
	uniform mat3 displacementMapTransform;
	varying vec2 vDisplacementMapUv;
#endif
#ifdef USE_EMISSIVEMAP
	uniform mat3 emissiveMapTransform;
	varying vec2 vEmissiveMapUv;
#endif
#ifdef USE_METALNESSMAP
	uniform mat3 metalnessMapTransform;
	varying vec2 vMetalnessMapUv;
#endif
#ifdef USE_ROUGHNESSMAP
	uniform mat3 roughnessMapTransform;
	varying vec2 vRoughnessMapUv;
#endif
#ifdef USE_ANISOTROPYMAP
	uniform mat3 anisotropyMapTransform;
	varying vec2 vAnisotropyMapUv;
#endif
#ifdef USE_CLEARCOATMAP
	uniform mat3 clearcoatMapTransform;
	varying vec2 vClearcoatMapUv;
#endif
#ifdef USE_CLEARCOAT_NORMALMAP
	uniform mat3 clearcoatNormalMapTransform;
	varying vec2 vClearcoatNormalMapUv;
#endif
#ifdef USE_CLEARCOAT_ROUGHNESSMAP
	uniform mat3 clearcoatRoughnessMapTransform;
	varying vec2 vClearcoatRoughnessMapUv;
#endif
#ifdef USE_SHEEN_COLORMAP
	uniform mat3 sheenColorMapTransform;
	varying vec2 vSheenColorMapUv;
#endif
#ifdef USE_SHEEN_ROUGHNESSMAP
	uniform mat3 sheenRoughnessMapTransform;
	varying vec2 vSheenRoughnessMapUv;
#endif
#ifdef USE_IRIDESCENCEMAP
	uniform mat3 iridescenceMapTransform;
	varying vec2 vIridescenceMapUv;
#endif
#ifdef USE_IRIDESCENCE_THICKNESSMAP
	uniform mat3 iridescenceThicknessMapTransform;
	varying vec2 vIridescenceThicknessMapUv;
#endif
#ifdef USE_SPECULARMAP
	uniform mat3 specularMapTransform;
	varying vec2 vSpecularMapUv;
#endif
#ifdef USE_SPECULAR_COLORMAP
	uniform mat3 specularColorMapTransform;
	varying vec2 vSpecularColorMapUv;
#endif
#ifdef USE_SPECULAR_INTENSITYMAP
	uniform mat3 specularIntensityMapTransform;
	varying vec2 vSpecularIntensityMapUv;
#endif
#ifdef USE_TRANSMISSIONMAP
	uniform mat3 transmissionMapTransform;
	varying vec2 vTransmissionMapUv;
#endif
#ifdef USE_THICKNESSMAP
	uniform mat3 thicknessMapTransform;
	varying vec2 vThicknessMapUv;
#endif`,QC=`#if defined( USE_UV ) || defined( USE_ANISOTROPY )
	vUv = vec3( uv, 1 ).xy;
#endif
#ifdef USE_MAP
	vMapUv = ( mapTransform * vec3( MAP_UV, 1 ) ).xy;
#endif
#ifdef USE_ALPHAMAP
	vAlphaMapUv = ( alphaMapTransform * vec3( ALPHAMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_LIGHTMAP
	vLightMapUv = ( lightMapTransform * vec3( LIGHTMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_AOMAP
	vAoMapUv = ( aoMapTransform * vec3( AOMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_BUMPMAP
	vBumpMapUv = ( bumpMapTransform * vec3( BUMPMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_NORMALMAP
	vNormalMapUv = ( normalMapTransform * vec3( NORMALMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_DISPLACEMENTMAP
	vDisplacementMapUv = ( displacementMapTransform * vec3( DISPLACEMENTMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_EMISSIVEMAP
	vEmissiveMapUv = ( emissiveMapTransform * vec3( EMISSIVEMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_METALNESSMAP
	vMetalnessMapUv = ( metalnessMapTransform * vec3( METALNESSMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_ROUGHNESSMAP
	vRoughnessMapUv = ( roughnessMapTransform * vec3( ROUGHNESSMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_ANISOTROPYMAP
	vAnisotropyMapUv = ( anisotropyMapTransform * vec3( ANISOTROPYMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_CLEARCOATMAP
	vClearcoatMapUv = ( clearcoatMapTransform * vec3( CLEARCOATMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_CLEARCOAT_NORMALMAP
	vClearcoatNormalMapUv = ( clearcoatNormalMapTransform * vec3( CLEARCOAT_NORMALMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_CLEARCOAT_ROUGHNESSMAP
	vClearcoatRoughnessMapUv = ( clearcoatRoughnessMapTransform * vec3( CLEARCOAT_ROUGHNESSMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_IRIDESCENCEMAP
	vIridescenceMapUv = ( iridescenceMapTransform * vec3( IRIDESCENCEMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_IRIDESCENCE_THICKNESSMAP
	vIridescenceThicknessMapUv = ( iridescenceThicknessMapTransform * vec3( IRIDESCENCE_THICKNESSMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_SHEEN_COLORMAP
	vSheenColorMapUv = ( sheenColorMapTransform * vec3( SHEEN_COLORMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_SHEEN_ROUGHNESSMAP
	vSheenRoughnessMapUv = ( sheenRoughnessMapTransform * vec3( SHEEN_ROUGHNESSMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_SPECULARMAP
	vSpecularMapUv = ( specularMapTransform * vec3( SPECULARMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_SPECULAR_COLORMAP
	vSpecularColorMapUv = ( specularColorMapTransform * vec3( SPECULAR_COLORMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_SPECULAR_INTENSITYMAP
	vSpecularIntensityMapUv = ( specularIntensityMapTransform * vec3( SPECULAR_INTENSITYMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_TRANSMISSIONMAP
	vTransmissionMapUv = ( transmissionMapTransform * vec3( TRANSMISSIONMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_THICKNESSMAP
	vThicknessMapUv = ( thicknessMapTransform * vec3( THICKNESSMAP_UV, 1 ) ).xy;
#endif`,$C=`#if defined( USE_ENVMAP ) || defined( DISTANCE ) || defined ( USE_SHADOWMAP ) || defined ( USE_TRANSMISSION ) || NUM_SPOT_LIGHT_COORDS > 0
	vec4 worldPosition = vec4( transformed, 1.0 );
	#ifdef USE_BATCHING
		worldPosition = batchingMatrix * worldPosition;
	#endif
	#ifdef USE_INSTANCING
		worldPosition = instanceMatrix * worldPosition;
	#endif
	worldPosition = modelMatrix * worldPosition;
#endif`;const tR=`varying vec2 vUv;
uniform mat3 uvTransform;
void main() {
	vUv = ( uvTransform * vec3( uv, 1 ) ).xy;
	gl_Position = vec4( position.xy, 1.0, 1.0 );
}`,eR=`uniform sampler2D t2D;
uniform float backgroundIntensity;
varying vec2 vUv;
void main() {
	vec4 texColor = texture2D( t2D, vUv );
	#ifdef DECODE_VIDEO_TEXTURE
		texColor = vec4( mix( pow( texColor.rgb * 0.9478672986 + vec3( 0.0521327014 ), vec3( 2.4 ) ), texColor.rgb * 0.0773993808, vec3( lessThanEqual( texColor.rgb, vec3( 0.04045 ) ) ) ), texColor.w );
	#endif
	texColor.rgb *= backgroundIntensity;
	gl_FragColor = texColor;
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
}`,nR=`varying vec3 vWorldDirection;
#include <common>
void main() {
	vWorldDirection = transformDirection( position, modelMatrix );
	#include <begin_vertex>
	#include <project_vertex>
	gl_Position.z = gl_Position.w;
}`,iR=`#ifdef ENVMAP_TYPE_CUBE
	uniform samplerCube envMap;
#elif defined( ENVMAP_TYPE_CUBE_UV )
	uniform sampler2D envMap;
#endif
uniform float flipEnvMap;
uniform float backgroundBlurriness;
uniform float backgroundIntensity;
uniform mat3 backgroundRotation;
varying vec3 vWorldDirection;
#include <cube_uv_reflection_fragment>
void main() {
	#ifdef ENVMAP_TYPE_CUBE
		vec4 texColor = textureCube( envMap, backgroundRotation * vec3( flipEnvMap * vWorldDirection.x, vWorldDirection.yz ) );
	#elif defined( ENVMAP_TYPE_CUBE_UV )
		vec4 texColor = textureCubeUV( envMap, backgroundRotation * vWorldDirection, backgroundBlurriness );
	#else
		vec4 texColor = vec4( 0.0, 0.0, 0.0, 1.0 );
	#endif
	texColor.rgb *= backgroundIntensity;
	gl_FragColor = texColor;
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
}`,sR=`varying vec3 vWorldDirection;
#include <common>
void main() {
	vWorldDirection = transformDirection( position, modelMatrix );
	#include <begin_vertex>
	#include <project_vertex>
	gl_Position.z = gl_Position.w;
}`,aR=`uniform samplerCube tCube;
uniform float tFlip;
uniform float opacity;
varying vec3 vWorldDirection;
void main() {
	vec4 texColor = textureCube( tCube, vec3( tFlip * vWorldDirection.x, vWorldDirection.yz ) );
	gl_FragColor = texColor;
	gl_FragColor.a *= opacity;
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
}`,rR=`#include <common>
#include <batching_pars_vertex>
#include <uv_pars_vertex>
#include <displacementmap_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
varying vec2 vHighPrecisionZW;
void main() {
	#include <uv_vertex>
	#include <batching_vertex>
	#include <skinbase_vertex>
	#include <morphinstance_vertex>
	#ifdef USE_DISPLACEMENTMAP
		#include <beginnormal_vertex>
		#include <morphnormal_vertex>
		#include <skinnormal_vertex>
	#endif
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	vHighPrecisionZW = gl_Position.zw;
}`,oR=`#if DEPTH_PACKING == 3200
	uniform float opacity;
#endif
#include <common>
#include <packing>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <alphahash_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
varying vec2 vHighPrecisionZW;
void main() {
	vec4 diffuseColor = vec4( 1.0 );
	#include <clipping_planes_fragment>
	#if DEPTH_PACKING == 3200
		diffuseColor.a = opacity;
	#endif
	#include <map_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <alphahash_fragment>
	#include <logdepthbuf_fragment>
	#ifdef USE_REVERSEDEPTHBUF
		float fragCoordZ = vHighPrecisionZW[ 0 ] / vHighPrecisionZW[ 1 ];
	#else
		float fragCoordZ = 0.5 * vHighPrecisionZW[ 0 ] / vHighPrecisionZW[ 1 ] + 0.5;
	#endif
	#if DEPTH_PACKING == 3200
		gl_FragColor = vec4( vec3( 1.0 - fragCoordZ ), opacity );
	#elif DEPTH_PACKING == 3201
		gl_FragColor = packDepthToRGBA( fragCoordZ );
	#elif DEPTH_PACKING == 3202
		gl_FragColor = vec4( packDepthToRGB( fragCoordZ ), 1.0 );
	#elif DEPTH_PACKING == 3203
		gl_FragColor = vec4( packDepthToRG( fragCoordZ ), 0.0, 1.0 );
	#endif
}`,lR=`#define DISTANCE
varying vec3 vWorldPosition;
#include <common>
#include <batching_pars_vertex>
#include <uv_pars_vertex>
#include <displacementmap_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <batching_vertex>
	#include <skinbase_vertex>
	#include <morphinstance_vertex>
	#ifdef USE_DISPLACEMENTMAP
		#include <beginnormal_vertex>
		#include <morphnormal_vertex>
		#include <skinnormal_vertex>
	#endif
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <worldpos_vertex>
	#include <clipping_planes_vertex>
	vWorldPosition = worldPosition.xyz;
}`,cR=`#define DISTANCE
uniform vec3 referencePosition;
uniform float nearDistance;
uniform float farDistance;
varying vec3 vWorldPosition;
#include <common>
#include <packing>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <alphahash_pars_fragment>
#include <clipping_planes_pars_fragment>
void main () {
	vec4 diffuseColor = vec4( 1.0 );
	#include <clipping_planes_fragment>
	#include <map_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <alphahash_fragment>
	float dist = length( vWorldPosition - referencePosition );
	dist = ( dist - nearDistance ) / ( farDistance - nearDistance );
	dist = saturate( dist );
	gl_FragColor = packDepthToRGBA( dist );
}`,uR=`varying vec3 vWorldDirection;
#include <common>
void main() {
	vWorldDirection = transformDirection( position, modelMatrix );
	#include <begin_vertex>
	#include <project_vertex>
}`,hR=`uniform sampler2D tEquirect;
varying vec3 vWorldDirection;
#include <common>
void main() {
	vec3 direction = normalize( vWorldDirection );
	vec2 sampleUV = equirectUv( direction );
	gl_FragColor = texture2D( tEquirect, sampleUV );
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
}`,fR=`uniform float scale;
attribute float lineDistance;
varying float vLineDistance;
#include <common>
#include <uv_pars_vertex>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <morphtarget_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	vLineDistance = scale * lineDistance;
	#include <uv_vertex>
	#include <color_vertex>
	#include <morphinstance_vertex>
	#include <morphcolor_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	#include <fog_vertex>
}`,dR=`uniform vec3 diffuse;
uniform float opacity;
uniform float dashSize;
uniform float totalSize;
varying float vLineDistance;
#include <common>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <fog_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <clipping_planes_fragment>
	if ( mod( vLineDistance, totalSize ) > dashSize ) {
		discard;
	}
	vec3 outgoingLight = vec3( 0.0 );
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	outgoingLight = diffuseColor.rgb;
	#include <opaque_fragment>
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
}`,pR=`#include <common>
#include <batching_pars_vertex>
#include <uv_pars_vertex>
#include <envmap_pars_vertex>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <color_vertex>
	#include <morphinstance_vertex>
	#include <morphcolor_vertex>
	#include <batching_vertex>
	#if defined ( USE_ENVMAP ) || defined ( USE_SKINNING )
		#include <beginnormal_vertex>
		#include <morphnormal_vertex>
		#include <skinbase_vertex>
		#include <skinnormal_vertex>
		#include <defaultnormal_vertex>
	#endif
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	#include <worldpos_vertex>
	#include <envmap_vertex>
	#include <fog_vertex>
}`,mR=`uniform vec3 diffuse;
uniform float opacity;
#ifndef FLAT_SHADED
	varying vec3 vNormal;
#endif
#include <common>
#include <dithering_pars_fragment>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <alphahash_pars_fragment>
#include <aomap_pars_fragment>
#include <lightmap_pars_fragment>
#include <envmap_common_pars_fragment>
#include <envmap_pars_fragment>
#include <fog_pars_fragment>
#include <specularmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <clipping_planes_fragment>
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <alphahash_fragment>
	#include <specularmap_fragment>
	ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );
	#ifdef USE_LIGHTMAP
		vec4 lightMapTexel = texture2D( lightMap, vLightMapUv );
		reflectedLight.indirectDiffuse += lightMapTexel.rgb * lightMapIntensity * RECIPROCAL_PI;
	#else
		reflectedLight.indirectDiffuse += vec3( 1.0 );
	#endif
	#include <aomap_fragment>
	reflectedLight.indirectDiffuse *= diffuseColor.rgb;
	vec3 outgoingLight = reflectedLight.indirectDiffuse;
	#include <envmap_fragment>
	#include <opaque_fragment>
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
	#include <dithering_fragment>
}`,gR=`#define LAMBERT
varying vec3 vViewPosition;
#include <common>
#include <batching_pars_vertex>
#include <uv_pars_vertex>
#include <displacementmap_pars_vertex>
#include <envmap_pars_vertex>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <normal_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <shadowmap_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <color_vertex>
	#include <morphinstance_vertex>
	#include <morphcolor_vertex>
	#include <batching_vertex>
	#include <beginnormal_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <normal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	vViewPosition = - mvPosition.xyz;
	#include <worldpos_vertex>
	#include <envmap_vertex>
	#include <shadowmap_vertex>
	#include <fog_vertex>
}`,vR=`#define LAMBERT
uniform vec3 diffuse;
uniform vec3 emissive;
uniform float opacity;
#include <common>
#include <packing>
#include <dithering_pars_fragment>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <alphahash_pars_fragment>
#include <aomap_pars_fragment>
#include <lightmap_pars_fragment>
#include <emissivemap_pars_fragment>
#include <envmap_common_pars_fragment>
#include <envmap_pars_fragment>
#include <fog_pars_fragment>
#include <bsdfs>
#include <lights_pars_begin>
#include <normal_pars_fragment>
#include <lights_lambert_pars_fragment>
#include <shadowmap_pars_fragment>
#include <bumpmap_pars_fragment>
#include <normalmap_pars_fragment>
#include <specularmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <clipping_planes_fragment>
	ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );
	vec3 totalEmissiveRadiance = emissive;
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <alphahash_fragment>
	#include <specularmap_fragment>
	#include <normal_fragment_begin>
	#include <normal_fragment_maps>
	#include <emissivemap_fragment>
	#include <lights_lambert_fragment>
	#include <lights_fragment_begin>
	#include <lights_fragment_maps>
	#include <lights_fragment_end>
	#include <aomap_fragment>
	vec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + totalEmissiveRadiance;
	#include <envmap_fragment>
	#include <opaque_fragment>
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
	#include <dithering_fragment>
}`,_R=`#define MATCAP
varying vec3 vViewPosition;
#include <common>
#include <batching_pars_vertex>
#include <uv_pars_vertex>
#include <color_pars_vertex>
#include <displacementmap_pars_vertex>
#include <fog_pars_vertex>
#include <normal_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <color_vertex>
	#include <morphinstance_vertex>
	#include <morphcolor_vertex>
	#include <batching_vertex>
	#include <beginnormal_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <normal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	#include <fog_vertex>
	vViewPosition = - mvPosition.xyz;
}`,yR=`#define MATCAP
uniform vec3 diffuse;
uniform float opacity;
uniform sampler2D matcap;
varying vec3 vViewPosition;
#include <common>
#include <dithering_pars_fragment>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <alphahash_pars_fragment>
#include <fog_pars_fragment>
#include <normal_pars_fragment>
#include <bumpmap_pars_fragment>
#include <normalmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <clipping_planes_fragment>
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <alphahash_fragment>
	#include <normal_fragment_begin>
	#include <normal_fragment_maps>
	vec3 viewDir = normalize( vViewPosition );
	vec3 x = normalize( vec3( viewDir.z, 0.0, - viewDir.x ) );
	vec3 y = cross( viewDir, x );
	vec2 uv = vec2( dot( x, normal ), dot( y, normal ) ) * 0.495 + 0.5;
	#ifdef USE_MATCAP
		vec4 matcapColor = texture2D( matcap, uv );
	#else
		vec4 matcapColor = vec4( vec3( mix( 0.2, 0.8, uv.y ) ), 1.0 );
	#endif
	vec3 outgoingLight = diffuseColor.rgb * matcapColor.rgb;
	#include <opaque_fragment>
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
	#include <dithering_fragment>
}`,xR=`#define NORMAL
#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP_TANGENTSPACE )
	varying vec3 vViewPosition;
#endif
#include <common>
#include <batching_pars_vertex>
#include <uv_pars_vertex>
#include <displacementmap_pars_vertex>
#include <normal_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <batching_vertex>
	#include <beginnormal_vertex>
	#include <morphinstance_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <normal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP_TANGENTSPACE )
	vViewPosition = - mvPosition.xyz;
#endif
}`,SR=`#define NORMAL
uniform float opacity;
#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP_TANGENTSPACE )
	varying vec3 vViewPosition;
#endif
#include <packing>
#include <uv_pars_fragment>
#include <normal_pars_fragment>
#include <bumpmap_pars_fragment>
#include <normalmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	vec4 diffuseColor = vec4( 0.0, 0.0, 0.0, opacity );
	#include <clipping_planes_fragment>
	#include <logdepthbuf_fragment>
	#include <normal_fragment_begin>
	#include <normal_fragment_maps>
	gl_FragColor = vec4( packNormalToRGB( normal ), diffuseColor.a );
	#ifdef OPAQUE
		gl_FragColor.a = 1.0;
	#endif
}`,MR=`#define PHONG
varying vec3 vViewPosition;
#include <common>
#include <batching_pars_vertex>
#include <uv_pars_vertex>
#include <displacementmap_pars_vertex>
#include <envmap_pars_vertex>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <normal_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <shadowmap_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <color_vertex>
	#include <morphcolor_vertex>
	#include <batching_vertex>
	#include <beginnormal_vertex>
	#include <morphinstance_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <normal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	vViewPosition = - mvPosition.xyz;
	#include <worldpos_vertex>
	#include <envmap_vertex>
	#include <shadowmap_vertex>
	#include <fog_vertex>
}`,bR=`#define PHONG
uniform vec3 diffuse;
uniform vec3 emissive;
uniform vec3 specular;
uniform float shininess;
uniform float opacity;
#include <common>
#include <packing>
#include <dithering_pars_fragment>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <alphahash_pars_fragment>
#include <aomap_pars_fragment>
#include <lightmap_pars_fragment>
#include <emissivemap_pars_fragment>
#include <envmap_common_pars_fragment>
#include <envmap_pars_fragment>
#include <fog_pars_fragment>
#include <bsdfs>
#include <lights_pars_begin>
#include <normal_pars_fragment>
#include <lights_phong_pars_fragment>
#include <shadowmap_pars_fragment>
#include <bumpmap_pars_fragment>
#include <normalmap_pars_fragment>
#include <specularmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <clipping_planes_fragment>
	ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );
	vec3 totalEmissiveRadiance = emissive;
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <alphahash_fragment>
	#include <specularmap_fragment>
	#include <normal_fragment_begin>
	#include <normal_fragment_maps>
	#include <emissivemap_fragment>
	#include <lights_phong_fragment>
	#include <lights_fragment_begin>
	#include <lights_fragment_maps>
	#include <lights_fragment_end>
	#include <aomap_fragment>
	vec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + reflectedLight.directSpecular + reflectedLight.indirectSpecular + totalEmissiveRadiance;
	#include <envmap_fragment>
	#include <opaque_fragment>
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
	#include <dithering_fragment>
}`,ER=`#define STANDARD
varying vec3 vViewPosition;
#ifdef USE_TRANSMISSION
	varying vec3 vWorldPosition;
#endif
#include <common>
#include <batching_pars_vertex>
#include <uv_pars_vertex>
#include <displacementmap_pars_vertex>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <normal_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <shadowmap_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <color_vertex>
	#include <morphinstance_vertex>
	#include <morphcolor_vertex>
	#include <batching_vertex>
	#include <beginnormal_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <normal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	vViewPosition = - mvPosition.xyz;
	#include <worldpos_vertex>
	#include <shadowmap_vertex>
	#include <fog_vertex>
#ifdef USE_TRANSMISSION
	vWorldPosition = worldPosition.xyz;
#endif
}`,TR=`#define STANDARD
#ifdef PHYSICAL
	#define IOR
	#define USE_SPECULAR
#endif
uniform vec3 diffuse;
uniform vec3 emissive;
uniform float roughness;
uniform float metalness;
uniform float opacity;
#ifdef IOR
	uniform float ior;
#endif
#ifdef USE_SPECULAR
	uniform float specularIntensity;
	uniform vec3 specularColor;
	#ifdef USE_SPECULAR_COLORMAP
		uniform sampler2D specularColorMap;
	#endif
	#ifdef USE_SPECULAR_INTENSITYMAP
		uniform sampler2D specularIntensityMap;
	#endif
#endif
#ifdef USE_CLEARCOAT
	uniform float clearcoat;
	uniform float clearcoatRoughness;
#endif
#ifdef USE_DISPERSION
	uniform float dispersion;
#endif
#ifdef USE_IRIDESCENCE
	uniform float iridescence;
	uniform float iridescenceIOR;
	uniform float iridescenceThicknessMinimum;
	uniform float iridescenceThicknessMaximum;
#endif
#ifdef USE_SHEEN
	uniform vec3 sheenColor;
	uniform float sheenRoughness;
	#ifdef USE_SHEEN_COLORMAP
		uniform sampler2D sheenColorMap;
	#endif
	#ifdef USE_SHEEN_ROUGHNESSMAP
		uniform sampler2D sheenRoughnessMap;
	#endif
#endif
#ifdef USE_ANISOTROPY
	uniform vec2 anisotropyVector;
	#ifdef USE_ANISOTROPYMAP
		uniform sampler2D anisotropyMap;
	#endif
#endif
varying vec3 vViewPosition;
#include <common>
#include <packing>
#include <dithering_pars_fragment>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <alphahash_pars_fragment>
#include <aomap_pars_fragment>
#include <lightmap_pars_fragment>
#include <emissivemap_pars_fragment>
#include <iridescence_fragment>
#include <cube_uv_reflection_fragment>
#include <envmap_common_pars_fragment>
#include <envmap_physical_pars_fragment>
#include <fog_pars_fragment>
#include <lights_pars_begin>
#include <normal_pars_fragment>
#include <lights_physical_pars_fragment>
#include <transmission_pars_fragment>
#include <shadowmap_pars_fragment>
#include <bumpmap_pars_fragment>
#include <normalmap_pars_fragment>
#include <clearcoat_pars_fragment>
#include <iridescence_pars_fragment>
#include <roughnessmap_pars_fragment>
#include <metalnessmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <clipping_planes_fragment>
	ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );
	vec3 totalEmissiveRadiance = emissive;
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <alphahash_fragment>
	#include <roughnessmap_fragment>
	#include <metalnessmap_fragment>
	#include <normal_fragment_begin>
	#include <normal_fragment_maps>
	#include <clearcoat_normal_fragment_begin>
	#include <clearcoat_normal_fragment_maps>
	#include <emissivemap_fragment>
	#include <lights_physical_fragment>
	#include <lights_fragment_begin>
	#include <lights_fragment_maps>
	#include <lights_fragment_end>
	#include <aomap_fragment>
	vec3 totalDiffuse = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse;
	vec3 totalSpecular = reflectedLight.directSpecular + reflectedLight.indirectSpecular;
	#include <transmission_fragment>
	vec3 outgoingLight = totalDiffuse + totalSpecular + totalEmissiveRadiance;
	#ifdef USE_SHEEN
		float sheenEnergyComp = 1.0 - 0.157 * max3( material.sheenColor );
		outgoingLight = outgoingLight * sheenEnergyComp + sheenSpecularDirect + sheenSpecularIndirect;
	#endif
	#ifdef USE_CLEARCOAT
		float dotNVcc = saturate( dot( geometryClearcoatNormal, geometryViewDir ) );
		vec3 Fcc = F_Schlick( material.clearcoatF0, material.clearcoatF90, dotNVcc );
		outgoingLight = outgoingLight * ( 1.0 - material.clearcoat * Fcc ) + ( clearcoatSpecularDirect + clearcoatSpecularIndirect ) * material.clearcoat;
	#endif
	#include <opaque_fragment>
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
	#include <dithering_fragment>
}`,AR=`#define TOON
varying vec3 vViewPosition;
#include <common>
#include <batching_pars_vertex>
#include <uv_pars_vertex>
#include <displacementmap_pars_vertex>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <normal_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <shadowmap_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <color_vertex>
	#include <morphinstance_vertex>
	#include <morphcolor_vertex>
	#include <batching_vertex>
	#include <beginnormal_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <normal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	vViewPosition = - mvPosition.xyz;
	#include <worldpos_vertex>
	#include <shadowmap_vertex>
	#include <fog_vertex>
}`,wR=`#define TOON
uniform vec3 diffuse;
uniform vec3 emissive;
uniform float opacity;
#include <common>
#include <packing>
#include <dithering_pars_fragment>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <alphahash_pars_fragment>
#include <aomap_pars_fragment>
#include <lightmap_pars_fragment>
#include <emissivemap_pars_fragment>
#include <gradientmap_pars_fragment>
#include <fog_pars_fragment>
#include <bsdfs>
#include <lights_pars_begin>
#include <normal_pars_fragment>
#include <lights_toon_pars_fragment>
#include <shadowmap_pars_fragment>
#include <bumpmap_pars_fragment>
#include <normalmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <clipping_planes_fragment>
	ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );
	vec3 totalEmissiveRadiance = emissive;
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <alphahash_fragment>
	#include <normal_fragment_begin>
	#include <normal_fragment_maps>
	#include <emissivemap_fragment>
	#include <lights_toon_fragment>
	#include <lights_fragment_begin>
	#include <lights_fragment_maps>
	#include <lights_fragment_end>
	#include <aomap_fragment>
	vec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + totalEmissiveRadiance;
	#include <opaque_fragment>
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
	#include <dithering_fragment>
}`,CR=`uniform float size;
uniform float scale;
#include <common>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <morphtarget_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
#ifdef USE_POINTS_UV
	varying vec2 vUv;
	uniform mat3 uvTransform;
#endif
void main() {
	#ifdef USE_POINTS_UV
		vUv = ( uvTransform * vec3( uv, 1 ) ).xy;
	#endif
	#include <color_vertex>
	#include <morphinstance_vertex>
	#include <morphcolor_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <project_vertex>
	gl_PointSize = size;
	#ifdef USE_SIZEATTENUATION
		bool isPerspective = isPerspectiveMatrix( projectionMatrix );
		if ( isPerspective ) gl_PointSize *= ( scale / - mvPosition.z );
	#endif
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	#include <worldpos_vertex>
	#include <fog_vertex>
}`,RR=`uniform vec3 diffuse;
uniform float opacity;
#include <common>
#include <color_pars_fragment>
#include <map_particle_pars_fragment>
#include <alphatest_pars_fragment>
#include <alphahash_pars_fragment>
#include <fog_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <clipping_planes_fragment>
	vec3 outgoingLight = vec3( 0.0 );
	#include <logdepthbuf_fragment>
	#include <map_particle_fragment>
	#include <color_fragment>
	#include <alphatest_fragment>
	#include <alphahash_fragment>
	outgoingLight = diffuseColor.rgb;
	#include <opaque_fragment>
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
}`,DR=`#include <common>
#include <batching_pars_vertex>
#include <fog_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <shadowmap_pars_vertex>
void main() {
	#include <batching_vertex>
	#include <beginnormal_vertex>
	#include <morphinstance_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <worldpos_vertex>
	#include <shadowmap_vertex>
	#include <fog_vertex>
}`,UR=`uniform vec3 color;
uniform float opacity;
#include <common>
#include <packing>
#include <fog_pars_fragment>
#include <bsdfs>
#include <lights_pars_begin>
#include <logdepthbuf_pars_fragment>
#include <shadowmap_pars_fragment>
#include <shadowmask_pars_fragment>
void main() {
	#include <logdepthbuf_fragment>
	gl_FragColor = vec4( color, opacity * ( 1.0 - getShadowMask() ) );
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
	#include <fog_fragment>
}`,NR=`uniform float rotation;
uniform vec2 center;
#include <common>
#include <uv_pars_vertex>
#include <fog_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	vec4 mvPosition = modelViewMatrix[ 3 ];
	vec2 scale = vec2( length( modelMatrix[ 0 ].xyz ), length( modelMatrix[ 1 ].xyz ) );
	#ifndef USE_SIZEATTENUATION
		bool isPerspective = isPerspectiveMatrix( projectionMatrix );
		if ( isPerspective ) scale *= - mvPosition.z;
	#endif
	vec2 alignedPosition = ( position.xy - ( center - vec2( 0.5 ) ) ) * scale;
	vec2 rotatedPosition;
	rotatedPosition.x = cos( rotation ) * alignedPosition.x - sin( rotation ) * alignedPosition.y;
	rotatedPosition.y = sin( rotation ) * alignedPosition.x + cos( rotation ) * alignedPosition.y;
	mvPosition.xy += rotatedPosition;
	gl_Position = projectionMatrix * mvPosition;
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	#include <fog_vertex>
}`,LR=`uniform vec3 diffuse;
uniform float opacity;
#include <common>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <alphahash_pars_fragment>
#include <fog_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <clipping_planes_fragment>
	vec3 outgoingLight = vec3( 0.0 );
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <alphahash_fragment>
	outgoingLight = diffuseColor.rgb;
	#include <opaque_fragment>
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
	#include <fog_fragment>
}`,Me={alphahash_fragment:ew,alphahash_pars_fragment:nw,alphamap_fragment:iw,alphamap_pars_fragment:sw,alphatest_fragment:aw,alphatest_pars_fragment:rw,aomap_fragment:ow,aomap_pars_fragment:lw,batching_pars_vertex:cw,batching_vertex:uw,begin_vertex:hw,beginnormal_vertex:fw,bsdfs:dw,iridescence_fragment:pw,bumpmap_pars_fragment:mw,clipping_planes_fragment:gw,clipping_planes_pars_fragment:vw,clipping_planes_pars_vertex:_w,clipping_planes_vertex:yw,color_fragment:xw,color_pars_fragment:Sw,color_pars_vertex:Mw,color_vertex:bw,common:Ew,cube_uv_reflection_fragment:Tw,defaultnormal_vertex:Aw,displacementmap_pars_vertex:ww,displacementmap_vertex:Cw,emissivemap_fragment:Rw,emissivemap_pars_fragment:Dw,colorspace_fragment:Uw,colorspace_pars_fragment:Nw,envmap_fragment:Lw,envmap_common_pars_fragment:Pw,envmap_pars_fragment:Iw,envmap_pars_vertex:Ow,envmap_physical_pars_fragment:Yw,envmap_vertex:Bw,fog_vertex:zw,fog_pars_vertex:Fw,fog_fragment:Hw,fog_pars_fragment:Vw,gradientmap_pars_fragment:Gw,lightmap_pars_fragment:kw,lights_lambert_fragment:Ww,lights_lambert_pars_fragment:Xw,lights_pars_begin:qw,lights_toon_fragment:jw,lights_toon_pars_fragment:Zw,lights_phong_fragment:Kw,lights_phong_pars_fragment:Jw,lights_physical_fragment:Qw,lights_physical_pars_fragment:$w,lights_fragment_begin:tC,lights_fragment_maps:eC,lights_fragment_end:nC,logdepthbuf_fragment:iC,logdepthbuf_pars_fragment:sC,logdepthbuf_pars_vertex:aC,logdepthbuf_vertex:rC,map_fragment:oC,map_pars_fragment:lC,map_particle_fragment:cC,map_particle_pars_fragment:uC,metalnessmap_fragment:hC,metalnessmap_pars_fragment:fC,morphinstance_vertex:dC,morphcolor_vertex:pC,morphnormal_vertex:mC,morphtarget_pars_vertex:gC,morphtarget_vertex:vC,normal_fragment_begin:_C,normal_fragment_maps:yC,normal_pars_fragment:xC,normal_pars_vertex:SC,normal_vertex:MC,normalmap_pars_fragment:bC,clearcoat_normal_fragment_begin:EC,clearcoat_normal_fragment_maps:TC,clearcoat_pars_fragment:AC,iridescence_pars_fragment:wC,opaque_fragment:CC,packing:RC,premultiplied_alpha_fragment:DC,project_vertex:UC,dithering_fragment:NC,dithering_pars_fragment:LC,roughnessmap_fragment:PC,roughnessmap_pars_fragment:IC,shadowmap_pars_fragment:OC,shadowmap_pars_vertex:BC,shadowmap_vertex:zC,shadowmask_pars_fragment:FC,skinbase_vertex:HC,skinning_pars_vertex:VC,skinning_vertex:GC,skinnormal_vertex:kC,specularmap_fragment:WC,specularmap_pars_fragment:XC,tonemapping_fragment:qC,tonemapping_pars_fragment:YC,transmission_fragment:jC,transmission_pars_fragment:ZC,uv_pars_fragment:KC,uv_pars_vertex:JC,uv_vertex:QC,worldpos_vertex:$C,background_vert:tR,background_frag:eR,backgroundCube_vert:nR,backgroundCube_frag:iR,cube_vert:sR,cube_frag:aR,depth_vert:rR,depth_frag:oR,distanceRGBA_vert:lR,distanceRGBA_frag:cR,equirect_vert:uR,equirect_frag:hR,linedashed_vert:fR,linedashed_frag:dR,meshbasic_vert:pR,meshbasic_frag:mR,meshlambert_vert:gR,meshlambert_frag:vR,meshmatcap_vert:_R,meshmatcap_frag:yR,meshnormal_vert:xR,meshnormal_frag:SR,meshphong_vert:MR,meshphong_frag:bR,meshphysical_vert:ER,meshphysical_frag:TR,meshtoon_vert:AR,meshtoon_frag:wR,points_vert:CR,points_frag:RR,shadow_vert:DR,shadow_frag:UR,sprite_vert:NR,sprite_frag:LR},Bt={common:{diffuse:{value:new kt(16777215)},opacity:{value:1},map:{value:null},mapTransform:{value:new ve},alphaMap:{value:null},alphaMapTransform:{value:new ve},alphaTest:{value:0}},specularmap:{specularMap:{value:null},specularMapTransform:{value:new ve}},envmap:{envMap:{value:null},envMapRotation:{value:new ve},flipEnvMap:{value:-1},reflectivity:{value:1},ior:{value:1.5},refractionRatio:{value:.98}},aomap:{aoMap:{value:null},aoMapIntensity:{value:1},aoMapTransform:{value:new ve}},lightmap:{lightMap:{value:null},lightMapIntensity:{value:1},lightMapTransform:{value:new ve}},bumpmap:{bumpMap:{value:null},bumpMapTransform:{value:new ve},bumpScale:{value:1}},normalmap:{normalMap:{value:null},normalMapTransform:{value:new ve},normalScale:{value:new dt(1,1)}},displacementmap:{displacementMap:{value:null},displacementMapTransform:{value:new ve},displacementScale:{value:1},displacementBias:{value:0}},emissivemap:{emissiveMap:{value:null},emissiveMapTransform:{value:new ve}},metalnessmap:{metalnessMap:{value:null},metalnessMapTransform:{value:new ve}},roughnessmap:{roughnessMap:{value:null},roughnessMapTransform:{value:new ve}},gradientmap:{gradientMap:{value:null}},fog:{fogDensity:{value:25e-5},fogNear:{value:1},fogFar:{value:2e3},fogColor:{value:new kt(16777215)}},lights:{ambientLightColor:{value:[]},lightProbe:{value:[]},directionalLights:{value:[],properties:{direction:{},color:{}}},directionalLightShadows:{value:[],properties:{shadowIntensity:1,shadowBias:{},shadowNormalBias:{},shadowRadius:{},shadowMapSize:{}}},directionalShadowMap:{value:[]},directionalShadowMatrix:{value:[]},spotLights:{value:[],properties:{color:{},position:{},direction:{},distance:{},coneCos:{},penumbraCos:{},decay:{}}},spotLightShadows:{value:[],properties:{shadowIntensity:1,shadowBias:{},shadowNormalBias:{},shadowRadius:{},shadowMapSize:{}}},spotLightMap:{value:[]},spotShadowMap:{value:[]},spotLightMatrix:{value:[]},pointLights:{value:[],properties:{color:{},position:{},decay:{},distance:{}}},pointLightShadows:{value:[],properties:{shadowIntensity:1,shadowBias:{},shadowNormalBias:{},shadowRadius:{},shadowMapSize:{},shadowCameraNear:{},shadowCameraFar:{}}},pointShadowMap:{value:[]},pointShadowMatrix:{value:[]},hemisphereLights:{value:[],properties:{direction:{},skyColor:{},groundColor:{}}},rectAreaLights:{value:[],properties:{color:{},position:{},width:{},height:{}}},ltc_1:{value:null},ltc_2:{value:null}},points:{diffuse:{value:new kt(16777215)},opacity:{value:1},size:{value:1},scale:{value:1},map:{value:null},alphaMap:{value:null},alphaMapTransform:{value:new ve},alphaTest:{value:0},uvTransform:{value:new ve}},sprite:{diffuse:{value:new kt(16777215)},opacity:{value:1},center:{value:new dt(.5,.5)},rotation:{value:0},map:{value:null},mapTransform:{value:new ve},alphaMap:{value:null},alphaMapTransform:{value:new ve},alphaTest:{value:0}}},Yi={basic:{uniforms:Zn([Bt.common,Bt.specularmap,Bt.envmap,Bt.aomap,Bt.lightmap,Bt.fog]),vertexShader:Me.meshbasic_vert,fragmentShader:Me.meshbasic_frag},lambert:{uniforms:Zn([Bt.common,Bt.specularmap,Bt.envmap,Bt.aomap,Bt.lightmap,Bt.emissivemap,Bt.bumpmap,Bt.normalmap,Bt.displacementmap,Bt.fog,Bt.lights,{emissive:{value:new kt(0)}}]),vertexShader:Me.meshlambert_vert,fragmentShader:Me.meshlambert_frag},phong:{uniforms:Zn([Bt.common,Bt.specularmap,Bt.envmap,Bt.aomap,Bt.lightmap,Bt.emissivemap,Bt.bumpmap,Bt.normalmap,Bt.displacementmap,Bt.fog,Bt.lights,{emissive:{value:new kt(0)},specular:{value:new kt(1118481)},shininess:{value:30}}]),vertexShader:Me.meshphong_vert,fragmentShader:Me.meshphong_frag},standard:{uniforms:Zn([Bt.common,Bt.envmap,Bt.aomap,Bt.lightmap,Bt.emissivemap,Bt.bumpmap,Bt.normalmap,Bt.displacementmap,Bt.roughnessmap,Bt.metalnessmap,Bt.fog,Bt.lights,{emissive:{value:new kt(0)},roughness:{value:1},metalness:{value:0},envMapIntensity:{value:1}}]),vertexShader:Me.meshphysical_vert,fragmentShader:Me.meshphysical_frag},toon:{uniforms:Zn([Bt.common,Bt.aomap,Bt.lightmap,Bt.emissivemap,Bt.bumpmap,Bt.normalmap,Bt.displacementmap,Bt.gradientmap,Bt.fog,Bt.lights,{emissive:{value:new kt(0)}}]),vertexShader:Me.meshtoon_vert,fragmentShader:Me.meshtoon_frag},matcap:{uniforms:Zn([Bt.common,Bt.bumpmap,Bt.normalmap,Bt.displacementmap,Bt.fog,{matcap:{value:null}}]),vertexShader:Me.meshmatcap_vert,fragmentShader:Me.meshmatcap_frag},points:{uniforms:Zn([Bt.points,Bt.fog]),vertexShader:Me.points_vert,fragmentShader:Me.points_frag},dashed:{uniforms:Zn([Bt.common,Bt.fog,{scale:{value:1},dashSize:{value:1},totalSize:{value:2}}]),vertexShader:Me.linedashed_vert,fragmentShader:Me.linedashed_frag},depth:{uniforms:Zn([Bt.common,Bt.displacementmap]),vertexShader:Me.depth_vert,fragmentShader:Me.depth_frag},normal:{uniforms:Zn([Bt.common,Bt.bumpmap,Bt.normalmap,Bt.displacementmap,{opacity:{value:1}}]),vertexShader:Me.meshnormal_vert,fragmentShader:Me.meshnormal_frag},sprite:{uniforms:Zn([Bt.sprite,Bt.fog]),vertexShader:Me.sprite_vert,fragmentShader:Me.sprite_frag},background:{uniforms:{uvTransform:{value:new ve},t2D:{value:null},backgroundIntensity:{value:1}},vertexShader:Me.background_vert,fragmentShader:Me.background_frag},backgroundCube:{uniforms:{envMap:{value:null},flipEnvMap:{value:-1},backgroundBlurriness:{value:0},backgroundIntensity:{value:1},backgroundRotation:{value:new ve}},vertexShader:Me.backgroundCube_vert,fragmentShader:Me.backgroundCube_frag},cube:{uniforms:{tCube:{value:null},tFlip:{value:-1},opacity:{value:1}},vertexShader:Me.cube_vert,fragmentShader:Me.cube_frag},equirect:{uniforms:{tEquirect:{value:null}},vertexShader:Me.equirect_vert,fragmentShader:Me.equirect_frag},distanceRGBA:{uniforms:Zn([Bt.common,Bt.displacementmap,{referencePosition:{value:new I},nearDistance:{value:1},farDistance:{value:1e3}}]),vertexShader:Me.distanceRGBA_vert,fragmentShader:Me.distanceRGBA_frag},shadow:{uniforms:Zn([Bt.lights,Bt.fog,{color:{value:new kt(0)},opacity:{value:1}}]),vertexShader:Me.shadow_vert,fragmentShader:Me.shadow_frag}};Yi.physical={uniforms:Zn([Yi.standard.uniforms,{clearcoat:{value:0},clearcoatMap:{value:null},clearcoatMapTransform:{value:new ve},clearcoatNormalMap:{value:null},clearcoatNormalMapTransform:{value:new ve},clearcoatNormalScale:{value:new dt(1,1)},clearcoatRoughness:{value:0},clearcoatRoughnessMap:{value:null},clearcoatRoughnessMapTransform:{value:new ve},dispersion:{value:0},iridescence:{value:0},iridescenceMap:{value:null},iridescenceMapTransform:{value:new ve},iridescenceIOR:{value:1.3},iridescenceThicknessMinimum:{value:100},iridescenceThicknessMaximum:{value:400},iridescenceThicknessMap:{value:null},iridescenceThicknessMapTransform:{value:new ve},sheen:{value:0},sheenColor:{value:new kt(0)},sheenColorMap:{value:null},sheenColorMapTransform:{value:new ve},sheenRoughness:{value:1},sheenRoughnessMap:{value:null},sheenRoughnessMapTransform:{value:new ve},transmission:{value:0},transmissionMap:{value:null},transmissionMapTransform:{value:new ve},transmissionSamplerSize:{value:new dt},transmissionSamplerMap:{value:null},thickness:{value:0},thicknessMap:{value:null},thicknessMapTransform:{value:new ve},attenuationDistance:{value:0},attenuationColor:{value:new kt(0)},specularColor:{value:new kt(1,1,1)},specularColorMap:{value:null},specularColorMapTransform:{value:new ve},specularIntensity:{value:1},specularIntensityMap:{value:null},specularIntensityMapTransform:{value:new ve},anisotropyVector:{value:new dt},anisotropyMap:{value:null},anisotropyMapTransform:{value:new ve}}]),vertexShader:Me.meshphysical_vert,fragmentShader:Me.meshphysical_frag};const Gu={r:0,b:0,g:0},tr=new bi,PR=new pe;function IR(s,t,e,n,i,o,l){const c=new kt(0);let h=o===!0?0:1,f,p,m=null,g=0,v=null;function x(A){let T=A.isScene===!0?A.background:null;return T&&T.isTexture&&(T=(A.backgroundBlurriness>0?e:t).get(T)),T}function b(A){let T=!1;const U=x(A);U===null?_(c,h):U&&U.isColor&&(_(U,1),T=!0);const D=s.xr.getEnvironmentBlendMode();D==="additive"?n.buffers.color.setClear(0,0,0,1,l):D==="alpha-blend"&&n.buffers.color.setClear(0,0,0,0,l),(s.autoClear||T)&&(n.buffers.depth.setTest(!0),n.buffers.depth.setMask(!0),n.buffers.color.setMask(!0),s.clear(s.autoClearColor,s.autoClearDepth,s.autoClearStencil))}function S(A,T){const U=x(T);U&&(U.isCubeTexture||U.mapping===Bo)?(p===void 0&&(p=new dn(new xr(1,1,1),new Zi({name:"BackgroundCubeMaterial",uniforms:Lo(Yi.backgroundCube.uniforms),vertexShader:Yi.backgroundCube.vertexShader,fragmentShader:Yi.backgroundCube.fragmentShader,side:Qn,depthTest:!1,depthWrite:!1,fog:!1,allowOverride:!1})),p.geometry.deleteAttribute("normal"),p.geometry.deleteAttribute("uv"),p.onBeforeRender=function(D,P,O){this.matrixWorld.copyPosition(O.matrixWorld)},Object.defineProperty(p.material,"envMap",{get:function(){return this.uniforms.envMap.value}}),i.update(p)),tr.copy(T.backgroundRotation),tr.x*=-1,tr.y*=-1,tr.z*=-1,U.isCubeTexture&&U.isRenderTargetTexture===!1&&(tr.y*=-1,tr.z*=-1),p.material.uniforms.envMap.value=U,p.material.uniforms.flipEnvMap.value=U.isCubeTexture&&U.isRenderTargetTexture===!1?-1:1,p.material.uniforms.backgroundBlurriness.value=T.backgroundBlurriness,p.material.uniforms.backgroundIntensity.value=T.backgroundIntensity,p.material.uniforms.backgroundRotation.value.setFromMatrix4(PR.makeRotationFromEuler(tr)),p.material.toneMapped=Re.getTransfer(U.colorSpace)!==Ve,(m!==U||g!==U.version||v!==s.toneMapping)&&(p.material.needsUpdate=!0,m=U,g=U.version,v=s.toneMapping),p.layers.enableAll(),A.unshift(p,p.geometry,p.material,0,0,null)):U&&U.isTexture&&(f===void 0&&(f=new dn(new Ho(2,2),new Zi({name:"BackgroundMaterial",uniforms:Lo(Yi.background.uniforms),vertexShader:Yi.background.vertexShader,fragmentShader:Yi.background.fragmentShader,side:zs,depthTest:!1,depthWrite:!1,fog:!1,allowOverride:!1})),f.geometry.deleteAttribute("normal"),Object.defineProperty(f.material,"map",{get:function(){return this.uniforms.t2D.value}}),i.update(f)),f.material.uniforms.t2D.value=U,f.material.uniforms.backgroundIntensity.value=T.backgroundIntensity,f.material.toneMapped=Re.getTransfer(U.colorSpace)!==Ve,U.matrixAutoUpdate===!0&&U.updateMatrix(),f.material.uniforms.uvTransform.value.copy(U.matrix),(m!==U||g!==U.version||v!==s.toneMapping)&&(f.material.needsUpdate=!0,m=U,g=U.version,v=s.toneMapping),f.layers.enableAll(),A.unshift(f,f.geometry,f.material,0,0,null))}function _(A,T){A.getRGB(Gu,Ex(s)),n.buffers.color.setClear(Gu.r,Gu.g,Gu.b,T,l)}function E(){p!==void 0&&(p.geometry.dispose(),p.material.dispose(),p=void 0),f!==void 0&&(f.geometry.dispose(),f.material.dispose(),f=void 0)}return{getClearColor:function(){return c},setClearColor:function(A,T=1){c.set(A),h=T,_(c,h)},getClearAlpha:function(){return h},setClearAlpha:function(A){h=A,_(c,h)},render:b,addToRenderList:S,dispose:E}}function OR(s,t){const e=s.getParameter(s.MAX_VERTEX_ATTRIBS),n={},i=g(null);let o=i,l=!1;function c(w,B,tt,X,Z){let ot=!1;const k=m(X,tt,B);o!==k&&(o=k,f(o.object)),ot=v(w,X,tt,Z),ot&&x(w,X,tt,Z),Z!==null&&t.update(Z,s.ELEMENT_ARRAY_BUFFER),(ot||l)&&(l=!1,T(w,B,tt,X),Z!==null&&s.bindBuffer(s.ELEMENT_ARRAY_BUFFER,t.get(Z).buffer))}function h(){return s.createVertexArray()}function f(w){return s.bindVertexArray(w)}function p(w){return s.deleteVertexArray(w)}function m(w,B,tt){const X=tt.wireframe===!0;let Z=n[w.id];Z===void 0&&(Z={},n[w.id]=Z);let ot=Z[B.id];ot===void 0&&(ot={},Z[B.id]=ot);let k=ot[X];return k===void 0&&(k=g(h()),ot[X]=k),k}function g(w){const B=[],tt=[],X=[];for(let Z=0;Z<e;Z++)B[Z]=0,tt[Z]=0,X[Z]=0;return{geometry:null,program:null,wireframe:!1,newAttributes:B,enabledAttributes:tt,attributeDivisors:X,object:w,attributes:{},index:null}}function v(w,B,tt,X){const Z=o.attributes,ot=B.attributes;let k=0;const et=tt.getAttributes();for(const q in et)if(et[q].location>=0){const vt=Z[q];let xt=ot[q];if(xt===void 0&&(q==="instanceMatrix"&&w.instanceMatrix&&(xt=w.instanceMatrix),q==="instanceColor"&&w.instanceColor&&(xt=w.instanceColor)),vt===void 0||vt.attribute!==xt||xt&&vt.data!==xt.data)return!0;k++}return o.attributesNum!==k||o.index!==X}function x(w,B,tt,X){const Z={},ot=B.attributes;let k=0;const et=tt.getAttributes();for(const q in et)if(et[q].location>=0){let vt=ot[q];vt===void 0&&(q==="instanceMatrix"&&w.instanceMatrix&&(vt=w.instanceMatrix),q==="instanceColor"&&w.instanceColor&&(vt=w.instanceColor));const xt={};xt.attribute=vt,vt&&vt.data&&(xt.data=vt.data),Z[q]=xt,k++}o.attributes=Z,o.attributesNum=k,o.index=X}function b(){const w=o.newAttributes;for(let B=0,tt=w.length;B<tt;B++)w[B]=0}function S(w){_(w,0)}function _(w,B){const tt=o.newAttributes,X=o.enabledAttributes,Z=o.attributeDivisors;tt[w]=1,X[w]===0&&(s.enableVertexAttribArray(w),X[w]=1),Z[w]!==B&&(s.vertexAttribDivisor(w,B),Z[w]=B)}function E(){const w=o.newAttributes,B=o.enabledAttributes;for(let tt=0,X=B.length;tt<X;tt++)B[tt]!==w[tt]&&(s.disableVertexAttribArray(tt),B[tt]=0)}function A(w,B,tt,X,Z,ot,k){k===!0?s.vertexAttribIPointer(w,B,tt,Z,ot):s.vertexAttribPointer(w,B,tt,X,Z,ot)}function T(w,B,tt,X){b();const Z=X.attributes,ot=tt.getAttributes(),k=B.defaultAttributeValues;for(const et in ot){const q=ot[et];if(q.location>=0){let ct=Z[et];if(ct===void 0&&(et==="instanceMatrix"&&w.instanceMatrix&&(ct=w.instanceMatrix),et==="instanceColor"&&w.instanceColor&&(ct=w.instanceColor)),ct!==void 0){const vt=ct.normalized,xt=ct.itemSize,Ot=t.get(ct);if(Ot===void 0)continue;const ne=Ot.buffer,jt=Ot.type,at=Ot.bytesPerElement,Lt=jt===s.INT||jt===s.UNSIGNED_INT||ct.gpuType===jh;if(ct.isInterleavedBufferAttribute){const Rt=ct.data,Qt=Rt.stride,Zt=ct.offset;if(Rt.isInstancedInterleavedBuffer){for(let re=0;re<q.locationSize;re++)_(q.location+re,Rt.meshPerAttribute);w.isInstancedMesh!==!0&&X._maxInstanceCount===void 0&&(X._maxInstanceCount=Rt.meshPerAttribute*Rt.count)}else for(let re=0;re<q.locationSize;re++)S(q.location+re);s.bindBuffer(s.ARRAY_BUFFER,ne);for(let re=0;re<q.locationSize;re++)A(q.location+re,xt/q.locationSize,jt,vt,Qt*at,(Zt+xt/q.locationSize*re)*at,Lt)}else{if(ct.isInstancedBufferAttribute){for(let Rt=0;Rt<q.locationSize;Rt++)_(q.location+Rt,ct.meshPerAttribute);w.isInstancedMesh!==!0&&X._maxInstanceCount===void 0&&(X._maxInstanceCount=ct.meshPerAttribute*ct.count)}else for(let Rt=0;Rt<q.locationSize;Rt++)S(q.location+Rt);s.bindBuffer(s.ARRAY_BUFFER,ne);for(let Rt=0;Rt<q.locationSize;Rt++)A(q.location+Rt,xt/q.locationSize,jt,vt,xt*at,xt/q.locationSize*Rt*at,Lt)}}else if(k!==void 0){const vt=k[et];if(vt!==void 0)switch(vt.length){case 2:s.vertexAttrib2fv(q.location,vt);break;case 3:s.vertexAttrib3fv(q.location,vt);break;case 4:s.vertexAttrib4fv(q.location,vt);break;default:s.vertexAttrib1fv(q.location,vt)}}}}E()}function U(){O();for(const w in n){const B=n[w];for(const tt in B){const X=B[tt];for(const Z in X)p(X[Z].object),delete X[Z];delete B[tt]}delete n[w]}}function D(w){if(n[w.id]===void 0)return;const B=n[w.id];for(const tt in B){const X=B[tt];for(const Z in X)p(X[Z].object),delete X[Z];delete B[tt]}delete n[w.id]}function P(w){for(const B in n){const tt=n[B];if(tt[w.id]===void 0)continue;const X=tt[w.id];for(const Z in X)p(X[Z].object),delete X[Z];delete tt[w.id]}}function O(){C(),l=!0,o!==i&&(o=i,f(o.object))}function C(){i.geometry=null,i.program=null,i.wireframe=!1}return{setup:c,reset:O,resetDefaultState:C,dispose:U,releaseStatesOfGeometry:D,releaseStatesOfProgram:P,initAttributes:b,enableAttribute:S,disableUnusedAttributes:E}}function BR(s,t,e){let n;function i(f){n=f}function o(f,p){s.drawArrays(n,f,p),e.update(p,n,1)}function l(f,p,m){m!==0&&(s.drawArraysInstanced(n,f,p,m),e.update(p,n,m))}function c(f,p,m){if(m===0)return;t.get("WEBGL_multi_draw").multiDrawArraysWEBGL(n,f,0,p,0,m);let v=0;for(let x=0;x<m;x++)v+=p[x];e.update(v,n,1)}function h(f,p,m,g){if(m===0)return;const v=t.get("WEBGL_multi_draw");if(v===null)for(let x=0;x<f.length;x++)l(f[x],p[x],g[x]);else{v.multiDrawArraysInstancedWEBGL(n,f,0,p,0,g,0,m);let x=0;for(let b=0;b<m;b++)x+=p[b]*g[b];e.update(x,n,1)}}this.setMode=i,this.render=o,this.renderInstances=l,this.renderMultiDraw=c,this.renderMultiDrawInstances=h}function zR(s,t,e,n){let i;function o(){if(i!==void 0)return i;if(t.has("EXT_texture_filter_anisotropic")===!0){const P=t.get("EXT_texture_filter_anisotropic");i=s.getParameter(P.MAX_TEXTURE_MAX_ANISOTROPY_EXT)}else i=0;return i}function l(P){return!(P!==Hn&&n.convert(P)!==s.getParameter(s.IMPLEMENTATION_COLOR_READ_FORMAT))}function c(P){const O=P===zo&&(t.has("EXT_color_buffer_half_float")||t.has("EXT_color_buffer_float"));return!(P!==Ii&&n.convert(P)!==s.getParameter(s.IMPLEMENTATION_COLOR_READ_TYPE)&&P!==ri&&!O)}function h(P){if(P==="highp"){if(s.getShaderPrecisionFormat(s.VERTEX_SHADER,s.HIGH_FLOAT).precision>0&&s.getShaderPrecisionFormat(s.FRAGMENT_SHADER,s.HIGH_FLOAT).precision>0)return"highp";P="mediump"}return P==="mediump"&&s.getShaderPrecisionFormat(s.VERTEX_SHADER,s.MEDIUM_FLOAT).precision>0&&s.getShaderPrecisionFormat(s.FRAGMENT_SHADER,s.MEDIUM_FLOAT).precision>0?"mediump":"lowp"}let f=e.precision!==void 0?e.precision:"highp";const p=h(f);p!==f&&(console.warn("THREE.WebGLRenderer:",f,"not supported, using",p,"instead."),f=p);const m=e.logarithmicDepthBuffer===!0,g=e.reversedDepthBuffer===!0&&t.has("EXT_clip_control"),v=s.getParameter(s.MAX_TEXTURE_IMAGE_UNITS),x=s.getParameter(s.MAX_VERTEX_TEXTURE_IMAGE_UNITS),b=s.getParameter(s.MAX_TEXTURE_SIZE),S=s.getParameter(s.MAX_CUBE_MAP_TEXTURE_SIZE),_=s.getParameter(s.MAX_VERTEX_ATTRIBS),E=s.getParameter(s.MAX_VERTEX_UNIFORM_VECTORS),A=s.getParameter(s.MAX_VARYING_VECTORS),T=s.getParameter(s.MAX_FRAGMENT_UNIFORM_VECTORS),U=x>0,D=s.getParameter(s.MAX_SAMPLES);return{isWebGL2:!0,getMaxAnisotropy:o,getMaxPrecision:h,textureFormatReadable:l,textureTypeReadable:c,precision:f,logarithmicDepthBuffer:m,reversedDepthBuffer:g,maxTextures:v,maxVertexTextures:x,maxTextureSize:b,maxCubemapSize:S,maxAttributes:_,maxVertexUniforms:E,maxVaryings:A,maxFragmentUniforms:T,vertexTextures:U,maxSamples:D}}function FR(s){const t=this;let e=null,n=0,i=!1,o=!1;const l=new Ls,c=new ve,h={value:null,needsUpdate:!1};this.uniform=h,this.numPlanes=0,this.numIntersection=0,this.init=function(m,g){const v=m.length!==0||g||n!==0||i;return i=g,n=m.length,v},this.beginShadows=function(){o=!0,p(null)},this.endShadows=function(){o=!1},this.setGlobalState=function(m,g){e=p(m,g,0)},this.setState=function(m,g,v){const x=m.clippingPlanes,b=m.clipIntersection,S=m.clipShadows,_=s.get(m);if(!i||x===null||x.length===0||o&&!S)o?p(null):f();else{const E=o?0:n,A=E*4;let T=_.clippingState||null;h.value=T,T=p(x,g,A,v);for(let U=0;U!==A;++U)T[U]=e[U];_.clippingState=T,this.numIntersection=b?this.numPlanes:0,this.numPlanes+=E}};function f(){h.value!==e&&(h.value=e,h.needsUpdate=n>0),t.numPlanes=n,t.numIntersection=0}function p(m,g,v,x){const b=m!==null?m.length:0;let S=null;if(b!==0){if(S=h.value,x!==!0||S===null){const _=v+b*4,E=g.matrixWorldInverse;c.getNormalMatrix(E),(S===null||S.length<_)&&(S=new Float32Array(_));for(let A=0,T=v;A!==b;++A,T+=4)l.copy(m[A]).applyMatrix4(E,c),l.normal.toArray(S,T),S[T+3]=l.constant}h.value=S,h.needsUpdate=!0}return t.numPlanes=b,t.numIntersection=0,S}}function HR(s){let t=new WeakMap;function e(l,c){return c===kl?l.mapping=Fs:c===Wl&&(l.mapping=ga),l}function n(l){if(l&&l.isTexture){const c=l.mapping;if(c===kl||c===Wl)if(t.has(l)){const h=t.get(l).texture;return e(h,l.mapping)}else{const h=l.image;if(h&&h.height>0){const f=new wx(h.height);return f.fromEquirectangularTexture(s,l),t.set(l,f),l.addEventListener("dispose",i),e(f.texture,l.mapping)}else return null}}return l}function i(l){const c=l.target;c.removeEventListener("dispose",i);const h=t.get(c);h!==void 0&&(t.delete(c),h.dispose())}function o(){t=new WeakMap}return{get:n,dispose:o}}const bo=4,B_=[.125,.215,.35,.446,.526,.582],rr=20,Pp=new ma,z_=new kt;let Ip=null,Op=0,Bp=0,zp=!1;const ar=(1+Math.sqrt(5))/2,go=1/ar,F_=[new I(-ar,go,0),new I(ar,go,0),new I(-go,0,ar),new I(go,0,ar),new I(0,ar,-go),new I(0,ar,go),new I(-1,1,-1),new I(1,1,-1),new I(-1,1,1),new I(1,1,1)],VR=new I;class _m{constructor(t){this._renderer=t,this._pingPongRenderTarget=null,this._lodMax=0,this._cubeSize=0,this._lodPlanes=[],this._sizeLods=[],this._sigmas=[],this._blurMaterial=null,this._cubemapMaterial=null,this._equirectMaterial=null,this._compileMaterial(this._blurMaterial)}fromScene(t,e=0,n=.1,i=100,o={}){const{size:l=256,position:c=VR}=o;Ip=this._renderer.getRenderTarget(),Op=this._renderer.getActiveCubeFace(),Bp=this._renderer.getActiveMipmapLevel(),zp=this._renderer.xr.enabled,this._renderer.xr.enabled=!1,this._setSize(l);const h=this._allocateTargets();return h.depthBuffer=!0,this._sceneToCubeUV(t,n,i,h,c),e>0&&this._blur(h,0,0,e),this._applyPMREM(h),this._cleanup(h),h}fromEquirectangular(t,e=null){return this._fromTexture(t,e)}fromCubemap(t,e=null){return this._fromTexture(t,e)}compileCubemapShader(){this._cubemapMaterial===null&&(this._cubemapMaterial=G_(),this._compileMaterial(this._cubemapMaterial))}compileEquirectangularShader(){this._equirectMaterial===null&&(this._equirectMaterial=V_(),this._compileMaterial(this._equirectMaterial))}dispose(){this._dispose(),this._cubemapMaterial!==null&&this._cubemapMaterial.dispose(),this._equirectMaterial!==null&&this._equirectMaterial.dispose()}_setSize(t){this._lodMax=Math.floor(Math.log2(t)),this._cubeSize=Math.pow(2,this._lodMax)}_dispose(){this._blurMaterial!==null&&this._blurMaterial.dispose(),this._pingPongRenderTarget!==null&&this._pingPongRenderTarget.dispose();for(let t=0;t<this._lodPlanes.length;t++)this._lodPlanes[t].dispose()}_cleanup(t){this._renderer.setRenderTarget(Ip,Op,Bp),this._renderer.xr.enabled=zp,t.scissorTest=!1,ku(t,0,0,t.width,t.height)}_fromTexture(t,e){t.mapping===Fs||t.mapping===ga?this._setSize(t.image.length===0?16:t.image[0].width||t.image[0].image.width):this._setSize(t.image.width/4),Ip=this._renderer.getRenderTarget(),Op=this._renderer.getActiveCubeFace(),Bp=this._renderer.getActiveMipmapLevel(),zp=this._renderer.xr.enabled,this._renderer.xr.enabled=!1;const n=e||this._allocateTargets();return this._textureToCubeUV(t,n),this._applyPMREM(n),this._cleanup(n),n}_allocateTargets(){const t=3*Math.max(this._cubeSize,112),e=4*this._cubeSize,n={magFilter:mn,minFilter:mn,generateMipmaps:!1,type:zo,format:Hn,colorSpace:va,depthBuffer:!1},i=H_(t,e,n);if(this._pingPongRenderTarget===null||this._pingPongRenderTarget.width!==t||this._pingPongRenderTarget.height!==e){this._pingPongRenderTarget!==null&&this._dispose(),this._pingPongRenderTarget=H_(t,e,n);const{_lodMax:o}=this;({sizeLods:this._sizeLods,lodPlanes:this._lodPlanes,sigmas:this._sigmas}=GR(o)),this._blurMaterial=kR(o,t,e)}return i}_compileMaterial(t){const e=new dn(this._lodPlanes[0],t);this._renderer.compile(e,Pp)}_sceneToCubeUV(t,e,n,i,o){const h=new cn(90,1,e,n),f=[1,-1,1,1,1,1],p=[1,1,1,-1,-1,-1],m=this._renderer,g=m.autoClear,v=m.toneMapping;m.getClearColor(z_),m.toneMapping=ls,m.autoClear=!1,m.state.buffers.depth.getReversed()&&(m.setRenderTarget(i),m.clearDepth(),m.setRenderTarget(null));const b=new xa({name:"PMREM.Background",side:Qn,depthWrite:!1,depthTest:!1}),S=new dn(new xr,b);let _=!1;const E=t.background;E?E.isColor&&(b.color.copy(E),t.background=null,_=!0):(b.color.copy(z_),_=!0);for(let A=0;A<6;A++){const T=A%3;T===0?(h.up.set(0,f[A],0),h.position.set(o.x,o.y,o.z),h.lookAt(o.x+p[A],o.y,o.z)):T===1?(h.up.set(0,0,f[A]),h.position.set(o.x,o.y,o.z),h.lookAt(o.x,o.y+p[A],o.z)):(h.up.set(0,f[A],0),h.position.set(o.x,o.y,o.z),h.lookAt(o.x,o.y,o.z+p[A]));const U=this._cubeSize;ku(i,T*U,A>2?U:0,U,U),m.setRenderTarget(i),_&&m.render(S,h),m.render(t,h)}S.geometry.dispose(),S.material.dispose(),m.toneMapping=v,m.autoClear=g,t.background=E}_textureToCubeUV(t,e){const n=this._renderer,i=t.mapping===Fs||t.mapping===ga;i?(this._cubemapMaterial===null&&(this._cubemapMaterial=G_()),this._cubemapMaterial.uniforms.flipEnvMap.value=t.isRenderTargetTexture===!1?-1:1):this._equirectMaterial===null&&(this._equirectMaterial=V_());const o=i?this._cubemapMaterial:this._equirectMaterial,l=new dn(this._lodPlanes[0],o),c=o.uniforms;c.envMap.value=t;const h=this._cubeSize;ku(e,0,0,3*h,2*h),n.setRenderTarget(e),n.render(l,Pp)}_applyPMREM(t){const e=this._renderer,n=e.autoClear;e.autoClear=!1;const i=this._lodPlanes.length;for(let o=1;o<i;o++){const l=Math.sqrt(this._sigmas[o]*this._sigmas[o]-this._sigmas[o-1]*this._sigmas[o-1]),c=F_[(i-o-1)%F_.length];this._blur(t,o-1,o,l,c)}e.autoClear=n}_blur(t,e,n,i,o){const l=this._pingPongRenderTarget;this._halfBlur(t,l,e,n,i,"latitudinal",o),this._halfBlur(l,t,n,n,i,"longitudinal",o)}_halfBlur(t,e,n,i,o,l,c){const h=this._renderer,f=this._blurMaterial;l!=="latitudinal"&&l!=="longitudinal"&&console.error("blur direction must be either latitudinal or longitudinal!");const p=3,m=new dn(this._lodPlanes[i],f),g=f.uniforms,v=this._sizeLods[n]-1,x=isFinite(o)?Math.PI/(2*v):2*Math.PI/(2*rr-1),b=o/x,S=isFinite(o)?1+Math.floor(p*b):rr;S>rr&&console.warn(`sigmaRadians, ${o}, is too large and will clip, as it requested ${S} samples when the maximum is set to ${rr}`);const _=[];let E=0;for(let P=0;P<rr;++P){const O=P/b,C=Math.exp(-O*O/2);_.push(C),P===0?E+=C:P<S&&(E+=2*C)}for(let P=0;P<_.length;P++)_[P]=_[P]/E;g.envMap.value=t.texture,g.samples.value=S,g.weights.value=_,g.latitudinal.value=l==="latitudinal",c&&(g.poleAxis.value=c);const{_lodMax:A}=this;g.dTheta.value=x,g.mipInt.value=A-n;const T=this._sizeLods[i],U=3*T*(i>A-bo?i-A+bo:0),D=4*(this._cubeSize-T);ku(e,U,D,3*T,2*T),h.setRenderTarget(e),h.render(m,Pp)}}function GR(s){const t=[],e=[],n=[];let i=s;const o=s-bo+1+B_.length;for(let l=0;l<o;l++){const c=Math.pow(2,i);e.push(c);let h=1/c;l>s-bo?h=B_[l-s+bo-1]:l===0&&(h=0),n.push(h);const f=1/(c-2),p=-f,m=1+f,g=[p,p,m,p,m,m,p,p,m,m,p,m],v=6,x=6,b=3,S=2,_=1,E=new Float32Array(b*x*v),A=new Float32Array(S*x*v),T=new Float32Array(_*x*v);for(let D=0;D<v;D++){const P=D%3*2/3-1,O=D>2?0:-1,C=[P,O,0,P+2/3,O,0,P+2/3,O+1,0,P,O,0,P+2/3,O+1,0,P,O+1,0];E.set(C,b*x*D),A.set(g,S*x*D);const w=[D,D,D,D,D,D];T.set(w,_*x*D)}const U=new xe;U.setAttribute("position",new Xe(E,b)),U.setAttribute("uv",new Xe(A,S)),U.setAttribute("faceIndex",new Xe(T,_)),t.push(U),i>bo&&i--}return{lodPlanes:t,sizeLods:e,sigmas:n}}function H_(s,t,e){const n=new us(s,t,e);return n.texture.mapping=Bo,n.texture.name="PMREM.cubeUv",n.scissorTest=!0,n}function ku(s,t,e,n,i){s.viewport.set(t,e,n,i),s.scissor.set(t,e,n,i)}function kR(s,t,e){const n=new Float32Array(rr),i=new I(0,1,0);return new Zi({name:"SphericalGaussianBlur",defines:{n:rr,CUBEUV_TEXEL_WIDTH:1/t,CUBEUV_TEXEL_HEIGHT:1/e,CUBEUV_MAX_MIP:`${s}.0`},uniforms:{envMap:{value:null},samples:{value:1},weights:{value:n},latitudinal:{value:!1},dTheta:{value:0},mipInt:{value:0},poleAxis:{value:i}},vertexShader:dg(),fragmentShader:`

			precision mediump float;
			precision mediump int;

			varying vec3 vOutputDirection;

			uniform sampler2D envMap;
			uniform int samples;
			uniform float weights[ n ];
			uniform bool latitudinal;
			uniform float dTheta;
			uniform float mipInt;
			uniform vec3 poleAxis;

			#define ENVMAP_TYPE_CUBE_UV
			#include <cube_uv_reflection_fragment>

			vec3 getSample( float theta, vec3 axis ) {

				float cosTheta = cos( theta );
				// Rodrigues' axis-angle rotation
				vec3 sampleDirection = vOutputDirection * cosTheta
					+ cross( axis, vOutputDirection ) * sin( theta )
					+ axis * dot( axis, vOutputDirection ) * ( 1.0 - cosTheta );

				return bilinearCubeUV( envMap, sampleDirection, mipInt );

			}

			void main() {

				vec3 axis = latitudinal ? poleAxis : cross( poleAxis, vOutputDirection );

				if ( all( equal( axis, vec3( 0.0 ) ) ) ) {

					axis = vec3( vOutputDirection.z, 0.0, - vOutputDirection.x );

				}

				axis = normalize( axis );

				gl_FragColor = vec4( 0.0, 0.0, 0.0, 1.0 );
				gl_FragColor.rgb += weights[ 0 ] * getSample( 0.0, axis );

				for ( int i = 1; i < n; i++ ) {

					if ( i >= samples ) {

						break;

					}

					float theta = dTheta * float( i );
					gl_FragColor.rgb += weights[ i ] * getSample( -1.0 * theta, axis );
					gl_FragColor.rgb += weights[ i ] * getSample( theta, axis );

				}

			}
		`,blending:Os,depthTest:!1,depthWrite:!1})}function V_(){return new Zi({name:"EquirectangularToCubeUV",uniforms:{envMap:{value:null}},vertexShader:dg(),fragmentShader:`

			precision mediump float;
			precision mediump int;

			varying vec3 vOutputDirection;

			uniform sampler2D envMap;

			#include <common>

			void main() {

				vec3 outputDirection = normalize( vOutputDirection );
				vec2 uv = equirectUv( outputDirection );

				gl_FragColor = vec4( texture2D ( envMap, uv ).rgb, 1.0 );

			}
		`,blending:Os,depthTest:!1,depthWrite:!1})}function G_(){return new Zi({name:"CubemapToCubeUV",uniforms:{envMap:{value:null},flipEnvMap:{value:-1}},vertexShader:dg(),fragmentShader:`

			precision mediump float;
			precision mediump int;

			uniform float flipEnvMap;

			varying vec3 vOutputDirection;

			uniform samplerCube envMap;

			void main() {

				gl_FragColor = textureCube( envMap, vec3( flipEnvMap * vOutputDirection.x, vOutputDirection.yz ) );

			}
		`,blending:Os,depthTest:!1,depthWrite:!1})}function dg(){return`

		precision mediump float;
		precision mediump int;

		attribute float faceIndex;

		varying vec3 vOutputDirection;

		// RH coordinate system; PMREM face-indexing convention
		vec3 getDirection( vec2 uv, float face ) {

			uv = 2.0 * uv - 1.0;

			vec3 direction = vec3( uv, 1.0 );

			if ( face == 0.0 ) {

				direction = direction.zyx; // ( 1, v, u ) pos x

			} else if ( face == 1.0 ) {

				direction = direction.xzy;
				direction.xz *= -1.0; // ( -u, 1, -v ) pos y

			} else if ( face == 2.0 ) {

				direction.x *= -1.0; // ( -u, v, 1 ) pos z

			} else if ( face == 3.0 ) {

				direction = direction.zyx;
				direction.xz *= -1.0; // ( -1, v, -u ) neg x

			} else if ( face == 4.0 ) {

				direction = direction.xzy;
				direction.xy *= -1.0; // ( -u, -1, v ) neg y

			} else if ( face == 5.0 ) {

				direction.z *= -1.0; // ( u, v, -1 ) neg z

			}

			return direction;

		}

		void main() {

			vOutputDirection = getDirection( uv, faceIndex );
			gl_Position = vec4( position, 1.0 );

		}
	`}function WR(s){let t=new WeakMap,e=null;function n(c){if(c&&c.isTexture){const h=c.mapping,f=h===kl||h===Wl,p=h===Fs||h===ga;if(f||p){let m=t.get(c);const g=m!==void 0?m.texture.pmremVersion:0;if(c.isRenderTargetTexture&&c.pmremVersion!==g)return e===null&&(e=new _m(s)),m=f?e.fromEquirectangular(c,m):e.fromCubemap(c,m),m.texture.pmremVersion=c.pmremVersion,t.set(c,m),m.texture;if(m!==void 0)return m.texture;{const v=c.image;return f&&v&&v.height>0||p&&v&&i(v)?(e===null&&(e=new _m(s)),m=f?e.fromEquirectangular(c):e.fromCubemap(c),m.texture.pmremVersion=c.pmremVersion,t.set(c,m),c.addEventListener("dispose",o),m.texture):null}}}return c}function i(c){let h=0;const f=6;for(let p=0;p<f;p++)c[p]!==void 0&&h++;return h===f}function o(c){const h=c.target;h.removeEventListener("dispose",o);const f=t.get(h);f!==void 0&&(t.delete(h),f.dispose())}function l(){t=new WeakMap,e!==null&&(e.dispose(),e=null)}return{get:n,dispose:l}}function XR(s){const t={};function e(n){if(t[n]!==void 0)return t[n];let i;switch(n){case"WEBGL_depth_texture":i=s.getExtension("WEBGL_depth_texture")||s.getExtension("MOZ_WEBGL_depth_texture")||s.getExtension("WEBKIT_WEBGL_depth_texture");break;case"EXT_texture_filter_anisotropic":i=s.getExtension("EXT_texture_filter_anisotropic")||s.getExtension("MOZ_EXT_texture_filter_anisotropic")||s.getExtension("WEBKIT_EXT_texture_filter_anisotropic");break;case"WEBGL_compressed_texture_s3tc":i=s.getExtension("WEBGL_compressed_texture_s3tc")||s.getExtension("MOZ_WEBGL_compressed_texture_s3tc")||s.getExtension("WEBKIT_WEBGL_compressed_texture_s3tc");break;case"WEBGL_compressed_texture_pvrtc":i=s.getExtension("WEBGL_compressed_texture_pvrtc")||s.getExtension("WEBKIT_WEBGL_compressed_texture_pvrtc");break;default:i=s.getExtension(n)}return t[n]=i,i}return{has:function(n){return e(n)!==null},init:function(){e("EXT_color_buffer_float"),e("WEBGL_clip_cull_distance"),e("OES_texture_float_linear"),e("EXT_color_buffer_half_float"),e("WEBGL_multisampled_render_to_texture"),e("WEBGL_render_shared_exponent")},get:function(n){const i=e(n);return i===null&&Eo("THREE.WebGLRenderer: "+n+" extension not supported."),i}}}function qR(s,t,e,n){const i={},o=new WeakMap;function l(m){const g=m.target;g.index!==null&&t.remove(g.index);for(const x in g.attributes)t.remove(g.attributes[x]);g.removeEventListener("dispose",l),delete i[g.id];const v=o.get(g);v&&(t.remove(v),o.delete(g)),n.releaseStatesOfGeometry(g),g.isInstancedBufferGeometry===!0&&delete g._maxInstanceCount,e.memory.geometries--}function c(m,g){return i[g.id]===!0||(g.addEventListener("dispose",l),i[g.id]=!0,e.memory.geometries++),g}function h(m){const g=m.attributes;for(const v in g)t.update(g[v],s.ARRAY_BUFFER)}function f(m){const g=[],v=m.index,x=m.attributes.position;let b=0;if(v!==null){const E=v.array;b=v.version;for(let A=0,T=E.length;A<T;A+=3){const U=E[A+0],D=E[A+1],P=E[A+2];g.push(U,D,D,P,P,U)}}else if(x!==void 0){const E=x.array;b=x.version;for(let A=0,T=E.length/3-1;A<T;A+=3){const U=A+0,D=A+1,P=A+2;g.push(U,D,D,P,P,U)}}else return;const S=new(xx(g)?Vm:Hm)(g,1);S.version=b;const _=o.get(m);_&&t.remove(_),o.set(m,S)}function p(m){const g=o.get(m);if(g){const v=m.index;v!==null&&g.version<v.version&&f(m)}else f(m);return o.get(m)}return{get:c,update:h,getWireframeAttribute:p}}function YR(s,t,e){let n;function i(g){n=g}let o,l;function c(g){o=g.type,l=g.bytesPerElement}function h(g,v){s.drawElements(n,v,o,g*l),e.update(v,n,1)}function f(g,v,x){x!==0&&(s.drawElementsInstanced(n,v,o,g*l,x),e.update(v,n,x))}function p(g,v,x){if(x===0)return;t.get("WEBGL_multi_draw").multiDrawElementsWEBGL(n,v,0,o,g,0,x);let S=0;for(let _=0;_<x;_++)S+=v[_];e.update(S,n,1)}function m(g,v,x,b){if(x===0)return;const S=t.get("WEBGL_multi_draw");if(S===null)for(let _=0;_<g.length;_++)f(g[_]/l,v[_],b[_]);else{S.multiDrawElementsInstancedWEBGL(n,v,0,o,g,0,b,0,x);let _=0;for(let E=0;E<x;E++)_+=v[E]*b[E];e.update(_,n,1)}}this.setMode=i,this.setIndex=c,this.render=h,this.renderInstances=f,this.renderMultiDraw=p,this.renderMultiDrawInstances=m}function jR(s){const t={geometries:0,textures:0},e={frame:0,calls:0,triangles:0,points:0,lines:0};function n(o,l,c){switch(e.calls++,l){case s.TRIANGLES:e.triangles+=c*(o/3);break;case s.LINES:e.lines+=c*(o/2);break;case s.LINE_STRIP:e.lines+=c*(o-1);break;case s.LINE_LOOP:e.lines+=c*o;break;case s.POINTS:e.points+=c*o;break;default:console.error("THREE.WebGLInfo: Unknown draw mode:",l);break}}function i(){e.calls=0,e.triangles=0,e.points=0,e.lines=0}return{memory:t,render:e,programs:null,autoReset:!0,reset:i,update:n}}function ZR(s,t,e){const n=new WeakMap,i=new Ne;function o(l,c,h){const f=l.morphTargetInfluences,p=c.morphAttributes.position||c.morphAttributes.normal||c.morphAttributes.color,m=p!==void 0?p.length:0;let g=n.get(c);if(g===void 0||g.count!==m){let C=function(){P.dispose(),n.delete(c),c.removeEventListener("dispose",C)};g!==void 0&&g.texture.dispose();const v=c.morphAttributes.position!==void 0,x=c.morphAttributes.normal!==void 0,b=c.morphAttributes.color!==void 0,S=c.morphAttributes.position||[],_=c.morphAttributes.normal||[],E=c.morphAttributes.color||[];let A=0;v===!0&&(A=1),x===!0&&(A=2),b===!0&&(A=3);let T=c.attributes.position.count*A,U=1;T>t.maxTextureSize&&(U=Math.ceil(T/t.maxTextureSize),T=t.maxTextureSize);const D=new Float32Array(T*U*4*m),P=new ef(D,T,U,m);P.type=ri,P.needsUpdate=!0;const O=A*4;for(let w=0;w<m;w++){const B=S[w],tt=_[w],X=E[w],Z=T*U*4*w;for(let ot=0;ot<B.count;ot++){const k=ot*O;v===!0&&(i.fromBufferAttribute(B,ot),D[Z+k+0]=i.x,D[Z+k+1]=i.y,D[Z+k+2]=i.z,D[Z+k+3]=0),x===!0&&(i.fromBufferAttribute(tt,ot),D[Z+k+4]=i.x,D[Z+k+5]=i.y,D[Z+k+6]=i.z,D[Z+k+7]=0),b===!0&&(i.fromBufferAttribute(X,ot),D[Z+k+8]=i.x,D[Z+k+9]=i.y,D[Z+k+10]=i.z,D[Z+k+11]=X.itemSize===4?i.w:1)}}g={count:m,texture:P,size:new dt(T,U)},n.set(c,g),c.addEventListener("dispose",C)}if(l.isInstancedMesh===!0&&l.morphTexture!==null)h.getUniforms().setValue(s,"morphTexture",l.morphTexture,e);else{let v=0;for(let b=0;b<f.length;b++)v+=f[b];const x=c.morphTargetsRelative?1:1-v;h.getUniforms().setValue(s,"morphTargetBaseInfluence",x),h.getUniforms().setValue(s,"morphTargetInfluences",f)}h.getUniforms().setValue(s,"morphTargetsTexture",g.texture,e),h.getUniforms().setValue(s,"morphTargetsTextureSize",g.size)}return{update:o}}function KR(s,t,e,n){let i=new WeakMap;function o(h){const f=n.render.frame,p=h.geometry,m=t.get(h,p);if(i.get(m)!==f&&(t.update(m),i.set(m,f)),h.isInstancedMesh&&(h.hasEventListener("dispose",c)===!1&&h.addEventListener("dispose",c),i.get(h)!==f&&(e.update(h.instanceMatrix,s.ARRAY_BUFFER),h.instanceColor!==null&&e.update(h.instanceColor,s.ARRAY_BUFFER),i.set(h,f))),h.isSkinnedMesh){const g=h.skeleton;i.get(g)!==f&&(g.update(),i.set(g,f))}return m}function l(){i=new WeakMap}function c(h){const f=h.target;f.removeEventListener("dispose",c),e.remove(f.instanceMatrix),f.instanceColor!==null&&e.remove(f.instanceColor)}return{update:o,dispose:l}}const wS=new on,k_=new qm(1,1),CS=new ef,RS=new nf,DS=new cc,W_=[],X_=[],q_=new Float32Array(16),Y_=new Float32Array(9),j_=new Float32Array(4);function Vo(s,t,e){const n=s[0];if(n<=0||n>0)return s;const i=t*e;let o=W_[i];if(o===void 0&&(o=new Float32Array(i),W_[i]=o),t!==0){n.toArray(o,0);for(let l=1,c=0;l!==t;++l)c+=e,s[l].toArray(o,c)}return o}function gn(s,t){if(s.length!==t.length)return!1;for(let e=0,n=s.length;e<n;e++)if(s[e]!==t[e])return!1;return!0}function vn(s,t){for(let e=0,n=t.length;e<n;e++)s[e]=t[e]}function Tf(s,t){let e=X_[t];e===void 0&&(e=new Int32Array(t),X_[t]=e);for(let n=0;n!==t;++n)e[n]=s.allocateTextureUnit();return e}function JR(s,t){const e=this.cache;e[0]!==t&&(s.uniform1f(this.addr,t),e[0]=t)}function QR(s,t){const e=this.cache;if(t.x!==void 0)(e[0]!==t.x||e[1]!==t.y)&&(s.uniform2f(this.addr,t.x,t.y),e[0]=t.x,e[1]=t.y);else{if(gn(e,t))return;s.uniform2fv(this.addr,t),vn(e,t)}}function $R(s,t){const e=this.cache;if(t.x!==void 0)(e[0]!==t.x||e[1]!==t.y||e[2]!==t.z)&&(s.uniform3f(this.addr,t.x,t.y,t.z),e[0]=t.x,e[1]=t.y,e[2]=t.z);else if(t.r!==void 0)(e[0]!==t.r||e[1]!==t.g||e[2]!==t.b)&&(s.uniform3f(this.addr,t.r,t.g,t.b),e[0]=t.r,e[1]=t.g,e[2]=t.b);else{if(gn(e,t))return;s.uniform3fv(this.addr,t),vn(e,t)}}function t2(s,t){const e=this.cache;if(t.x!==void 0)(e[0]!==t.x||e[1]!==t.y||e[2]!==t.z||e[3]!==t.w)&&(s.uniform4f(this.addr,t.x,t.y,t.z,t.w),e[0]=t.x,e[1]=t.y,e[2]=t.z,e[3]=t.w);else{if(gn(e,t))return;s.uniform4fv(this.addr,t),vn(e,t)}}function e2(s,t){const e=this.cache,n=t.elements;if(n===void 0){if(gn(e,t))return;s.uniformMatrix2fv(this.addr,!1,t),vn(e,t)}else{if(gn(e,n))return;j_.set(n),s.uniformMatrix2fv(this.addr,!1,j_),vn(e,n)}}function n2(s,t){const e=this.cache,n=t.elements;if(n===void 0){if(gn(e,t))return;s.uniformMatrix3fv(this.addr,!1,t),vn(e,t)}else{if(gn(e,n))return;Y_.set(n),s.uniformMatrix3fv(this.addr,!1,Y_),vn(e,n)}}function i2(s,t){const e=this.cache,n=t.elements;if(n===void 0){if(gn(e,t))return;s.uniformMatrix4fv(this.addr,!1,t),vn(e,t)}else{if(gn(e,n))return;q_.set(n),s.uniformMatrix4fv(this.addr,!1,q_),vn(e,n)}}function s2(s,t){const e=this.cache;e[0]!==t&&(s.uniform1i(this.addr,t),e[0]=t)}function a2(s,t){const e=this.cache;if(t.x!==void 0)(e[0]!==t.x||e[1]!==t.y)&&(s.uniform2i(this.addr,t.x,t.y),e[0]=t.x,e[1]=t.y);else{if(gn(e,t))return;s.uniform2iv(this.addr,t),vn(e,t)}}function r2(s,t){const e=this.cache;if(t.x!==void 0)(e[0]!==t.x||e[1]!==t.y||e[2]!==t.z)&&(s.uniform3i(this.addr,t.x,t.y,t.z),e[0]=t.x,e[1]=t.y,e[2]=t.z);else{if(gn(e,t))return;s.uniform3iv(this.addr,t),vn(e,t)}}function o2(s,t){const e=this.cache;if(t.x!==void 0)(e[0]!==t.x||e[1]!==t.y||e[2]!==t.z||e[3]!==t.w)&&(s.uniform4i(this.addr,t.x,t.y,t.z,t.w),e[0]=t.x,e[1]=t.y,e[2]=t.z,e[3]=t.w);else{if(gn(e,t))return;s.uniform4iv(this.addr,t),vn(e,t)}}function l2(s,t){const e=this.cache;e[0]!==t&&(s.uniform1ui(this.addr,t),e[0]=t)}function c2(s,t){const e=this.cache;if(t.x!==void 0)(e[0]!==t.x||e[1]!==t.y)&&(s.uniform2ui(this.addr,t.x,t.y),e[0]=t.x,e[1]=t.y);else{if(gn(e,t))return;s.uniform2uiv(this.addr,t),vn(e,t)}}function u2(s,t){const e=this.cache;if(t.x!==void 0)(e[0]!==t.x||e[1]!==t.y||e[2]!==t.z)&&(s.uniform3ui(this.addr,t.x,t.y,t.z),e[0]=t.x,e[1]=t.y,e[2]=t.z);else{if(gn(e,t))return;s.uniform3uiv(this.addr,t),vn(e,t)}}function h2(s,t){const e=this.cache;if(t.x!==void 0)(e[0]!==t.x||e[1]!==t.y||e[2]!==t.z||e[3]!==t.w)&&(s.uniform4ui(this.addr,t.x,t.y,t.z,t.w),e[0]=t.x,e[1]=t.y,e[2]=t.z,e[3]=t.w);else{if(gn(e,t))return;s.uniform4uiv(this.addr,t),vn(e,t)}}function f2(s,t,e){const n=this.cache,i=e.allocateTextureUnit();n[0]!==i&&(s.uniform1i(this.addr,i),n[0]=i);let o;this.type===s.SAMPLER_2D_SHADOW?(k_.compareFunction=Bm,o=k_):o=wS,e.setTexture2D(t||o,i)}function d2(s,t,e){const n=this.cache,i=e.allocateTextureUnit();n[0]!==i&&(s.uniform1i(this.addr,i),n[0]=i),e.setTexture3D(t||RS,i)}function p2(s,t,e){const n=this.cache,i=e.allocateTextureUnit();n[0]!==i&&(s.uniform1i(this.addr,i),n[0]=i),e.setTextureCube(t||DS,i)}function m2(s,t,e){const n=this.cache,i=e.allocateTextureUnit();n[0]!==i&&(s.uniform1i(this.addr,i),n[0]=i),e.setTexture2DArray(t||CS,i)}function g2(s){switch(s){case 5126:return JR;case 35664:return QR;case 35665:return $R;case 35666:return t2;case 35674:return e2;case 35675:return n2;case 35676:return i2;case 5124:case 35670:return s2;case 35667:case 35671:return a2;case 35668:case 35672:return r2;case 35669:case 35673:return o2;case 5125:return l2;case 36294:return c2;case 36295:return u2;case 36296:return h2;case 35678:case 36198:case 36298:case 36306:case 35682:return f2;case 35679:case 36299:case 36307:return d2;case 35680:case 36300:case 36308:case 36293:return p2;case 36289:case 36303:case 36311:case 36292:return m2}}function v2(s,t){s.uniform1fv(this.addr,t)}function _2(s,t){const e=Vo(t,this.size,2);s.uniform2fv(this.addr,e)}function y2(s,t){const e=Vo(t,this.size,3);s.uniform3fv(this.addr,e)}function x2(s,t){const e=Vo(t,this.size,4);s.uniform4fv(this.addr,e)}function S2(s,t){const e=Vo(t,this.size,4);s.uniformMatrix2fv(this.addr,!1,e)}function M2(s,t){const e=Vo(t,this.size,9);s.uniformMatrix3fv(this.addr,!1,e)}function b2(s,t){const e=Vo(t,this.size,16);s.uniformMatrix4fv(this.addr,!1,e)}function E2(s,t){s.uniform1iv(this.addr,t)}function T2(s,t){s.uniform2iv(this.addr,t)}function A2(s,t){s.uniform3iv(this.addr,t)}function w2(s,t){s.uniform4iv(this.addr,t)}function C2(s,t){s.uniform1uiv(this.addr,t)}function R2(s,t){s.uniform2uiv(this.addr,t)}function D2(s,t){s.uniform3uiv(this.addr,t)}function U2(s,t){s.uniform4uiv(this.addr,t)}function N2(s,t,e){const n=this.cache,i=t.length,o=Tf(e,i);gn(n,o)||(s.uniform1iv(this.addr,o),vn(n,o));for(let l=0;l!==i;++l)e.setTexture2D(t[l]||wS,o[l])}function L2(s,t,e){const n=this.cache,i=t.length,o=Tf(e,i);gn(n,o)||(s.uniform1iv(this.addr,o),vn(n,o));for(let l=0;l!==i;++l)e.setTexture3D(t[l]||RS,o[l])}function P2(s,t,e){const n=this.cache,i=t.length,o=Tf(e,i);gn(n,o)||(s.uniform1iv(this.addr,o),vn(n,o));for(let l=0;l!==i;++l)e.setTextureCube(t[l]||DS,o[l])}function I2(s,t,e){const n=this.cache,i=t.length,o=Tf(e,i);gn(n,o)||(s.uniform1iv(this.addr,o),vn(n,o));for(let l=0;l!==i;++l)e.setTexture2DArray(t[l]||CS,o[l])}function O2(s){switch(s){case 5126:return v2;case 35664:return _2;case 35665:return y2;case 35666:return x2;case 35674:return S2;case 35675:return M2;case 35676:return b2;case 5124:case 35670:return E2;case 35667:case 35671:return T2;case 35668:case 35672:return A2;case 35669:case 35673:return w2;case 5125:return C2;case 36294:return R2;case 36295:return D2;case 36296:return U2;case 35678:case 36198:case 36298:case 36306:case 35682:return N2;case 35679:case 36299:case 36307:return L2;case 35680:case 36300:case 36308:case 36293:return P2;case 36289:case 36303:case 36311:case 36292:return I2}}class B2{constructor(t,e,n){this.id=t,this.addr=n,this.cache=[],this.type=e.type,this.setValue=g2(e.type)}}class z2{constructor(t,e,n){this.id=t,this.addr=n,this.cache=[],this.type=e.type,this.size=e.size,this.setValue=O2(e.type)}}class F2{constructor(t){this.id=t,this.seq=[],this.map={}}setValue(t,e,n){const i=this.seq;for(let o=0,l=i.length;o!==l;++o){const c=i[o];c.setValue(t,e[c.id],n)}}}const Fp=/(\w+)(\])?(\[|\.)?/g;function Z_(s,t){s.seq.push(t),s.map[t.id]=t}function H2(s,t,e){const n=s.name,i=n.length;for(Fp.lastIndex=0;;){const o=Fp.exec(n),l=Fp.lastIndex;let c=o[1];const h=o[2]==="]",f=o[3];if(h&&(c=c|0),f===void 0||f==="["&&l+2===i){Z_(e,f===void 0?new B2(c,s,t):new z2(c,s,t));break}else{let m=e.map[c];m===void 0&&(m=new F2(c),Z_(e,m)),e=m}}}class $u{constructor(t,e){this.seq=[],this.map={};const n=t.getProgramParameter(e,t.ACTIVE_UNIFORMS);for(let i=0;i<n;++i){const o=t.getActiveUniform(e,i),l=t.getUniformLocation(e,o.name);H2(o,l,this)}}setValue(t,e,n,i){const o=this.map[e];o!==void 0&&o.setValue(t,n,i)}setOptional(t,e,n){const i=e[n];i!==void 0&&this.setValue(t,n,i)}static upload(t,e,n,i){for(let o=0,l=e.length;o!==l;++o){const c=e[o],h=n[c.id];h.needsUpdate!==!1&&c.setValue(t,h.value,i)}}static seqWithValue(t,e){const n=[];for(let i=0,o=t.length;i!==o;++i){const l=t[i];l.id in e&&n.push(l)}return n}}function K_(s,t,e){const n=s.createShader(t);return s.shaderSource(n,e),s.compileShader(n),n}const V2=37297;let G2=0;function k2(s,t){const e=s.split(`
`),n=[],i=Math.max(t-6,0),o=Math.min(t+6,e.length);for(let l=i;l<o;l++){const c=l+1;n.push(`${c===t?">":" "} ${c}: ${e[l]}`)}return n.join(`
`)}const J_=new ve;function W2(s){Re._getMatrix(J_,Re.workingColorSpace,s);const t=`mat3( ${J_.elements.map(e=>e.toFixed(4))} )`;switch(Re.getTransfer(s)){case Zl:return[t,"LinearTransferOETF"];case Ve:return[t,"sRGBTransferOETF"];default:return console.warn("THREE.WebGLProgram: Unsupported color space: ",s),[t,"LinearTransferOETF"]}}function Q_(s,t,e){const n=s.getShaderParameter(t,s.COMPILE_STATUS),o=(s.getShaderInfoLog(t)||"").trim();if(n&&o==="")return"";const l=/ERROR: 0:(\d+)/.exec(o);if(l){const c=parseInt(l[1]);return e.toUpperCase()+`

`+o+`

`+k2(s.getShaderSource(t),c)}else return o}function X2(s,t){const e=W2(t);return[`vec4 ${s}( vec4 value ) {`,`	return ${e[1]}( vec4( value.rgb * ${e[0]}, value.a ) );`,"}"].join(`
`)}function q2(s,t){let e;switch(t){case tx:e="Linear";break;case ex:e="Reinhard";break;case nx:e="Cineon";break;case wm:e="ACESFilmic";break;case sx:e="AgX";break;case ax:e="Neutral";break;case ix:e="Custom";break;default:console.warn("THREE.WebGLProgram: Unsupported toneMapping:",t),e="Linear"}return"vec3 "+s+"( vec3 color ) { return "+e+"ToneMapping( color ); }"}const Wu=new I;function Y2(){Re.getLuminanceCoefficients(Wu);const s=Wu.x.toFixed(4),t=Wu.y.toFixed(4),e=Wu.z.toFixed(4);return["float luminance( const in vec3 rgb ) {",`	const vec3 weights = vec3( ${s}, ${t}, ${e} );`,"	return dot( weights, rgb );","}"].join(`
`)}function j2(s){return[s.extensionClipCullDistance?"#extension GL_ANGLE_clip_cull_distance : require":"",s.extensionMultiDraw?"#extension GL_ANGLE_multi_draw : require":""].filter(Ul).join(`
`)}function Z2(s){const t=[];for(const e in s){const n=s[e];n!==!1&&t.push("#define "+e+" "+n)}return t.join(`
`)}function K2(s,t){const e={},n=s.getProgramParameter(t,s.ACTIVE_ATTRIBUTES);for(let i=0;i<n;i++){const o=s.getActiveAttrib(t,i),l=o.name;let c=1;o.type===s.FLOAT_MAT2&&(c=2),o.type===s.FLOAT_MAT3&&(c=3),o.type===s.FLOAT_MAT4&&(c=4),e[l]={type:o.type,location:s.getAttribLocation(t,l),locationSize:c}}return e}function Ul(s){return s!==""}function $_(s,t){const e=t.numSpotLightShadows+t.numSpotLightMaps-t.numSpotLightShadowsWithMaps;return s.replace(/NUM_DIR_LIGHTS/g,t.numDirLights).replace(/NUM_SPOT_LIGHTS/g,t.numSpotLights).replace(/NUM_SPOT_LIGHT_MAPS/g,t.numSpotLightMaps).replace(/NUM_SPOT_LIGHT_COORDS/g,e).replace(/NUM_RECT_AREA_LIGHTS/g,t.numRectAreaLights).replace(/NUM_POINT_LIGHTS/g,t.numPointLights).replace(/NUM_HEMI_LIGHTS/g,t.numHemiLights).replace(/NUM_DIR_LIGHT_SHADOWS/g,t.numDirLightShadows).replace(/NUM_SPOT_LIGHT_SHADOWS_WITH_MAPS/g,t.numSpotLightShadowsWithMaps).replace(/NUM_SPOT_LIGHT_SHADOWS/g,t.numSpotLightShadows).replace(/NUM_POINT_LIGHT_SHADOWS/g,t.numPointLightShadows)}function ty(s,t){return s.replace(/NUM_CLIPPING_PLANES/g,t.numClippingPlanes).replace(/UNION_CLIPPING_PLANES/g,t.numClippingPlanes-t.numClipIntersection)}const J2=/^[ \t]*#include +<([\w\d./]+)>/gm;function ym(s){return s.replace(J2,$2)}const Q2=new Map;function $2(s,t){let e=Me[t];if(e===void 0){const n=Q2.get(t);if(n!==void 0)e=Me[n],console.warn('THREE.WebGLRenderer: Shader chunk "%s" has been deprecated. Use "%s" instead.',t,n);else throw new Error("Can not resolve #include <"+t+">")}return ym(e)}const t3=/#pragma unroll_loop_start\s+for\s*\(\s*int\s+i\s*=\s*(\d+)\s*;\s*i\s*<\s*(\d+)\s*;\s*i\s*\+\+\s*\)\s*{([\s\S]+?)}\s+#pragma unroll_loop_end/g;function ey(s){return s.replace(t3,e3)}function e3(s,t,e,n){let i="";for(let o=parseInt(t);o<parseInt(e);o++)i+=n.replace(/\[\s*i\s*\]/g,"[ "+o+" ]").replace(/UNROLLED_LOOP_INDEX/g,o);return i}function ny(s){let t=`precision ${s.precision} float;
	precision ${s.precision} int;
	precision ${s.precision} sampler2D;
	precision ${s.precision} samplerCube;
	precision ${s.precision} sampler3D;
	precision ${s.precision} sampler2DArray;
	precision ${s.precision} sampler2DShadow;
	precision ${s.precision} samplerCubeShadow;
	precision ${s.precision} sampler2DArrayShadow;
	precision ${s.precision} isampler2D;
	precision ${s.precision} isampler3D;
	precision ${s.precision} isamplerCube;
	precision ${s.precision} isampler2DArray;
	precision ${s.precision} usampler2D;
	precision ${s.precision} usampler3D;
	precision ${s.precision} usamplerCube;
	precision ${s.precision} usampler2DArray;
	`;return s.precision==="highp"?t+=`
#define HIGH_PRECISION`:s.precision==="mediump"?t+=`
#define MEDIUM_PRECISION`:s.precision==="lowp"&&(t+=`
#define LOW_PRECISION`),t}function n3(s){let t="SHADOWMAP_TYPE_BASIC";return s.shadowMapType===qh?t="SHADOWMAP_TYPE_PCF":s.shadowMapType===Nl?t="SHADOWMAP_TYPE_PCF_SOFT":s.shadowMapType===qi&&(t="SHADOWMAP_TYPE_VSM"),t}function i3(s){let t="ENVMAP_TYPE_CUBE";if(s.envMap)switch(s.envMapMode){case Fs:case ga:t="ENVMAP_TYPE_CUBE";break;case Bo:t="ENVMAP_TYPE_CUBE_UV";break}return t}function s3(s){let t="ENVMAP_MODE_REFLECTION";if(s.envMap)switch(s.envMapMode){case ga:t="ENVMAP_MODE_REFRACTION";break}return t}function a3(s){let t="ENVMAP_BLENDING_NONE";if(s.envMap)switch(s.combine){case oc:t="ENVMAP_BLENDING_MULTIPLY";break;case Qy:t="ENVMAP_BLENDING_MIX";break;case $y:t="ENVMAP_BLENDING_ADD";break}return t}function r3(s){const t=s.envMapCubeUVHeight;if(t===null)return null;const e=Math.log2(t)-2,n=1/t;return{texelWidth:1/(3*Math.max(Math.pow(2,e),112)),texelHeight:n,maxMip:e}}function o3(s,t,e,n){const i=s.getContext(),o=e.defines;let l=e.vertexShader,c=e.fragmentShader;const h=n3(e),f=i3(e),p=s3(e),m=a3(e),g=r3(e),v=j2(e),x=Z2(o),b=i.createProgram();let S,_,E=e.glslVersion?"#version "+e.glslVersion+`
`:"";e.isRawShaderMaterial?(S=["#define SHADER_TYPE "+e.shaderType,"#define SHADER_NAME "+e.shaderName,x].filter(Ul).join(`
`),S.length>0&&(S+=`
`),_=["#define SHADER_TYPE "+e.shaderType,"#define SHADER_NAME "+e.shaderName,x].filter(Ul).join(`
`),_.length>0&&(_+=`
`)):(S=[ny(e),"#define SHADER_TYPE "+e.shaderType,"#define SHADER_NAME "+e.shaderName,x,e.extensionClipCullDistance?"#define USE_CLIP_DISTANCE":"",e.batching?"#define USE_BATCHING":"",e.batchingColor?"#define USE_BATCHING_COLOR":"",e.instancing?"#define USE_INSTANCING":"",e.instancingColor?"#define USE_INSTANCING_COLOR":"",e.instancingMorph?"#define USE_INSTANCING_MORPH":"",e.useFog&&e.fog?"#define USE_FOG":"",e.useFog&&e.fogExp2?"#define FOG_EXP2":"",e.map?"#define USE_MAP":"",e.envMap?"#define USE_ENVMAP":"",e.envMap?"#define "+p:"",e.lightMap?"#define USE_LIGHTMAP":"",e.aoMap?"#define USE_AOMAP":"",e.bumpMap?"#define USE_BUMPMAP":"",e.normalMap?"#define USE_NORMALMAP":"",e.normalMapObjectSpace?"#define USE_NORMALMAP_OBJECTSPACE":"",e.normalMapTangentSpace?"#define USE_NORMALMAP_TANGENTSPACE":"",e.displacementMap?"#define USE_DISPLACEMENTMAP":"",e.emissiveMap?"#define USE_EMISSIVEMAP":"",e.anisotropy?"#define USE_ANISOTROPY":"",e.anisotropyMap?"#define USE_ANISOTROPYMAP":"",e.clearcoatMap?"#define USE_CLEARCOATMAP":"",e.clearcoatRoughnessMap?"#define USE_CLEARCOAT_ROUGHNESSMAP":"",e.clearcoatNormalMap?"#define USE_CLEARCOAT_NORMALMAP":"",e.iridescenceMap?"#define USE_IRIDESCENCEMAP":"",e.iridescenceThicknessMap?"#define USE_IRIDESCENCE_THICKNESSMAP":"",e.specularMap?"#define USE_SPECULARMAP":"",e.specularColorMap?"#define USE_SPECULAR_COLORMAP":"",e.specularIntensityMap?"#define USE_SPECULAR_INTENSITYMAP":"",e.roughnessMap?"#define USE_ROUGHNESSMAP":"",e.metalnessMap?"#define USE_METALNESSMAP":"",e.alphaMap?"#define USE_ALPHAMAP":"",e.alphaHash?"#define USE_ALPHAHASH":"",e.transmission?"#define USE_TRANSMISSION":"",e.transmissionMap?"#define USE_TRANSMISSIONMAP":"",e.thicknessMap?"#define USE_THICKNESSMAP":"",e.sheenColorMap?"#define USE_SHEEN_COLORMAP":"",e.sheenRoughnessMap?"#define USE_SHEEN_ROUGHNESSMAP":"",e.mapUv?"#define MAP_UV "+e.mapUv:"",e.alphaMapUv?"#define ALPHAMAP_UV "+e.alphaMapUv:"",e.lightMapUv?"#define LIGHTMAP_UV "+e.lightMapUv:"",e.aoMapUv?"#define AOMAP_UV "+e.aoMapUv:"",e.emissiveMapUv?"#define EMISSIVEMAP_UV "+e.emissiveMapUv:"",e.bumpMapUv?"#define BUMPMAP_UV "+e.bumpMapUv:"",e.normalMapUv?"#define NORMALMAP_UV "+e.normalMapUv:"",e.displacementMapUv?"#define DISPLACEMENTMAP_UV "+e.displacementMapUv:"",e.metalnessMapUv?"#define METALNESSMAP_UV "+e.metalnessMapUv:"",e.roughnessMapUv?"#define ROUGHNESSMAP_UV "+e.roughnessMapUv:"",e.anisotropyMapUv?"#define ANISOTROPYMAP_UV "+e.anisotropyMapUv:"",e.clearcoatMapUv?"#define CLEARCOATMAP_UV "+e.clearcoatMapUv:"",e.clearcoatNormalMapUv?"#define CLEARCOAT_NORMALMAP_UV "+e.clearcoatNormalMapUv:"",e.clearcoatRoughnessMapUv?"#define CLEARCOAT_ROUGHNESSMAP_UV "+e.clearcoatRoughnessMapUv:"",e.iridescenceMapUv?"#define IRIDESCENCEMAP_UV "+e.iridescenceMapUv:"",e.iridescenceThicknessMapUv?"#define IRIDESCENCE_THICKNESSMAP_UV "+e.iridescenceThicknessMapUv:"",e.sheenColorMapUv?"#define SHEEN_COLORMAP_UV "+e.sheenColorMapUv:"",e.sheenRoughnessMapUv?"#define SHEEN_ROUGHNESSMAP_UV "+e.sheenRoughnessMapUv:"",e.specularMapUv?"#define SPECULARMAP_UV "+e.specularMapUv:"",e.specularColorMapUv?"#define SPECULAR_COLORMAP_UV "+e.specularColorMapUv:"",e.specularIntensityMapUv?"#define SPECULAR_INTENSITYMAP_UV "+e.specularIntensityMapUv:"",e.transmissionMapUv?"#define TRANSMISSIONMAP_UV "+e.transmissionMapUv:"",e.thicknessMapUv?"#define THICKNESSMAP_UV "+e.thicknessMapUv:"",e.vertexTangents&&e.flatShading===!1?"#define USE_TANGENT":"",e.vertexColors?"#define USE_COLOR":"",e.vertexAlphas?"#define USE_COLOR_ALPHA":"",e.vertexUv1s?"#define USE_UV1":"",e.vertexUv2s?"#define USE_UV2":"",e.vertexUv3s?"#define USE_UV3":"",e.pointsUvs?"#define USE_POINTS_UV":"",e.flatShading?"#define FLAT_SHADED":"",e.skinning?"#define USE_SKINNING":"",e.morphTargets?"#define USE_MORPHTARGETS":"",e.morphNormals&&e.flatShading===!1?"#define USE_MORPHNORMALS":"",e.morphColors?"#define USE_MORPHCOLORS":"",e.morphTargetsCount>0?"#define MORPHTARGETS_TEXTURE_STRIDE "+e.morphTextureStride:"",e.morphTargetsCount>0?"#define MORPHTARGETS_COUNT "+e.morphTargetsCount:"",e.doubleSided?"#define DOUBLE_SIDED":"",e.flipSided?"#define FLIP_SIDED":"",e.shadowMapEnabled?"#define USE_SHADOWMAP":"",e.shadowMapEnabled?"#define "+h:"",e.sizeAttenuation?"#define USE_SIZEATTENUATION":"",e.numLightProbes>0?"#define USE_LIGHT_PROBES":"",e.logarithmicDepthBuffer?"#define USE_LOGDEPTHBUF":"",e.reversedDepthBuffer?"#define USE_REVERSEDEPTHBUF":"","uniform mat4 modelMatrix;","uniform mat4 modelViewMatrix;","uniform mat4 projectionMatrix;","uniform mat4 viewMatrix;","uniform mat3 normalMatrix;","uniform vec3 cameraPosition;","uniform bool isOrthographic;","#ifdef USE_INSTANCING","	attribute mat4 instanceMatrix;","#endif","#ifdef USE_INSTANCING_COLOR","	attribute vec3 instanceColor;","#endif","#ifdef USE_INSTANCING_MORPH","	uniform sampler2D morphTexture;","#endif","attribute vec3 position;","attribute vec3 normal;","attribute vec2 uv;","#ifdef USE_UV1","	attribute vec2 uv1;","#endif","#ifdef USE_UV2","	attribute vec2 uv2;","#endif","#ifdef USE_UV3","	attribute vec2 uv3;","#endif","#ifdef USE_TANGENT","	attribute vec4 tangent;","#endif","#if defined( USE_COLOR_ALPHA )","	attribute vec4 color;","#elif defined( USE_COLOR )","	attribute vec3 color;","#endif","#ifdef USE_SKINNING","	attribute vec4 skinIndex;","	attribute vec4 skinWeight;","#endif",`
`].filter(Ul).join(`
`),_=[ny(e),"#define SHADER_TYPE "+e.shaderType,"#define SHADER_NAME "+e.shaderName,x,e.useFog&&e.fog?"#define USE_FOG":"",e.useFog&&e.fogExp2?"#define FOG_EXP2":"",e.alphaToCoverage?"#define ALPHA_TO_COVERAGE":"",e.map?"#define USE_MAP":"",e.matcap?"#define USE_MATCAP":"",e.envMap?"#define USE_ENVMAP":"",e.envMap?"#define "+f:"",e.envMap?"#define "+p:"",e.envMap?"#define "+m:"",g?"#define CUBEUV_TEXEL_WIDTH "+g.texelWidth:"",g?"#define CUBEUV_TEXEL_HEIGHT "+g.texelHeight:"",g?"#define CUBEUV_MAX_MIP "+g.maxMip+".0":"",e.lightMap?"#define USE_LIGHTMAP":"",e.aoMap?"#define USE_AOMAP":"",e.bumpMap?"#define USE_BUMPMAP":"",e.normalMap?"#define USE_NORMALMAP":"",e.normalMapObjectSpace?"#define USE_NORMALMAP_OBJECTSPACE":"",e.normalMapTangentSpace?"#define USE_NORMALMAP_TANGENTSPACE":"",e.emissiveMap?"#define USE_EMISSIVEMAP":"",e.anisotropy?"#define USE_ANISOTROPY":"",e.anisotropyMap?"#define USE_ANISOTROPYMAP":"",e.clearcoat?"#define USE_CLEARCOAT":"",e.clearcoatMap?"#define USE_CLEARCOATMAP":"",e.clearcoatRoughnessMap?"#define USE_CLEARCOAT_ROUGHNESSMAP":"",e.clearcoatNormalMap?"#define USE_CLEARCOAT_NORMALMAP":"",e.dispersion?"#define USE_DISPERSION":"",e.iridescence?"#define USE_IRIDESCENCE":"",e.iridescenceMap?"#define USE_IRIDESCENCEMAP":"",e.iridescenceThicknessMap?"#define USE_IRIDESCENCE_THICKNESSMAP":"",e.specularMap?"#define USE_SPECULARMAP":"",e.specularColorMap?"#define USE_SPECULAR_COLORMAP":"",e.specularIntensityMap?"#define USE_SPECULAR_INTENSITYMAP":"",e.roughnessMap?"#define USE_ROUGHNESSMAP":"",e.metalnessMap?"#define USE_METALNESSMAP":"",e.alphaMap?"#define USE_ALPHAMAP":"",e.alphaTest?"#define USE_ALPHATEST":"",e.alphaHash?"#define USE_ALPHAHASH":"",e.sheen?"#define USE_SHEEN":"",e.sheenColorMap?"#define USE_SHEEN_COLORMAP":"",e.sheenRoughnessMap?"#define USE_SHEEN_ROUGHNESSMAP":"",e.transmission?"#define USE_TRANSMISSION":"",e.transmissionMap?"#define USE_TRANSMISSIONMAP":"",e.thicknessMap?"#define USE_THICKNESSMAP":"",e.vertexTangents&&e.flatShading===!1?"#define USE_TANGENT":"",e.vertexColors||e.instancingColor||e.batchingColor?"#define USE_COLOR":"",e.vertexAlphas?"#define USE_COLOR_ALPHA":"",e.vertexUv1s?"#define USE_UV1":"",e.vertexUv2s?"#define USE_UV2":"",e.vertexUv3s?"#define USE_UV3":"",e.pointsUvs?"#define USE_POINTS_UV":"",e.gradientMap?"#define USE_GRADIENTMAP":"",e.flatShading?"#define FLAT_SHADED":"",e.doubleSided?"#define DOUBLE_SIDED":"",e.flipSided?"#define FLIP_SIDED":"",e.shadowMapEnabled?"#define USE_SHADOWMAP":"",e.shadowMapEnabled?"#define "+h:"",e.premultipliedAlpha?"#define PREMULTIPLIED_ALPHA":"",e.numLightProbes>0?"#define USE_LIGHT_PROBES":"",e.decodeVideoTexture?"#define DECODE_VIDEO_TEXTURE":"",e.decodeVideoTextureEmissive?"#define DECODE_VIDEO_TEXTURE_EMISSIVE":"",e.logarithmicDepthBuffer?"#define USE_LOGDEPTHBUF":"",e.reversedDepthBuffer?"#define USE_REVERSEDEPTHBUF":"","uniform mat4 viewMatrix;","uniform vec3 cameraPosition;","uniform bool isOrthographic;",e.toneMapping!==ls?"#define TONE_MAPPING":"",e.toneMapping!==ls?Me.tonemapping_pars_fragment:"",e.toneMapping!==ls?q2("toneMapping",e.toneMapping):"",e.dithering?"#define DITHERING":"",e.opaque?"#define OPAQUE":"",Me.colorspace_pars_fragment,X2("linearToOutputTexel",e.outputColorSpace),Y2(),e.useDepthPacking?"#define DEPTH_PACKING "+e.depthPacking:"",`
`].filter(Ul).join(`
`)),l=ym(l),l=$_(l,e),l=ty(l,e),c=ym(c),c=$_(c,e),c=ty(c,e),l=ey(l),c=ey(c),e.isRawShaderMaterial!==!0&&(E=`#version 300 es
`,S=[v,"#define attribute in","#define varying out","#define texture2D texture"].join(`
`)+`
`+S,_=["#define varying in",e.glslVersion===cm?"":"layout(location = 0) out highp vec4 pc_fragColor;",e.glslVersion===cm?"":"#define gl_FragColor pc_fragColor","#define gl_FragDepthEXT gl_FragDepth","#define texture2D texture","#define textureCube texture","#define texture2DProj textureProj","#define texture2DLodEXT textureLod","#define texture2DProjLodEXT textureProjLod","#define textureCubeLodEXT textureLod","#define texture2DGradEXT textureGrad","#define texture2DProjGradEXT textureProjGrad","#define textureCubeGradEXT textureGrad"].join(`
`)+`
`+_);const A=E+S+l,T=E+_+c,U=K_(i,i.VERTEX_SHADER,A),D=K_(i,i.FRAGMENT_SHADER,T);i.attachShader(b,U),i.attachShader(b,D),e.index0AttributeName!==void 0?i.bindAttribLocation(b,0,e.index0AttributeName):e.morphTargets===!0&&i.bindAttribLocation(b,0,"position"),i.linkProgram(b);function P(B){if(s.debug.checkShaderErrors){const tt=i.getProgramInfoLog(b)||"",X=i.getShaderInfoLog(U)||"",Z=i.getShaderInfoLog(D)||"",ot=tt.trim(),k=X.trim(),et=Z.trim();let q=!0,ct=!0;if(i.getProgramParameter(b,i.LINK_STATUS)===!1)if(q=!1,typeof s.debug.onShaderError=="function")s.debug.onShaderError(i,b,U,D);else{const vt=Q_(i,U,"vertex"),xt=Q_(i,D,"fragment");console.error("THREE.WebGLProgram: Shader Error "+i.getError()+" - VALIDATE_STATUS "+i.getProgramParameter(b,i.VALIDATE_STATUS)+`

Material Name: `+B.name+`
Material Type: `+B.type+`

Program Info Log: `+ot+`
`+vt+`
`+xt)}else ot!==""?console.warn("THREE.WebGLProgram: Program Info Log:",ot):(k===""||et==="")&&(ct=!1);ct&&(B.diagnostics={runnable:q,programLog:ot,vertexShader:{log:k,prefix:S},fragmentShader:{log:et,prefix:_}})}i.deleteShader(U),i.deleteShader(D),O=new $u(i,b),C=K2(i,b)}let O;this.getUniforms=function(){return O===void 0&&P(this),O};let C;this.getAttributes=function(){return C===void 0&&P(this),C};let w=e.rendererExtensionParallelShaderCompile===!1;return this.isReady=function(){return w===!1&&(w=i.getProgramParameter(b,V2)),w},this.destroy=function(){n.releaseStatesOfProgram(this),i.deleteProgram(b),this.program=void 0},this.type=e.shaderType,this.name=e.shaderName,this.id=G2++,this.cacheKey=t,this.usedTimes=1,this.program=b,this.vertexShader=U,this.fragmentShader=D,this}let l3=0;class c3{constructor(){this.shaderCache=new Map,this.materialCache=new Map}update(t){const e=t.vertexShader,n=t.fragmentShader,i=this._getShaderStage(e),o=this._getShaderStage(n),l=this._getShaderCacheForMaterial(t);return l.has(i)===!1&&(l.add(i),i.usedTimes++),l.has(o)===!1&&(l.add(o),o.usedTimes++),this}remove(t){const e=this.materialCache.get(t);for(const n of e)n.usedTimes--,n.usedTimes===0&&this.shaderCache.delete(n.code);return this.materialCache.delete(t),this}getVertexShaderID(t){return this._getShaderStage(t.vertexShader).id}getFragmentShaderID(t){return this._getShaderStage(t.fragmentShader).id}dispose(){this.shaderCache.clear(),this.materialCache.clear()}_getShaderCacheForMaterial(t){const e=this.materialCache;let n=e.get(t);return n===void 0&&(n=new Set,e.set(t,n)),n}_getShaderStage(t){const e=this.shaderCache;let n=e.get(t);return n===void 0&&(n=new u3(t),e.set(t,n)),n}}class u3{constructor(t){this.id=l3++,this.code=t,this.usedTimes=0}}function h3(s,t,e,n,i,o,l){const c=new No,h=new c3,f=new Set,p=[],m=i.logarithmicDepthBuffer,g=i.vertexTextures;let v=i.precision;const x={MeshDepthMaterial:"depth",MeshDistanceMaterial:"distanceRGBA",MeshNormalMaterial:"normal",MeshBasicMaterial:"basic",MeshLambertMaterial:"lambert",MeshPhongMaterial:"phong",MeshToonMaterial:"toon",MeshStandardMaterial:"physical",MeshPhysicalMaterial:"physical",MeshMatcapMaterial:"matcap",LineBasicMaterial:"basic",LineDashedMaterial:"dashed",PointsMaterial:"points",ShadowMaterial:"shadow",SpriteMaterial:"sprite"};function b(C){return f.add(C),C===0?"uv":`uv${C}`}function S(C,w,B,tt,X){const Z=tt.fog,ot=X.geometry,k=C.isMeshStandardMaterial?tt.environment:null,et=(C.isMeshStandardMaterial?e:t).get(C.envMap||k),q=et&&et.mapping===Bo?et.image.height:null,ct=x[C.type];C.precision!==null&&(v=i.getMaxPrecision(C.precision),v!==C.precision&&console.warn("THREE.WebGLProgram.getParameters:",C.precision,"not supported, using",v,"instead."));const vt=ot.morphAttributes.position||ot.morphAttributes.normal||ot.morphAttributes.color,xt=vt!==void 0?vt.length:0;let Ot=0;ot.morphAttributes.position!==void 0&&(Ot=1),ot.morphAttributes.normal!==void 0&&(Ot=2),ot.morphAttributes.color!==void 0&&(Ot=3);let ne,jt,at,Lt;if(ct){const Se=Yi[ct];ne=Se.vertexShader,jt=Se.fragmentShader}else ne=C.vertexShader,jt=C.fragmentShader,h.update(C),at=h.getVertexShaderID(C),Lt=h.getFragmentShaderID(C);const Rt=s.getRenderTarget(),Qt=s.state.buffers.depth.getReversed(),Zt=X.isInstancedMesh===!0,re=X.isBatchedMesh===!0,Be=!!C.map,le=!!C.matcap,H=!!et,mt=!!C.aoMap,ut=!!C.lightMap,St=!!C.bumpMap,ht=!!C.normalMap,Nt=!!C.displacementMap,yt=!!C.emissiveMap,wt=!!C.metalnessMap,ce=!!C.roughnessMap,he=C.anisotropy>0,z=C.clearcoat>0,R=C.dispersion>0,J=C.iridescence>0,rt=C.sheen>0,_t=C.transmission>0,lt=he&&!!C.anisotropyMap,Kt=z&&!!C.clearcoatMap,Dt=z&&!!C.clearcoatNormalMap,Xt=z&&!!C.clearcoatRoughnessMap,qt=J&&!!C.iridescenceMap,Mt=J&&!!C.iridescenceThicknessMap,Pt=rt&&!!C.sheenColorMap,te=rt&&!!C.sheenRoughnessMap,F=!!C.specularMap,$=!!C.specularColorMap,Et=!!C.specularIntensityMap,V=_t&&!!C.transmissionMap,gt=_t&&!!C.thicknessMap,Tt=!!C.gradientMap,zt=!!C.alphaMap,bt=C.alphaTest>0,pt=!!C.alphaHash,Ft=!!C.extensions;let ee=ls;C.toneMapped&&(Rt===null||Rt.isXRRenderTarget===!0)&&(ee=s.toneMapping);const Te={shaderID:ct,shaderType:C.type,shaderName:C.name,vertexShader:ne,fragmentShader:jt,defines:C.defines,customVertexShaderID:at,customFragmentShaderID:Lt,isRawShaderMaterial:C.isRawShaderMaterial===!0,glslVersion:C.glslVersion,precision:v,batching:re,batchingColor:re&&X._colorsTexture!==null,instancing:Zt,instancingColor:Zt&&X.instanceColor!==null,instancingMorph:Zt&&X.morphTexture!==null,supportsVertexTextures:g,outputColorSpace:Rt===null?s.outputColorSpace:Rt.isXRRenderTarget===!0?Rt.texture.colorSpace:va,alphaToCoverage:!!C.alphaToCoverage,map:Be,matcap:le,envMap:H,envMapMode:H&&et.mapping,envMapCubeUVHeight:q,aoMap:mt,lightMap:ut,bumpMap:St,normalMap:ht,displacementMap:g&&Nt,emissiveMap:yt,normalMapObjectSpace:ht&&C.normalMapType===fx,normalMapTangentSpace:ht&&C.normalMapType===ya,metalnessMap:wt,roughnessMap:ce,anisotropy:he,anisotropyMap:lt,clearcoat:z,clearcoatMap:Kt,clearcoatNormalMap:Dt,clearcoatRoughnessMap:Xt,dispersion:R,iridescence:J,iridescenceMap:qt,iridescenceThicknessMap:Mt,sheen:rt,sheenColorMap:Pt,sheenRoughnessMap:te,specularMap:F,specularColorMap:$,specularIntensityMap:Et,transmission:_t,transmissionMap:V,thicknessMap:gt,gradientMap:Tt,opaque:C.transparent===!1&&C.blending===fr&&C.alphaToCoverage===!1,alphaMap:zt,alphaTest:bt,alphaHash:pt,combine:C.combine,mapUv:Be&&b(C.map.channel),aoMapUv:mt&&b(C.aoMap.channel),lightMapUv:ut&&b(C.lightMap.channel),bumpMapUv:St&&b(C.bumpMap.channel),normalMapUv:ht&&b(C.normalMap.channel),displacementMapUv:Nt&&b(C.displacementMap.channel),emissiveMapUv:yt&&b(C.emissiveMap.channel),metalnessMapUv:wt&&b(C.metalnessMap.channel),roughnessMapUv:ce&&b(C.roughnessMap.channel),anisotropyMapUv:lt&&b(C.anisotropyMap.channel),clearcoatMapUv:Kt&&b(C.clearcoatMap.channel),clearcoatNormalMapUv:Dt&&b(C.clearcoatNormalMap.channel),clearcoatRoughnessMapUv:Xt&&b(C.clearcoatRoughnessMap.channel),iridescenceMapUv:qt&&b(C.iridescenceMap.channel),iridescenceThicknessMapUv:Mt&&b(C.iridescenceThicknessMap.channel),sheenColorMapUv:Pt&&b(C.sheenColorMap.channel),sheenRoughnessMapUv:te&&b(C.sheenRoughnessMap.channel),specularMapUv:F&&b(C.specularMap.channel),specularColorMapUv:$&&b(C.specularColorMap.channel),specularIntensityMapUv:Et&&b(C.specularIntensityMap.channel),transmissionMapUv:V&&b(C.transmissionMap.channel),thicknessMapUv:gt&&b(C.thicknessMap.channel),alphaMapUv:zt&&b(C.alphaMap.channel),vertexTangents:!!ot.attributes.tangent&&(ht||he),vertexColors:C.vertexColors,vertexAlphas:C.vertexColors===!0&&!!ot.attributes.color&&ot.attributes.color.itemSize===4,pointsUvs:X.isPoints===!0&&!!ot.attributes.uv&&(Be||zt),fog:!!Z,useFog:C.fog===!0,fogExp2:!!Z&&Z.isFogExp2,flatShading:C.flatShading===!0&&C.wireframe===!1,sizeAttenuation:C.sizeAttenuation===!0,logarithmicDepthBuffer:m,reversedDepthBuffer:Qt,skinning:X.isSkinnedMesh===!0,morphTargets:ot.morphAttributes.position!==void 0,morphNormals:ot.morphAttributes.normal!==void 0,morphColors:ot.morphAttributes.color!==void 0,morphTargetsCount:xt,morphTextureStride:Ot,numDirLights:w.directional.length,numPointLights:w.point.length,numSpotLights:w.spot.length,numSpotLightMaps:w.spotLightMap.length,numRectAreaLights:w.rectArea.length,numHemiLights:w.hemi.length,numDirLightShadows:w.directionalShadowMap.length,numPointLightShadows:w.pointShadowMap.length,numSpotLightShadows:w.spotShadowMap.length,numSpotLightShadowsWithMaps:w.numSpotLightShadowsWithMaps,numLightProbes:w.numLightProbes,numClippingPlanes:l.numPlanes,numClipIntersection:l.numIntersection,dithering:C.dithering,shadowMapEnabled:s.shadowMap.enabled&&B.length>0,shadowMapType:s.shadowMap.type,toneMapping:ee,decodeVideoTexture:Be&&C.map.isVideoTexture===!0&&Re.getTransfer(C.map.colorSpace)===Ve,decodeVideoTextureEmissive:yt&&C.emissiveMap.isVideoTexture===!0&&Re.getTransfer(C.emissiveMap.colorSpace)===Ve,premultipliedAlpha:C.premultipliedAlpha,doubleSided:C.side===as,flipSided:C.side===Qn,useDepthPacking:C.depthPacking>=0,depthPacking:C.depthPacking||0,index0AttributeName:C.index0AttributeName,extensionClipCullDistance:Ft&&C.extensions.clipCullDistance===!0&&n.has("WEBGL_clip_cull_distance"),extensionMultiDraw:(Ft&&C.extensions.multiDraw===!0||re)&&n.has("WEBGL_multi_draw"),rendererExtensionParallelShaderCompile:n.has("KHR_parallel_shader_compile"),customProgramCacheKey:C.customProgramCacheKey()};return Te.vertexUv1s=f.has(1),Te.vertexUv2s=f.has(2),Te.vertexUv3s=f.has(3),f.clear(),Te}function _(C){const w=[];if(C.shaderID?w.push(C.shaderID):(w.push(C.customVertexShaderID),w.push(C.customFragmentShaderID)),C.defines!==void 0)for(const B in C.defines)w.push(B),w.push(C.defines[B]);return C.isRawShaderMaterial===!1&&(E(w,C),A(w,C),w.push(s.outputColorSpace)),w.push(C.customProgramCacheKey),w.join()}function E(C,w){C.push(w.precision),C.push(w.outputColorSpace),C.push(w.envMapMode),C.push(w.envMapCubeUVHeight),C.push(w.mapUv),C.push(w.alphaMapUv),C.push(w.lightMapUv),C.push(w.aoMapUv),C.push(w.bumpMapUv),C.push(w.normalMapUv),C.push(w.displacementMapUv),C.push(w.emissiveMapUv),C.push(w.metalnessMapUv),C.push(w.roughnessMapUv),C.push(w.anisotropyMapUv),C.push(w.clearcoatMapUv),C.push(w.clearcoatNormalMapUv),C.push(w.clearcoatRoughnessMapUv),C.push(w.iridescenceMapUv),C.push(w.iridescenceThicknessMapUv),C.push(w.sheenColorMapUv),C.push(w.sheenRoughnessMapUv),C.push(w.specularMapUv),C.push(w.specularColorMapUv),C.push(w.specularIntensityMapUv),C.push(w.transmissionMapUv),C.push(w.thicknessMapUv),C.push(w.combine),C.push(w.fogExp2),C.push(w.sizeAttenuation),C.push(w.morphTargetsCount),C.push(w.morphAttributeCount),C.push(w.numDirLights),C.push(w.numPointLights),C.push(w.numSpotLights),C.push(w.numSpotLightMaps),C.push(w.numHemiLights),C.push(w.numRectAreaLights),C.push(w.numDirLightShadows),C.push(w.numPointLightShadows),C.push(w.numSpotLightShadows),C.push(w.numSpotLightShadowsWithMaps),C.push(w.numLightProbes),C.push(w.shadowMapType),C.push(w.toneMapping),C.push(w.numClippingPlanes),C.push(w.numClipIntersection),C.push(w.depthPacking)}function A(C,w){c.disableAll(),w.supportsVertexTextures&&c.enable(0),w.instancing&&c.enable(1),w.instancingColor&&c.enable(2),w.instancingMorph&&c.enable(3),w.matcap&&c.enable(4),w.envMap&&c.enable(5),w.normalMapObjectSpace&&c.enable(6),w.normalMapTangentSpace&&c.enable(7),w.clearcoat&&c.enable(8),w.iridescence&&c.enable(9),w.alphaTest&&c.enable(10),w.vertexColors&&c.enable(11),w.vertexAlphas&&c.enable(12),w.vertexUv1s&&c.enable(13),w.vertexUv2s&&c.enable(14),w.vertexUv3s&&c.enable(15),w.vertexTangents&&c.enable(16),w.anisotropy&&c.enable(17),w.alphaHash&&c.enable(18),w.batching&&c.enable(19),w.dispersion&&c.enable(20),w.batchingColor&&c.enable(21),w.gradientMap&&c.enable(22),C.push(c.mask),c.disableAll(),w.fog&&c.enable(0),w.useFog&&c.enable(1),w.flatShading&&c.enable(2),w.logarithmicDepthBuffer&&c.enable(3),w.reversedDepthBuffer&&c.enable(4),w.skinning&&c.enable(5),w.morphTargets&&c.enable(6),w.morphNormals&&c.enable(7),w.morphColors&&c.enable(8),w.premultipliedAlpha&&c.enable(9),w.shadowMapEnabled&&c.enable(10),w.doubleSided&&c.enable(11),w.flipSided&&c.enable(12),w.useDepthPacking&&c.enable(13),w.dithering&&c.enable(14),w.transmission&&c.enable(15),w.sheen&&c.enable(16),w.opaque&&c.enable(17),w.pointsUvs&&c.enable(18),w.decodeVideoTexture&&c.enable(19),w.decodeVideoTextureEmissive&&c.enable(20),w.alphaToCoverage&&c.enable(21),C.push(c.mask)}function T(C){const w=x[C.type];let B;if(w){const tt=Yi[w];B=Tx.clone(tt.uniforms)}else B=C.uniforms;return B}function U(C,w){let B;for(let tt=0,X=p.length;tt<X;tt++){const Z=p[tt];if(Z.cacheKey===w){B=Z,++B.usedTimes;break}}return B===void 0&&(B=new o3(s,w,C,o),p.push(B)),B}function D(C){if(--C.usedTimes===0){const w=p.indexOf(C);p[w]=p[p.length-1],p.pop(),C.destroy()}}function P(C){h.remove(C)}function O(){h.dispose()}return{getParameters:S,getProgramCacheKey:_,getUniforms:T,acquireProgram:U,releaseProgram:D,releaseShaderCache:P,programs:p,dispose:O}}function f3(){let s=new WeakMap;function t(l){return s.has(l)}function e(l){let c=s.get(l);return c===void 0&&(c={},s.set(l,c)),c}function n(l){s.delete(l)}function i(l,c,h){s.get(l)[c]=h}function o(){s=new WeakMap}return{has:t,get:e,remove:n,update:i,dispose:o}}function d3(s,t){return s.groupOrder!==t.groupOrder?s.groupOrder-t.groupOrder:s.renderOrder!==t.renderOrder?s.renderOrder-t.renderOrder:s.material.id!==t.material.id?s.material.id-t.material.id:s.z!==t.z?s.z-t.z:s.id-t.id}function iy(s,t){return s.groupOrder!==t.groupOrder?s.groupOrder-t.groupOrder:s.renderOrder!==t.renderOrder?s.renderOrder-t.renderOrder:s.z!==t.z?t.z-s.z:s.id-t.id}function sy(){const s=[];let t=0;const e=[],n=[],i=[];function o(){t=0,e.length=0,n.length=0,i.length=0}function l(m,g,v,x,b,S){let _=s[t];return _===void 0?(_={id:m.id,object:m,geometry:g,material:v,groupOrder:x,renderOrder:m.renderOrder,z:b,group:S},s[t]=_):(_.id=m.id,_.object=m,_.geometry=g,_.material=v,_.groupOrder=x,_.renderOrder=m.renderOrder,_.z=b,_.group=S),t++,_}function c(m,g,v,x,b,S){const _=l(m,g,v,x,b,S);v.transmission>0?n.push(_):v.transparent===!0?i.push(_):e.push(_)}function h(m,g,v,x,b,S){const _=l(m,g,v,x,b,S);v.transmission>0?n.unshift(_):v.transparent===!0?i.unshift(_):e.unshift(_)}function f(m,g){e.length>1&&e.sort(m||d3),n.length>1&&n.sort(g||iy),i.length>1&&i.sort(g||iy)}function p(){for(let m=t,g=s.length;m<g;m++){const v=s[m];if(v.id===null)break;v.id=null,v.object=null,v.geometry=null,v.material=null,v.group=null}}return{opaque:e,transmissive:n,transparent:i,init:o,push:c,unshift:h,finish:p,sort:f}}function p3(){let s=new WeakMap;function t(n,i){const o=s.get(n);let l;return o===void 0?(l=new sy,s.set(n,[l])):i>=o.length?(l=new sy,o.push(l)):l=o[i],l}function e(){s=new WeakMap}return{get:t,dispose:e}}function m3(){const s={};return{get:function(t){if(s[t.id]!==void 0)return s[t.id];let e;switch(t.type){case"DirectionalLight":e={direction:new I,color:new kt};break;case"SpotLight":e={position:new I,direction:new I,color:new kt,distance:0,coneCos:0,penumbraCos:0,decay:0};break;case"PointLight":e={position:new I,color:new kt,distance:0,decay:0};break;case"HemisphereLight":e={direction:new I,skyColor:new kt,groundColor:new kt};break;case"RectAreaLight":e={color:new kt,position:new I,halfWidth:new I,halfHeight:new I};break}return s[t.id]=e,e}}}function g3(){const s={};return{get:function(t){if(s[t.id]!==void 0)return s[t.id];let e;switch(t.type){case"DirectionalLight":e={shadowIntensity:1,shadowBias:0,shadowNormalBias:0,shadowRadius:1,shadowMapSize:new dt};break;case"SpotLight":e={shadowIntensity:1,shadowBias:0,shadowNormalBias:0,shadowRadius:1,shadowMapSize:new dt};break;case"PointLight":e={shadowIntensity:1,shadowBias:0,shadowNormalBias:0,shadowRadius:1,shadowMapSize:new dt,shadowCameraNear:1,shadowCameraFar:1e3};break}return s[t.id]=e,e}}}let v3=0;function _3(s,t){return(t.castShadow?2:0)-(s.castShadow?2:0)+(t.map?1:0)-(s.map?1:0)}function y3(s){const t=new m3,e=g3(),n={version:0,hash:{directionalLength:-1,pointLength:-1,spotLength:-1,rectAreaLength:-1,hemiLength:-1,numDirectionalShadows:-1,numPointShadows:-1,numSpotShadows:-1,numSpotMaps:-1,numLightProbes:-1},ambient:[0,0,0],probe:[],directional:[],directionalShadow:[],directionalShadowMap:[],directionalShadowMatrix:[],spot:[],spotLightMap:[],spotShadow:[],spotShadowMap:[],spotLightMatrix:[],rectArea:[],rectAreaLTC1:null,rectAreaLTC2:null,point:[],pointShadow:[],pointShadowMap:[],pointShadowMatrix:[],hemi:[],numSpotLightShadowsWithMaps:0,numLightProbes:0};for(let f=0;f<9;f++)n.probe.push(new I);const i=new I,o=new pe,l=new pe;function c(f){let p=0,m=0,g=0;for(let C=0;C<9;C++)n.probe[C].set(0,0,0);let v=0,x=0,b=0,S=0,_=0,E=0,A=0,T=0,U=0,D=0,P=0;f.sort(_3);for(let C=0,w=f.length;C<w;C++){const B=f[C],tt=B.color,X=B.intensity,Z=B.distance,ot=B.shadow&&B.shadow.map?B.shadow.map.texture:null;if(B.isAmbientLight)p+=tt.r*X,m+=tt.g*X,g+=tt.b*X;else if(B.isLightProbe){for(let k=0;k<9;k++)n.probe[k].addScaledVector(B.sh.coefficients[k],X);P++}else if(B.isDirectionalLight){const k=t.get(B);if(k.color.copy(B.color).multiplyScalar(B.intensity),B.castShadow){const et=B.shadow,q=e.get(B);q.shadowIntensity=et.intensity,q.shadowBias=et.bias,q.shadowNormalBias=et.normalBias,q.shadowRadius=et.radius,q.shadowMapSize=et.mapSize,n.directionalShadow[v]=q,n.directionalShadowMap[v]=ot,n.directionalShadowMatrix[v]=B.shadow.matrix,E++}n.directional[v]=k,v++}else if(B.isSpotLight){const k=t.get(B);k.position.setFromMatrixPosition(B.matrixWorld),k.color.copy(tt).multiplyScalar(X),k.distance=Z,k.coneCos=Math.cos(B.angle),k.penumbraCos=Math.cos(B.angle*(1-B.penumbra)),k.decay=B.decay,n.spot[b]=k;const et=B.shadow;if(B.map&&(n.spotLightMap[U]=B.map,U++,et.updateMatrices(B),B.castShadow&&D++),n.spotLightMatrix[b]=et.matrix,B.castShadow){const q=e.get(B);q.shadowIntensity=et.intensity,q.shadowBias=et.bias,q.shadowNormalBias=et.normalBias,q.shadowRadius=et.radius,q.shadowMapSize=et.mapSize,n.spotShadow[b]=q,n.spotShadowMap[b]=ot,T++}b++}else if(B.isRectAreaLight){const k=t.get(B);k.color.copy(tt).multiplyScalar(X),k.halfWidth.set(B.width*.5,0,0),k.halfHeight.set(0,B.height*.5,0),n.rectArea[S]=k,S++}else if(B.isPointLight){const k=t.get(B);if(k.color.copy(B.color).multiplyScalar(B.intensity),k.distance=B.distance,k.decay=B.decay,B.castShadow){const et=B.shadow,q=e.get(B);q.shadowIntensity=et.intensity,q.shadowBias=et.bias,q.shadowNormalBias=et.normalBias,q.shadowRadius=et.radius,q.shadowMapSize=et.mapSize,q.shadowCameraNear=et.camera.near,q.shadowCameraFar=et.camera.far,n.pointShadow[x]=q,n.pointShadowMap[x]=ot,n.pointShadowMatrix[x]=B.shadow.matrix,A++}n.point[x]=k,x++}else if(B.isHemisphereLight){const k=t.get(B);k.skyColor.copy(B.color).multiplyScalar(X),k.groundColor.copy(B.groundColor).multiplyScalar(X),n.hemi[_]=k,_++}}S>0&&(s.has("OES_texture_float_linear")===!0?(n.rectAreaLTC1=Bt.LTC_FLOAT_1,n.rectAreaLTC2=Bt.LTC_FLOAT_2):(n.rectAreaLTC1=Bt.LTC_HALF_1,n.rectAreaLTC2=Bt.LTC_HALF_2)),n.ambient[0]=p,n.ambient[1]=m,n.ambient[2]=g;const O=n.hash;(O.directionalLength!==v||O.pointLength!==x||O.spotLength!==b||O.rectAreaLength!==S||O.hemiLength!==_||O.numDirectionalShadows!==E||O.numPointShadows!==A||O.numSpotShadows!==T||O.numSpotMaps!==U||O.numLightProbes!==P)&&(n.directional.length=v,n.spot.length=b,n.rectArea.length=S,n.point.length=x,n.hemi.length=_,n.directionalShadow.length=E,n.directionalShadowMap.length=E,n.pointShadow.length=A,n.pointShadowMap.length=A,n.spotShadow.length=T,n.spotShadowMap.length=T,n.directionalShadowMatrix.length=E,n.pointShadowMatrix.length=A,n.spotLightMatrix.length=T+U-D,n.spotLightMap.length=U,n.numSpotLightShadowsWithMaps=D,n.numLightProbes=P,O.directionalLength=v,O.pointLength=x,O.spotLength=b,O.rectAreaLength=S,O.hemiLength=_,O.numDirectionalShadows=E,O.numPointShadows=A,O.numSpotShadows=T,O.numSpotMaps=U,O.numLightProbes=P,n.version=v3++)}function h(f,p){let m=0,g=0,v=0,x=0,b=0;const S=p.matrixWorldInverse;for(let _=0,E=f.length;_<E;_++){const A=f[_];if(A.isDirectionalLight){const T=n.directional[m];T.direction.setFromMatrixPosition(A.matrixWorld),i.setFromMatrixPosition(A.target.matrixWorld),T.direction.sub(i),T.direction.transformDirection(S),m++}else if(A.isSpotLight){const T=n.spot[v];T.position.setFromMatrixPosition(A.matrixWorld),T.position.applyMatrix4(S),T.direction.setFromMatrixPosition(A.matrixWorld),i.setFromMatrixPosition(A.target.matrixWorld),T.direction.sub(i),T.direction.transformDirection(S),v++}else if(A.isRectAreaLight){const T=n.rectArea[x];T.position.setFromMatrixPosition(A.matrixWorld),T.position.applyMatrix4(S),l.identity(),o.copy(A.matrixWorld),o.premultiply(S),l.extractRotation(o),T.halfWidth.set(A.width*.5,0,0),T.halfHeight.set(0,A.height*.5,0),T.halfWidth.applyMatrix4(l),T.halfHeight.applyMatrix4(l),x++}else if(A.isPointLight){const T=n.point[g];T.position.setFromMatrixPosition(A.matrixWorld),T.position.applyMatrix4(S),g++}else if(A.isHemisphereLight){const T=n.hemi[b];T.direction.setFromMatrixPosition(A.matrixWorld),T.direction.transformDirection(S),b++}}}return{setup:c,setupView:h,state:n}}function ay(s){const t=new y3(s),e=[],n=[];function i(p){f.camera=p,e.length=0,n.length=0}function o(p){e.push(p)}function l(p){n.push(p)}function c(){t.setup(e)}function h(p){t.setupView(e,p)}const f={lightsArray:e,shadowsArray:n,camera:null,lights:t,transmissionRenderTarget:{}};return{init:i,state:f,setupLights:c,setupLightsView:h,pushLight:o,pushShadow:l}}function x3(s){let t=new WeakMap;function e(i,o=0){const l=t.get(i);let c;return l===void 0?(c=new ay(s),t.set(i,[c])):o>=l.length?(c=new ay(s),l.push(c)):c=l[o],c}function n(){t=new WeakMap}return{get:e,dispose:n}}const S3=`void main() {
	gl_Position = vec4( position, 1.0 );
}`,M3=`uniform sampler2D shadow_pass;
uniform vec2 resolution;
uniform float radius;
#include <packing>
void main() {
	const float samples = float( VSM_SAMPLES );
	float mean = 0.0;
	float squared_mean = 0.0;
	float uvStride = samples <= 1.0 ? 0.0 : 2.0 / ( samples - 1.0 );
	float uvStart = samples <= 1.0 ? 0.0 : - 1.0;
	for ( float i = 0.0; i < samples; i ++ ) {
		float uvOffset = uvStart + i * uvStride;
		#ifdef HORIZONTAL_PASS
			vec2 distribution = unpackRGBATo2Half( texture2D( shadow_pass, ( gl_FragCoord.xy + vec2( uvOffset, 0.0 ) * radius ) / resolution ) );
			mean += distribution.x;
			squared_mean += distribution.y * distribution.y + distribution.x * distribution.x;
		#else
			float depth = unpackRGBAToDepth( texture2D( shadow_pass, ( gl_FragCoord.xy + vec2( 0.0, uvOffset ) * radius ) / resolution ) );
			mean += depth;
			squared_mean += depth * depth;
		#endif
	}
	mean = mean / samples;
	squared_mean = squared_mean / samples;
	float std_dev = sqrt( squared_mean - mean * mean );
	gl_FragColor = pack2HalfToRGBA( vec2( mean, std_dev ) );
}`;function b3(s,t,e){let n=new Fo;const i=new dt,o=new dt,l=new Ne,c=new tg({depthPacking:hx}),h=new eg,f={},p=e.maxTextureSize,m={[zs]:Qn,[Qn]:zs,[as]:as},g=new Zi({defines:{VSM_SAMPLES:8},uniforms:{shadow_pass:{value:null},resolution:{value:new dt},radius:{value:4}},vertexShader:S3,fragmentShader:M3}),v=g.clone();v.defines.HORIZONTAL_PASS=1;const x=new xe;x.setAttribute("position",new Xe(new Float32Array([-1,-1,.5,3,-1,.5,-1,3,.5]),3));const b=new dn(x,g),S=this;this.enabled=!1,this.autoUpdate=!0,this.needsUpdate=!1,this.type=qh;let _=this.type;this.render=function(D,P,O){if(S.enabled===!1||S.autoUpdate===!1&&S.needsUpdate===!1||D.length===0)return;const C=s.getRenderTarget(),w=s.getActiveCubeFace(),B=s.getActiveMipmapLevel(),tt=s.state;tt.setBlending(Os),tt.buffers.depth.getReversed()?tt.buffers.color.setClear(0,0,0,0):tt.buffers.color.setClear(1,1,1,1),tt.buffers.depth.setTest(!0),tt.setScissorTest(!1);const X=_!==qi&&this.type===qi,Z=_===qi&&this.type!==qi;for(let ot=0,k=D.length;ot<k;ot++){const et=D[ot],q=et.shadow;if(q===void 0){console.warn("THREE.WebGLShadowMap:",et,"has no shadow.");continue}if(q.autoUpdate===!1&&q.needsUpdate===!1)continue;i.copy(q.mapSize);const ct=q.getFrameExtents();if(i.multiply(ct),o.copy(q.mapSize),(i.x>p||i.y>p)&&(i.x>p&&(o.x=Math.floor(p/ct.x),i.x=o.x*ct.x,q.mapSize.x=o.x),i.y>p&&(o.y=Math.floor(p/ct.y),i.y=o.y*ct.y,q.mapSize.y=o.y)),q.map===null||X===!0||Z===!0){const xt=this.type!==qi?{minFilter:Cn,magFilter:Cn}:{};q.map!==null&&q.map.dispose(),q.map=new us(i.x,i.y,xt),q.map.texture.name=et.name+".shadowMap",q.camera.updateProjectionMatrix()}s.setRenderTarget(q.map),s.clear();const vt=q.getViewportCount();for(let xt=0;xt<vt;xt++){const Ot=q.getViewport(xt);l.set(o.x*Ot.x,o.y*Ot.y,o.x*Ot.z,o.y*Ot.w),tt.viewport(l),q.updateMatrices(et,xt),n=q.getFrustum(),T(P,O,q.camera,et,this.type)}q.isPointLightShadow!==!0&&this.type===qi&&E(q,O),q.needsUpdate=!1}_=this.type,S.needsUpdate=!1,s.setRenderTarget(C,w,B)};function E(D,P){const O=t.update(b);g.defines.VSM_SAMPLES!==D.blurSamples&&(g.defines.VSM_SAMPLES=D.blurSamples,v.defines.VSM_SAMPLES=D.blurSamples,g.needsUpdate=!0,v.needsUpdate=!0),D.mapPass===null&&(D.mapPass=new us(i.x,i.y)),g.uniforms.shadow_pass.value=D.map.texture,g.uniforms.resolution.value=D.mapSize,g.uniforms.radius.value=D.radius,s.setRenderTarget(D.mapPass),s.clear(),s.renderBufferDirect(P,null,O,g,b,null),v.uniforms.shadow_pass.value=D.mapPass.texture,v.uniforms.resolution.value=D.mapSize,v.uniforms.radius.value=D.radius,s.setRenderTarget(D.map),s.clear(),s.renderBufferDirect(P,null,O,v,b,null)}function A(D,P,O,C){let w=null;const B=O.isPointLight===!0?D.customDistanceMaterial:D.customDepthMaterial;if(B!==void 0)w=B;else if(w=O.isPointLight===!0?h:c,s.localClippingEnabled&&P.clipShadows===!0&&Array.isArray(P.clippingPlanes)&&P.clippingPlanes.length!==0||P.displacementMap&&P.displacementScale!==0||P.alphaMap&&P.alphaTest>0||P.map&&P.alphaTest>0||P.alphaToCoverage===!0){const tt=w.uuid,X=P.uuid;let Z=f[tt];Z===void 0&&(Z={},f[tt]=Z);let ot=Z[X];ot===void 0&&(ot=w.clone(),Z[X]=ot,P.addEventListener("dispose",U)),w=ot}if(w.visible=P.visible,w.wireframe=P.wireframe,C===qi?w.side=P.shadowSide!==null?P.shadowSide:P.side:w.side=P.shadowSide!==null?P.shadowSide:m[P.side],w.alphaMap=P.alphaMap,w.alphaTest=P.alphaToCoverage===!0?.5:P.alphaTest,w.map=P.map,w.clipShadows=P.clipShadows,w.clippingPlanes=P.clippingPlanes,w.clipIntersection=P.clipIntersection,w.displacementMap=P.displacementMap,w.displacementScale=P.displacementScale,w.displacementBias=P.displacementBias,w.wireframeLinewidth=P.wireframeLinewidth,w.linewidth=P.linewidth,O.isPointLight===!0&&w.isMeshDistanceMaterial===!0){const tt=s.properties.get(w);tt.light=O}return w}function T(D,P,O,C,w){if(D.visible===!1)return;if(D.layers.test(P.layers)&&(D.isMesh||D.isLine||D.isPoints)&&(D.castShadow||D.receiveShadow&&w===qi)&&(!D.frustumCulled||n.intersectsObject(D))){D.modelViewMatrix.multiplyMatrices(O.matrixWorldInverse,D.matrixWorld);const X=t.update(D),Z=D.material;if(Array.isArray(Z)){const ot=X.groups;for(let k=0,et=ot.length;k<et;k++){const q=ot[k],ct=Z[q.materialIndex];if(ct&&ct.visible){const vt=A(D,ct,C,w);D.onBeforeShadow(s,D,P,O,X,vt,q),s.renderBufferDirect(O,null,X,vt,D,q),D.onAfterShadow(s,D,P,O,X,vt,q)}}}else if(Z.visible){const ot=A(D,Z,C,w);D.onBeforeShadow(s,D,P,O,X,ot,null),s.renderBufferDirect(O,null,X,ot,D,null),D.onAfterShadow(s,D,P,O,X,ot,null)}}const tt=D.children;for(let X=0,Z=tt.length;X<Z;X++)T(tt[X],P,O,C,w)}function U(D){D.target.removeEventListener("dispose",U);for(const O in f){const C=f[O],w=D.target.uuid;w in C&&(C[w].dispose(),delete C[w])}}}const E3={[ih]:sh,[ah]:lh,[rh]:ch,[mr]:oh,[sh]:ih,[lh]:ah,[ch]:rh,[oh]:mr};function T3(s,t){function e(){let V=!1;const gt=new Ne;let Tt=null;const zt=new Ne(0,0,0,0);return{setMask:function(bt){Tt!==bt&&!V&&(s.colorMask(bt,bt,bt,bt),Tt=bt)},setLocked:function(bt){V=bt},setClear:function(bt,pt,Ft,ee,Te){Te===!0&&(bt*=ee,pt*=ee,Ft*=ee),gt.set(bt,pt,Ft,ee),zt.equals(gt)===!1&&(s.clearColor(bt,pt,Ft,ee),zt.copy(gt))},reset:function(){V=!1,Tt=null,zt.set(-1,0,0,0)}}}function n(){let V=!1,gt=!1,Tt=null,zt=null,bt=null;return{setReversed:function(pt){if(gt!==pt){const Ft=t.get("EXT_clip_control");pt?Ft.clipControlEXT(Ft.LOWER_LEFT_EXT,Ft.ZERO_TO_ONE_EXT):Ft.clipControlEXT(Ft.LOWER_LEFT_EXT,Ft.NEGATIVE_ONE_TO_ONE_EXT),gt=pt;const ee=bt;bt=null,this.setClear(ee)}},getReversed:function(){return gt},setTest:function(pt){pt?Rt(s.DEPTH_TEST):Qt(s.DEPTH_TEST)},setMask:function(pt){Tt!==pt&&!V&&(s.depthMask(pt),Tt=pt)},setFunc:function(pt){if(gt&&(pt=E3[pt]),zt!==pt){switch(pt){case ih:s.depthFunc(s.NEVER);break;case sh:s.depthFunc(s.ALWAYS);break;case ah:s.depthFunc(s.LESS);break;case mr:s.depthFunc(s.LEQUAL);break;case rh:s.depthFunc(s.EQUAL);break;case oh:s.depthFunc(s.GEQUAL);break;case lh:s.depthFunc(s.GREATER);break;case ch:s.depthFunc(s.NOTEQUAL);break;default:s.depthFunc(s.LEQUAL)}zt=pt}},setLocked:function(pt){V=pt},setClear:function(pt){bt!==pt&&(gt&&(pt=1-pt),s.clearDepth(pt),bt=pt)},reset:function(){V=!1,Tt=null,zt=null,bt=null,gt=!1}}}function i(){let V=!1,gt=null,Tt=null,zt=null,bt=null,pt=null,Ft=null,ee=null,Te=null;return{setTest:function(Se){V||(Se?Rt(s.STENCIL_TEST):Qt(s.STENCIL_TEST))},setMask:function(Se){gt!==Se&&!V&&(s.stencilMask(Se),gt=Se)},setFunc:function(Se,_n,yn){(Tt!==Se||zt!==_n||bt!==yn)&&(s.stencilFunc(Se,_n,yn),Tt=Se,zt=_n,bt=yn)},setOp:function(Se,_n,yn){(pt!==Se||Ft!==_n||ee!==yn)&&(s.stencilOp(Se,_n,yn),pt=Se,Ft=_n,ee=yn)},setLocked:function(Se){V=Se},setClear:function(Se){Te!==Se&&(s.clearStencil(Se),Te=Se)},reset:function(){V=!1,gt=null,Tt=null,zt=null,bt=null,pt=null,Ft=null,ee=null,Te=null}}}const o=new e,l=new n,c=new i,h=new WeakMap,f=new WeakMap;let p={},m={},g=new WeakMap,v=[],x=null,b=!1,S=null,_=null,E=null,A=null,T=null,U=null,D=null,P=new kt(0,0,0),O=0,C=!1,w=null,B=null,tt=null,X=null,Z=null;const ot=s.getParameter(s.MAX_COMBINED_TEXTURE_IMAGE_UNITS);let k=!1,et=0;const q=s.getParameter(s.VERSION);q.indexOf("WebGL")!==-1?(et=parseFloat(/^WebGL (\d)/.exec(q)[1]),k=et>=1):q.indexOf("OpenGL ES")!==-1&&(et=parseFloat(/^OpenGL ES (\d)/.exec(q)[1]),k=et>=2);let ct=null,vt={};const xt=s.getParameter(s.SCISSOR_BOX),Ot=s.getParameter(s.VIEWPORT),ne=new Ne().fromArray(xt),jt=new Ne().fromArray(Ot);function at(V,gt,Tt,zt){const bt=new Uint8Array(4),pt=s.createTexture();s.bindTexture(V,pt),s.texParameteri(V,s.TEXTURE_MIN_FILTER,s.NEAREST),s.texParameteri(V,s.TEXTURE_MAG_FILTER,s.NEAREST);for(let Ft=0;Ft<Tt;Ft++)V===s.TEXTURE_3D||V===s.TEXTURE_2D_ARRAY?s.texImage3D(gt,0,s.RGBA,1,1,zt,0,s.RGBA,s.UNSIGNED_BYTE,bt):s.texImage2D(gt+Ft,0,s.RGBA,1,1,0,s.RGBA,s.UNSIGNED_BYTE,bt);return pt}const Lt={};Lt[s.TEXTURE_2D]=at(s.TEXTURE_2D,s.TEXTURE_2D,1),Lt[s.TEXTURE_CUBE_MAP]=at(s.TEXTURE_CUBE_MAP,s.TEXTURE_CUBE_MAP_POSITIVE_X,6),Lt[s.TEXTURE_2D_ARRAY]=at(s.TEXTURE_2D_ARRAY,s.TEXTURE_2D_ARRAY,1,1),Lt[s.TEXTURE_3D]=at(s.TEXTURE_3D,s.TEXTURE_3D,1,1),o.setClear(0,0,0,1),l.setClear(1),c.setClear(0),Rt(s.DEPTH_TEST),l.setFunc(mr),St(!1),ht(im),Rt(s.CULL_FACE),mt(Os);function Rt(V){p[V]!==!0&&(s.enable(V),p[V]=!0)}function Qt(V){p[V]!==!1&&(s.disable(V),p[V]=!1)}function Zt(V,gt){return m[V]!==gt?(s.bindFramebuffer(V,gt),m[V]=gt,V===s.DRAW_FRAMEBUFFER&&(m[s.FRAMEBUFFER]=gt),V===s.FRAMEBUFFER&&(m[s.DRAW_FRAMEBUFFER]=gt),!0):!1}function re(V,gt){let Tt=v,zt=!1;if(V){Tt=g.get(gt),Tt===void 0&&(Tt=[],g.set(gt,Tt));const bt=V.textures;if(Tt.length!==bt.length||Tt[0]!==s.COLOR_ATTACHMENT0){for(let pt=0,Ft=bt.length;pt<Ft;pt++)Tt[pt]=s.COLOR_ATTACHMENT0+pt;Tt.length=bt.length,zt=!0}}else Tt[0]!==s.BACK&&(Tt[0]=s.BACK,zt=!0);zt&&s.drawBuffers(Tt)}function Be(V){return x!==V?(s.useProgram(V),x=V,!0):!1}const le={[fa]:s.FUNC_ADD,[Iy]:s.FUNC_SUBTRACT,[Oy]:s.FUNC_REVERSE_SUBTRACT};le[By]=s.MIN,le[zy]=s.MAX;const H={[Fy]:s.ZERO,[Hy]:s.ONE,[Vy]:s.SRC_COLOR,[eh]:s.SRC_ALPHA,[Yy]:s.SRC_ALPHA_SATURATE,[Xy]:s.DST_COLOR,[ky]:s.DST_ALPHA,[Gy]:s.ONE_MINUS_SRC_COLOR,[nh]:s.ONE_MINUS_SRC_ALPHA,[qy]:s.ONE_MINUS_DST_COLOR,[Wy]:s.ONE_MINUS_DST_ALPHA,[jy]:s.CONSTANT_COLOR,[Zy]:s.ONE_MINUS_CONSTANT_COLOR,[Ky]:s.CONSTANT_ALPHA,[Jy]:s.ONE_MINUS_CONSTANT_ALPHA};function mt(V,gt,Tt,zt,bt,pt,Ft,ee,Te,Se){if(V===Os){b===!0&&(Qt(s.BLEND),b=!1);return}if(b===!1&&(Rt(s.BLEND),b=!0),V!==Py){if(V!==S||Se!==C){if((_!==fa||T!==fa)&&(s.blendEquation(s.FUNC_ADD),_=fa,T=fa),Se)switch(V){case fr:s.blendFuncSeparate(s.ONE,s.ONE_MINUS_SRC_ALPHA,s.ONE,s.ONE_MINUS_SRC_ALPHA);break;case sm:s.blendFunc(s.ONE,s.ONE);break;case am:s.blendFuncSeparate(s.ZERO,s.ONE_MINUS_SRC_COLOR,s.ZERO,s.ONE);break;case rm:s.blendFuncSeparate(s.DST_COLOR,s.ONE_MINUS_SRC_ALPHA,s.ZERO,s.ONE);break;default:console.error("THREE.WebGLState: Invalid blending: ",V);break}else switch(V){case fr:s.blendFuncSeparate(s.SRC_ALPHA,s.ONE_MINUS_SRC_ALPHA,s.ONE,s.ONE_MINUS_SRC_ALPHA);break;case sm:s.blendFuncSeparate(s.SRC_ALPHA,s.ONE,s.ONE,s.ONE);break;case am:console.error("THREE.WebGLState: SubtractiveBlending requires material.premultipliedAlpha = true");break;case rm:console.error("THREE.WebGLState: MultiplyBlending requires material.premultipliedAlpha = true");break;default:console.error("THREE.WebGLState: Invalid blending: ",V);break}E=null,A=null,U=null,D=null,P.set(0,0,0),O=0,S=V,C=Se}return}bt=bt||gt,pt=pt||Tt,Ft=Ft||zt,(gt!==_||bt!==T)&&(s.blendEquationSeparate(le[gt],le[bt]),_=gt,T=bt),(Tt!==E||zt!==A||pt!==U||Ft!==D)&&(s.blendFuncSeparate(H[Tt],H[zt],H[pt],H[Ft]),E=Tt,A=zt,U=pt,D=Ft),(ee.equals(P)===!1||Te!==O)&&(s.blendColor(ee.r,ee.g,ee.b,Te),P.copy(ee),O=Te),S=V,C=!1}function ut(V,gt){V.side===as?Qt(s.CULL_FACE):Rt(s.CULL_FACE);let Tt=V.side===Qn;gt&&(Tt=!Tt),St(Tt),V.blending===fr&&V.transparent===!1?mt(Os):mt(V.blending,V.blendEquation,V.blendSrc,V.blendDst,V.blendEquationAlpha,V.blendSrcAlpha,V.blendDstAlpha,V.blendColor,V.blendAlpha,V.premultipliedAlpha),l.setFunc(V.depthFunc),l.setTest(V.depthTest),l.setMask(V.depthWrite),o.setMask(V.colorWrite);const zt=V.stencilWrite;c.setTest(zt),zt&&(c.setMask(V.stencilWriteMask),c.setFunc(V.stencilFunc,V.stencilRef,V.stencilFuncMask),c.setOp(V.stencilFail,V.stencilZFail,V.stencilZPass)),yt(V.polygonOffset,V.polygonOffsetFactor,V.polygonOffsetUnits),V.alphaToCoverage===!0?Rt(s.SAMPLE_ALPHA_TO_COVERAGE):Qt(s.SAMPLE_ALPHA_TO_COVERAGE)}function St(V){w!==V&&(V?s.frontFace(s.CW):s.frontFace(s.CCW),w=V)}function ht(V){V!==Uy?(Rt(s.CULL_FACE),V!==B&&(V===im?s.cullFace(s.BACK):V===Ny?s.cullFace(s.FRONT):s.cullFace(s.FRONT_AND_BACK))):Qt(s.CULL_FACE),B=V}function Nt(V){V!==tt&&(k&&s.lineWidth(V),tt=V)}function yt(V,gt,Tt){V?(Rt(s.POLYGON_OFFSET_FILL),(X!==gt||Z!==Tt)&&(s.polygonOffset(gt,Tt),X=gt,Z=Tt)):Qt(s.POLYGON_OFFSET_FILL)}function wt(V){V?Rt(s.SCISSOR_TEST):Qt(s.SCISSOR_TEST)}function ce(V){V===void 0&&(V=s.TEXTURE0+ot-1),ct!==V&&(s.activeTexture(V),ct=V)}function he(V,gt,Tt){Tt===void 0&&(ct===null?Tt=s.TEXTURE0+ot-1:Tt=ct);let zt=vt[Tt];zt===void 0&&(zt={type:void 0,texture:void 0},vt[Tt]=zt),(zt.type!==V||zt.texture!==gt)&&(ct!==Tt&&(s.activeTexture(Tt),ct=Tt),s.bindTexture(V,gt||Lt[V]),zt.type=V,zt.texture=gt)}function z(){const V=vt[ct];V!==void 0&&V.type!==void 0&&(s.bindTexture(V.type,null),V.type=void 0,V.texture=void 0)}function R(){try{s.compressedTexImage2D(...arguments)}catch(V){console.error("THREE.WebGLState:",V)}}function J(){try{s.compressedTexImage3D(...arguments)}catch(V){console.error("THREE.WebGLState:",V)}}function rt(){try{s.texSubImage2D(...arguments)}catch(V){console.error("THREE.WebGLState:",V)}}function _t(){try{s.texSubImage3D(...arguments)}catch(V){console.error("THREE.WebGLState:",V)}}function lt(){try{s.compressedTexSubImage2D(...arguments)}catch(V){console.error("THREE.WebGLState:",V)}}function Kt(){try{s.compressedTexSubImage3D(...arguments)}catch(V){console.error("THREE.WebGLState:",V)}}function Dt(){try{s.texStorage2D(...arguments)}catch(V){console.error("THREE.WebGLState:",V)}}function Xt(){try{s.texStorage3D(...arguments)}catch(V){console.error("THREE.WebGLState:",V)}}function qt(){try{s.texImage2D(...arguments)}catch(V){console.error("THREE.WebGLState:",V)}}function Mt(){try{s.texImage3D(...arguments)}catch(V){console.error("THREE.WebGLState:",V)}}function Pt(V){ne.equals(V)===!1&&(s.scissor(V.x,V.y,V.z,V.w),ne.copy(V))}function te(V){jt.equals(V)===!1&&(s.viewport(V.x,V.y,V.z,V.w),jt.copy(V))}function F(V,gt){let Tt=f.get(gt);Tt===void 0&&(Tt=new WeakMap,f.set(gt,Tt));let zt=Tt.get(V);zt===void 0&&(zt=s.getUniformBlockIndex(gt,V.name),Tt.set(V,zt))}function $(V,gt){const zt=f.get(gt).get(V);h.get(gt)!==zt&&(s.uniformBlockBinding(gt,zt,V.__bindingPointIndex),h.set(gt,zt))}function Et(){s.disable(s.BLEND),s.disable(s.CULL_FACE),s.disable(s.DEPTH_TEST),s.disable(s.POLYGON_OFFSET_FILL),s.disable(s.SCISSOR_TEST),s.disable(s.STENCIL_TEST),s.disable(s.SAMPLE_ALPHA_TO_COVERAGE),s.blendEquation(s.FUNC_ADD),s.blendFunc(s.ONE,s.ZERO),s.blendFuncSeparate(s.ONE,s.ZERO,s.ONE,s.ZERO),s.blendColor(0,0,0,0),s.colorMask(!0,!0,!0,!0),s.clearColor(0,0,0,0),s.depthMask(!0),s.depthFunc(s.LESS),l.setReversed(!1),s.clearDepth(1),s.stencilMask(4294967295),s.stencilFunc(s.ALWAYS,0,4294967295),s.stencilOp(s.KEEP,s.KEEP,s.KEEP),s.clearStencil(0),s.cullFace(s.BACK),s.frontFace(s.CCW),s.polygonOffset(0,0),s.activeTexture(s.TEXTURE0),s.bindFramebuffer(s.FRAMEBUFFER,null),s.bindFramebuffer(s.DRAW_FRAMEBUFFER,null),s.bindFramebuffer(s.READ_FRAMEBUFFER,null),s.useProgram(null),s.lineWidth(1),s.scissor(0,0,s.canvas.width,s.canvas.height),s.viewport(0,0,s.canvas.width,s.canvas.height),p={},ct=null,vt={},m={},g=new WeakMap,v=[],x=null,b=!1,S=null,_=null,E=null,A=null,T=null,U=null,D=null,P=new kt(0,0,0),O=0,C=!1,w=null,B=null,tt=null,X=null,Z=null,ne.set(0,0,s.canvas.width,s.canvas.height),jt.set(0,0,s.canvas.width,s.canvas.height),o.reset(),l.reset(),c.reset()}return{buffers:{color:o,depth:l,stencil:c},enable:Rt,disable:Qt,bindFramebuffer:Zt,drawBuffers:re,useProgram:Be,setBlending:mt,setMaterial:ut,setFlipSided:St,setCullFace:ht,setLineWidth:Nt,setPolygonOffset:yt,setScissorTest:wt,activeTexture:ce,bindTexture:he,unbindTexture:z,compressedTexImage2D:R,compressedTexImage3D:J,texImage2D:qt,texImage3D:Mt,updateUBOMapping:F,uniformBlockBinding:$,texStorage2D:Dt,texStorage3D:Xt,texSubImage2D:rt,texSubImage3D:_t,compressedTexSubImage2D:lt,compressedTexSubImage3D:Kt,scissor:Pt,viewport:te,reset:Et}}function A3(s,t,e,n,i,o,l){const c=t.has("WEBGL_multisampled_render_to_texture")?t.get("WEBGL_multisampled_render_to_texture"):null,h=typeof navigator>"u"?!1:/OculusBrowser/g.test(navigator.userAgent),f=new dt,p=new WeakMap;let m;const g=new WeakMap;let v=!1;try{v=typeof OffscreenCanvas<"u"&&new OffscreenCanvas(1,1).getContext("2d")!==null}catch{}function x(z,R){return v?new OffscreenCanvas(z,R):Jl("canvas")}function b(z,R,J){let rt=1;const _t=he(z);if((_t.width>J||_t.height>J)&&(rt=J/Math.max(_t.width,_t.height)),rt<1)if(typeof HTMLImageElement<"u"&&z instanceof HTMLImageElement||typeof HTMLCanvasElement<"u"&&z instanceof HTMLCanvasElement||typeof ImageBitmap<"u"&&z instanceof ImageBitmap||typeof VideoFrame<"u"&&z instanceof VideoFrame){const lt=Math.floor(rt*_t.width),Kt=Math.floor(rt*_t.height);m===void 0&&(m=x(lt,Kt));const Dt=R?x(lt,Kt):m;return Dt.width=lt,Dt.height=Kt,Dt.getContext("2d").drawImage(z,0,0,lt,Kt),console.warn("THREE.WebGLRenderer: Texture has been resized from ("+_t.width+"x"+_t.height+") to ("+lt+"x"+Kt+")."),Dt}else return"data"in z&&console.warn("THREE.WebGLRenderer: Image in DataTexture is too big ("+_t.width+"x"+_t.height+")."),z;return z}function S(z){return z.generateMipmaps}function _(z){s.generateMipmap(z)}function E(z){return z.isWebGLCubeRenderTarget?s.TEXTURE_CUBE_MAP:z.isWebGL3DRenderTarget?s.TEXTURE_3D:z.isWebGLArrayRenderTarget||z.isCompressedArrayTexture?s.TEXTURE_2D_ARRAY:s.TEXTURE_2D}function A(z,R,J,rt,_t=!1){if(z!==null){if(s[z]!==void 0)return s[z];console.warn("THREE.WebGLRenderer: Attempt to use non-existing WebGL internal format '"+z+"'")}let lt=R;if(R===s.RED&&(J===s.FLOAT&&(lt=s.R32F),J===s.HALF_FLOAT&&(lt=s.R16F),J===s.UNSIGNED_BYTE&&(lt=s.R8)),R===s.RED_INTEGER&&(J===s.UNSIGNED_BYTE&&(lt=s.R8UI),J===s.UNSIGNED_SHORT&&(lt=s.R16UI),J===s.UNSIGNED_INT&&(lt=s.R32UI),J===s.BYTE&&(lt=s.R8I),J===s.SHORT&&(lt=s.R16I),J===s.INT&&(lt=s.R32I)),R===s.RG&&(J===s.FLOAT&&(lt=s.RG32F),J===s.HALF_FLOAT&&(lt=s.RG16F),J===s.UNSIGNED_BYTE&&(lt=s.RG8)),R===s.RG_INTEGER&&(J===s.UNSIGNED_BYTE&&(lt=s.RG8UI),J===s.UNSIGNED_SHORT&&(lt=s.RG16UI),J===s.UNSIGNED_INT&&(lt=s.RG32UI),J===s.BYTE&&(lt=s.RG8I),J===s.SHORT&&(lt=s.RG16I),J===s.INT&&(lt=s.RG32I)),R===s.RGB_INTEGER&&(J===s.UNSIGNED_BYTE&&(lt=s.RGB8UI),J===s.UNSIGNED_SHORT&&(lt=s.RGB16UI),J===s.UNSIGNED_INT&&(lt=s.RGB32UI),J===s.BYTE&&(lt=s.RGB8I),J===s.SHORT&&(lt=s.RGB16I),J===s.INT&&(lt=s.RGB32I)),R===s.RGBA_INTEGER&&(J===s.UNSIGNED_BYTE&&(lt=s.RGBA8UI),J===s.UNSIGNED_SHORT&&(lt=s.RGBA16UI),J===s.UNSIGNED_INT&&(lt=s.RGBA32UI),J===s.BYTE&&(lt=s.RGBA8I),J===s.SHORT&&(lt=s.RGBA16I),J===s.INT&&(lt=s.RGBA32I)),R===s.RGB&&J===s.UNSIGNED_INT_5_9_9_9_REV&&(lt=s.RGB9_E5),R===s.RGBA){const Kt=_t?Zl:Re.getTransfer(rt);J===s.FLOAT&&(lt=s.RGBA32F),J===s.HALF_FLOAT&&(lt=s.RGBA16F),J===s.UNSIGNED_BYTE&&(lt=Kt===Ve?s.SRGB8_ALPHA8:s.RGBA8),J===s.UNSIGNED_SHORT_4_4_4_4&&(lt=s.RGBA4),J===s.UNSIGNED_SHORT_5_5_5_1&&(lt=s.RGB5_A1)}return(lt===s.R16F||lt===s.R32F||lt===s.RG16F||lt===s.RG32F||lt===s.RGBA16F||lt===s.RGBA32F)&&t.get("EXT_color_buffer_float"),lt}function T(z,R){let J;return z?R===null||R===Hs||R===wo?J=s.DEPTH24_STENCIL8:R===ri?J=s.DEPTH32F_STENCIL8:R===Ao&&(J=s.DEPTH24_STENCIL8,console.warn("DepthTexture: 16 bit depth attachment is not supported with stencil. Using 24-bit attachment.")):R===null||R===Hs||R===wo?J=s.DEPTH_COMPONENT24:R===ri?J=s.DEPTH_COMPONENT32F:R===Ao&&(J=s.DEPTH_COMPONENT16),J}function U(z,R){return S(z)===!0||z.isFramebufferTexture&&z.minFilter!==Cn&&z.minFilter!==mn?Math.log2(Math.max(R.width,R.height))+1:z.mipmaps!==void 0&&z.mipmaps.length>0?z.mipmaps.length:z.isCompressedTexture&&Array.isArray(z.image)?R.mipmaps.length:1}function D(z){const R=z.target;R.removeEventListener("dispose",D),O(R),R.isVideoTexture&&p.delete(R)}function P(z){const R=z.target;R.removeEventListener("dispose",P),w(R)}function O(z){const R=n.get(z);if(R.__webglInit===void 0)return;const J=z.source,rt=g.get(J);if(rt){const _t=rt[R.__cacheKey];_t.usedTimes--,_t.usedTimes===0&&C(z),Object.keys(rt).length===0&&g.delete(J)}n.remove(z)}function C(z){const R=n.get(z);s.deleteTexture(R.__webglTexture);const J=z.source,rt=g.get(J);delete rt[R.__cacheKey],l.memory.textures--}function w(z){const R=n.get(z);if(z.depthTexture&&(z.depthTexture.dispose(),n.remove(z.depthTexture)),z.isWebGLCubeRenderTarget)for(let rt=0;rt<6;rt++){if(Array.isArray(R.__webglFramebuffer[rt]))for(let _t=0;_t<R.__webglFramebuffer[rt].length;_t++)s.deleteFramebuffer(R.__webglFramebuffer[rt][_t]);else s.deleteFramebuffer(R.__webglFramebuffer[rt]);R.__webglDepthbuffer&&s.deleteRenderbuffer(R.__webglDepthbuffer[rt])}else{if(Array.isArray(R.__webglFramebuffer))for(let rt=0;rt<R.__webglFramebuffer.length;rt++)s.deleteFramebuffer(R.__webglFramebuffer[rt]);else s.deleteFramebuffer(R.__webglFramebuffer);if(R.__webglDepthbuffer&&s.deleteRenderbuffer(R.__webglDepthbuffer),R.__webglMultisampledFramebuffer&&s.deleteFramebuffer(R.__webglMultisampledFramebuffer),R.__webglColorRenderbuffer)for(let rt=0;rt<R.__webglColorRenderbuffer.length;rt++)R.__webglColorRenderbuffer[rt]&&s.deleteRenderbuffer(R.__webglColorRenderbuffer[rt]);R.__webglDepthRenderbuffer&&s.deleteRenderbuffer(R.__webglDepthRenderbuffer)}const J=z.textures;for(let rt=0,_t=J.length;rt<_t;rt++){const lt=n.get(J[rt]);lt.__webglTexture&&(s.deleteTexture(lt.__webglTexture),l.memory.textures--),n.remove(J[rt])}n.remove(z)}let B=0;function tt(){B=0}function X(){const z=B;return z>=i.maxTextures&&console.warn("THREE.WebGLTextures: Trying to use "+z+" texture units while this GPU supports only "+i.maxTextures),B+=1,z}function Z(z){const R=[];return R.push(z.wrapS),R.push(z.wrapT),R.push(z.wrapR||0),R.push(z.magFilter),R.push(z.minFilter),R.push(z.anisotropy),R.push(z.internalFormat),R.push(z.format),R.push(z.type),R.push(z.generateMipmaps),R.push(z.premultiplyAlpha),R.push(z.flipY),R.push(z.unpackAlignment),R.push(z.colorSpace),R.join()}function ot(z,R){const J=n.get(z);if(z.isVideoTexture&&wt(z),z.isRenderTargetTexture===!1&&z.isExternalTexture!==!0&&z.version>0&&J.__version!==z.version){const rt=z.image;if(rt===null)console.warn("THREE.WebGLRenderer: Texture marked for update but no image data found.");else if(rt.complete===!1)console.warn("THREE.WebGLRenderer: Texture marked for update but image is incomplete");else{Lt(J,z,R);return}}else z.isExternalTexture&&(J.__webglTexture=z.sourceTexture?z.sourceTexture:null);e.bindTexture(s.TEXTURE_2D,J.__webglTexture,s.TEXTURE0+R)}function k(z,R){const J=n.get(z);if(z.isRenderTargetTexture===!1&&z.version>0&&J.__version!==z.version){Lt(J,z,R);return}e.bindTexture(s.TEXTURE_2D_ARRAY,J.__webglTexture,s.TEXTURE0+R)}function et(z,R){const J=n.get(z);if(z.isRenderTargetTexture===!1&&z.version>0&&J.__version!==z.version){Lt(J,z,R);return}e.bindTexture(s.TEXTURE_3D,J.__webglTexture,s.TEXTURE0+R)}function q(z,R){const J=n.get(z);if(z.version>0&&J.__version!==z.version){Rt(J,z,R);return}e.bindTexture(s.TEXTURE_CUBE_MAP,J.__webglTexture,s.TEXTURE0+R)}const ct={[Xl]:s.REPEAT,[Pi]:s.CLAMP_TO_EDGE,[ql]:s.MIRRORED_REPEAT},vt={[Cn]:s.NEAREST,[Cm]:s.NEAREST_MIPMAP_NEAREST,[xo]:s.NEAREST_MIPMAP_LINEAR,[mn]:s.LINEAR,[Ll]:s.LINEAR_MIPMAP_NEAREST,[rs]:s.LINEAR_MIPMAP_LINEAR},xt={[dx]:s.NEVER,[yx]:s.ALWAYS,[px]:s.LESS,[Bm]:s.LEQUAL,[mx]:s.EQUAL,[_x]:s.GEQUAL,[gx]:s.GREATER,[vx]:s.NOTEQUAL};function Ot(z,R){if(R.type===ri&&t.has("OES_texture_float_linear")===!1&&(R.magFilter===mn||R.magFilter===Ll||R.magFilter===xo||R.magFilter===rs||R.minFilter===mn||R.minFilter===Ll||R.minFilter===xo||R.minFilter===rs)&&console.warn("THREE.WebGLRenderer: Unable to use linear filtering with floating point textures. OES_texture_float_linear not supported on this device."),s.texParameteri(z,s.TEXTURE_WRAP_S,ct[R.wrapS]),s.texParameteri(z,s.TEXTURE_WRAP_T,ct[R.wrapT]),(z===s.TEXTURE_3D||z===s.TEXTURE_2D_ARRAY)&&s.texParameteri(z,s.TEXTURE_WRAP_R,ct[R.wrapR]),s.texParameteri(z,s.TEXTURE_MAG_FILTER,vt[R.magFilter]),s.texParameteri(z,s.TEXTURE_MIN_FILTER,vt[R.minFilter]),R.compareFunction&&(s.texParameteri(z,s.TEXTURE_COMPARE_MODE,s.COMPARE_REF_TO_TEXTURE),s.texParameteri(z,s.TEXTURE_COMPARE_FUNC,xt[R.compareFunction])),t.has("EXT_texture_filter_anisotropic")===!0){if(R.magFilter===Cn||R.minFilter!==xo&&R.minFilter!==rs||R.type===ri&&t.has("OES_texture_float_linear")===!1)return;if(R.anisotropy>1||n.get(R).__currentAnisotropy){const J=t.get("EXT_texture_filter_anisotropic");s.texParameterf(z,J.TEXTURE_MAX_ANISOTROPY_EXT,Math.min(R.anisotropy,i.getMaxAnisotropy())),n.get(R).__currentAnisotropy=R.anisotropy}}}function ne(z,R){let J=!1;z.__webglInit===void 0&&(z.__webglInit=!0,R.addEventListener("dispose",D));const rt=R.source;let _t=g.get(rt);_t===void 0&&(_t={},g.set(rt,_t));const lt=Z(R);if(lt!==z.__cacheKey){_t[lt]===void 0&&(_t[lt]={texture:s.createTexture(),usedTimes:0},l.memory.textures++,J=!0),_t[lt].usedTimes++;const Kt=_t[z.__cacheKey];Kt!==void 0&&(_t[z.__cacheKey].usedTimes--,Kt.usedTimes===0&&C(R)),z.__cacheKey=lt,z.__webglTexture=_t[lt].texture}return J}function jt(z,R,J){return Math.floor(Math.floor(z/J)/R)}function at(z,R,J,rt){const lt=z.updateRanges;if(lt.length===0)e.texSubImage2D(s.TEXTURE_2D,0,0,0,R.width,R.height,J,rt,R.data);else{lt.sort((Mt,Pt)=>Mt.start-Pt.start);let Kt=0;for(let Mt=1;Mt<lt.length;Mt++){const Pt=lt[Kt],te=lt[Mt],F=Pt.start+Pt.count,$=jt(te.start,R.width,4),Et=jt(Pt.start,R.width,4);te.start<=F+1&&$===Et&&jt(te.start+te.count-1,R.width,4)===$?Pt.count=Math.max(Pt.count,te.start+te.count-Pt.start):(++Kt,lt[Kt]=te)}lt.length=Kt+1;const Dt=s.getParameter(s.UNPACK_ROW_LENGTH),Xt=s.getParameter(s.UNPACK_SKIP_PIXELS),qt=s.getParameter(s.UNPACK_SKIP_ROWS);s.pixelStorei(s.UNPACK_ROW_LENGTH,R.width);for(let Mt=0,Pt=lt.length;Mt<Pt;Mt++){const te=lt[Mt],F=Math.floor(te.start/4),$=Math.ceil(te.count/4),Et=F%R.width,V=Math.floor(F/R.width),gt=$,Tt=1;s.pixelStorei(s.UNPACK_SKIP_PIXELS,Et),s.pixelStorei(s.UNPACK_SKIP_ROWS,V),e.texSubImage2D(s.TEXTURE_2D,0,Et,V,gt,Tt,J,rt,R.data)}z.clearUpdateRanges(),s.pixelStorei(s.UNPACK_ROW_LENGTH,Dt),s.pixelStorei(s.UNPACK_SKIP_PIXELS,Xt),s.pixelStorei(s.UNPACK_SKIP_ROWS,qt)}}function Lt(z,R,J){let rt=s.TEXTURE_2D;(R.isDataArrayTexture||R.isCompressedArrayTexture)&&(rt=s.TEXTURE_2D_ARRAY),R.isData3DTexture&&(rt=s.TEXTURE_3D);const _t=ne(z,R),lt=R.source;e.bindTexture(rt,z.__webglTexture,s.TEXTURE0+J);const Kt=n.get(lt);if(lt.version!==Kt.__version||_t===!0){e.activeTexture(s.TEXTURE0+J);const Dt=Re.getPrimaries(Re.workingColorSpace),Xt=R.colorSpace===Ps?null:Re.getPrimaries(R.colorSpace),qt=R.colorSpace===Ps||Dt===Xt?s.NONE:s.BROWSER_DEFAULT_WEBGL;s.pixelStorei(s.UNPACK_FLIP_Y_WEBGL,R.flipY),s.pixelStorei(s.UNPACK_PREMULTIPLY_ALPHA_WEBGL,R.premultiplyAlpha),s.pixelStorei(s.UNPACK_ALIGNMENT,R.unpackAlignment),s.pixelStorei(s.UNPACK_COLORSPACE_CONVERSION_WEBGL,qt);let Mt=b(R.image,!1,i.maxTextureSize);Mt=ce(R,Mt);const Pt=o.convert(R.format,R.colorSpace),te=o.convert(R.type);let F=A(R.internalFormat,Pt,te,R.colorSpace,R.isVideoTexture);Ot(rt,R);let $;const Et=R.mipmaps,V=R.isVideoTexture!==!0,gt=Kt.__version===void 0||_t===!0,Tt=lt.dataReady,zt=U(R,Mt);if(R.isDepthTexture)F=T(R.format===Ro,R.type),gt&&(V?e.texStorage2D(s.TEXTURE_2D,1,F,Mt.width,Mt.height):e.texImage2D(s.TEXTURE_2D,0,F,Mt.width,Mt.height,0,Pt,te,null));else if(R.isDataTexture)if(Et.length>0){V&&gt&&e.texStorage2D(s.TEXTURE_2D,zt,F,Et[0].width,Et[0].height);for(let bt=0,pt=Et.length;bt<pt;bt++)$=Et[bt],V?Tt&&e.texSubImage2D(s.TEXTURE_2D,bt,0,0,$.width,$.height,Pt,te,$.data):e.texImage2D(s.TEXTURE_2D,bt,F,$.width,$.height,0,Pt,te,$.data);R.generateMipmaps=!1}else V?(gt&&e.texStorage2D(s.TEXTURE_2D,zt,F,Mt.width,Mt.height),Tt&&at(R,Mt,Pt,te)):e.texImage2D(s.TEXTURE_2D,0,F,Mt.width,Mt.height,0,Pt,te,Mt.data);else if(R.isCompressedTexture)if(R.isCompressedArrayTexture){V&&gt&&e.texStorage3D(s.TEXTURE_2D_ARRAY,zt,F,Et[0].width,Et[0].height,Mt.depth);for(let bt=0,pt=Et.length;bt<pt;bt++)if($=Et[bt],R.format!==Hn)if(Pt!==null)if(V){if(Tt)if(R.layerUpdates.size>0){const Ft=vm($.width,$.height,R.format,R.type);for(const ee of R.layerUpdates){const Te=$.data.subarray(ee*Ft/$.data.BYTES_PER_ELEMENT,(ee+1)*Ft/$.data.BYTES_PER_ELEMENT);e.compressedTexSubImage3D(s.TEXTURE_2D_ARRAY,bt,0,0,ee,$.width,$.height,1,Pt,Te)}R.clearLayerUpdates()}else e.compressedTexSubImage3D(s.TEXTURE_2D_ARRAY,bt,0,0,0,$.width,$.height,Mt.depth,Pt,$.data)}else e.compressedTexImage3D(s.TEXTURE_2D_ARRAY,bt,F,$.width,$.height,Mt.depth,0,$.data,0,0);else console.warn("THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .uploadTexture()");else V?Tt&&e.texSubImage3D(s.TEXTURE_2D_ARRAY,bt,0,0,0,$.width,$.height,Mt.depth,Pt,te,$.data):e.texImage3D(s.TEXTURE_2D_ARRAY,bt,F,$.width,$.height,Mt.depth,0,Pt,te,$.data)}else{V&&gt&&e.texStorage2D(s.TEXTURE_2D,zt,F,Et[0].width,Et[0].height);for(let bt=0,pt=Et.length;bt<pt;bt++)$=Et[bt],R.format!==Hn?Pt!==null?V?Tt&&e.compressedTexSubImage2D(s.TEXTURE_2D,bt,0,0,$.width,$.height,Pt,$.data):e.compressedTexImage2D(s.TEXTURE_2D,bt,F,$.width,$.height,0,$.data):console.warn("THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .uploadTexture()"):V?Tt&&e.texSubImage2D(s.TEXTURE_2D,bt,0,0,$.width,$.height,Pt,te,$.data):e.texImage2D(s.TEXTURE_2D,bt,F,$.width,$.height,0,Pt,te,$.data)}else if(R.isDataArrayTexture)if(V){if(gt&&e.texStorage3D(s.TEXTURE_2D_ARRAY,zt,F,Mt.width,Mt.height,Mt.depth),Tt)if(R.layerUpdates.size>0){const bt=vm(Mt.width,Mt.height,R.format,R.type);for(const pt of R.layerUpdates){const Ft=Mt.data.subarray(pt*bt/Mt.data.BYTES_PER_ELEMENT,(pt+1)*bt/Mt.data.BYTES_PER_ELEMENT);e.texSubImage3D(s.TEXTURE_2D_ARRAY,0,0,0,pt,Mt.width,Mt.height,1,Pt,te,Ft)}R.clearLayerUpdates()}else e.texSubImage3D(s.TEXTURE_2D_ARRAY,0,0,0,0,Mt.width,Mt.height,Mt.depth,Pt,te,Mt.data)}else e.texImage3D(s.TEXTURE_2D_ARRAY,0,F,Mt.width,Mt.height,Mt.depth,0,Pt,te,Mt.data);else if(R.isData3DTexture)V?(gt&&e.texStorage3D(s.TEXTURE_3D,zt,F,Mt.width,Mt.height,Mt.depth),Tt&&e.texSubImage3D(s.TEXTURE_3D,0,0,0,0,Mt.width,Mt.height,Mt.depth,Pt,te,Mt.data)):e.texImage3D(s.TEXTURE_3D,0,F,Mt.width,Mt.height,Mt.depth,0,Pt,te,Mt.data);else if(R.isFramebufferTexture){if(gt)if(V)e.texStorage2D(s.TEXTURE_2D,zt,F,Mt.width,Mt.height);else{let bt=Mt.width,pt=Mt.height;for(let Ft=0;Ft<zt;Ft++)e.texImage2D(s.TEXTURE_2D,Ft,F,bt,pt,0,Pt,te,null),bt>>=1,pt>>=1}}else if(Et.length>0){if(V&&gt){const bt=he(Et[0]);e.texStorage2D(s.TEXTURE_2D,zt,F,bt.width,bt.height)}for(let bt=0,pt=Et.length;bt<pt;bt++)$=Et[bt],V?Tt&&e.texSubImage2D(s.TEXTURE_2D,bt,0,0,Pt,te,$):e.texImage2D(s.TEXTURE_2D,bt,F,Pt,te,$);R.generateMipmaps=!1}else if(V){if(gt){const bt=he(Mt);e.texStorage2D(s.TEXTURE_2D,zt,F,bt.width,bt.height)}Tt&&e.texSubImage2D(s.TEXTURE_2D,0,0,0,Pt,te,Mt)}else e.texImage2D(s.TEXTURE_2D,0,F,Pt,te,Mt);S(R)&&_(rt),Kt.__version=lt.version,R.onUpdate&&R.onUpdate(R)}z.__version=R.version}function Rt(z,R,J){if(R.image.length!==6)return;const rt=ne(z,R),_t=R.source;e.bindTexture(s.TEXTURE_CUBE_MAP,z.__webglTexture,s.TEXTURE0+J);const lt=n.get(_t);if(_t.version!==lt.__version||rt===!0){e.activeTexture(s.TEXTURE0+J);const Kt=Re.getPrimaries(Re.workingColorSpace),Dt=R.colorSpace===Ps?null:Re.getPrimaries(R.colorSpace),Xt=R.colorSpace===Ps||Kt===Dt?s.NONE:s.BROWSER_DEFAULT_WEBGL;s.pixelStorei(s.UNPACK_FLIP_Y_WEBGL,R.flipY),s.pixelStorei(s.UNPACK_PREMULTIPLY_ALPHA_WEBGL,R.premultiplyAlpha),s.pixelStorei(s.UNPACK_ALIGNMENT,R.unpackAlignment),s.pixelStorei(s.UNPACK_COLORSPACE_CONVERSION_WEBGL,Xt);const qt=R.isCompressedTexture||R.image[0].isCompressedTexture,Mt=R.image[0]&&R.image[0].isDataTexture,Pt=[];for(let pt=0;pt<6;pt++)!qt&&!Mt?Pt[pt]=b(R.image[pt],!0,i.maxCubemapSize):Pt[pt]=Mt?R.image[pt].image:R.image[pt],Pt[pt]=ce(R,Pt[pt]);const te=Pt[0],F=o.convert(R.format,R.colorSpace),$=o.convert(R.type),Et=A(R.internalFormat,F,$,R.colorSpace),V=R.isVideoTexture!==!0,gt=lt.__version===void 0||rt===!0,Tt=_t.dataReady;let zt=U(R,te);Ot(s.TEXTURE_CUBE_MAP,R);let bt;if(qt){V&&gt&&e.texStorage2D(s.TEXTURE_CUBE_MAP,zt,Et,te.width,te.height);for(let pt=0;pt<6;pt++){bt=Pt[pt].mipmaps;for(let Ft=0;Ft<bt.length;Ft++){const ee=bt[Ft];R.format!==Hn?F!==null?V?Tt&&e.compressedTexSubImage2D(s.TEXTURE_CUBE_MAP_POSITIVE_X+pt,Ft,0,0,ee.width,ee.height,F,ee.data):e.compressedTexImage2D(s.TEXTURE_CUBE_MAP_POSITIVE_X+pt,Ft,Et,ee.width,ee.height,0,ee.data):console.warn("THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .setTextureCube()"):V?Tt&&e.texSubImage2D(s.TEXTURE_CUBE_MAP_POSITIVE_X+pt,Ft,0,0,ee.width,ee.height,F,$,ee.data):e.texImage2D(s.TEXTURE_CUBE_MAP_POSITIVE_X+pt,Ft,Et,ee.width,ee.height,0,F,$,ee.data)}}}else{if(bt=R.mipmaps,V&&gt){bt.length>0&&zt++;const pt=he(Pt[0]);e.texStorage2D(s.TEXTURE_CUBE_MAP,zt,Et,pt.width,pt.height)}for(let pt=0;pt<6;pt++)if(Mt){V?Tt&&e.texSubImage2D(s.TEXTURE_CUBE_MAP_POSITIVE_X+pt,0,0,0,Pt[pt].width,Pt[pt].height,F,$,Pt[pt].data):e.texImage2D(s.TEXTURE_CUBE_MAP_POSITIVE_X+pt,0,Et,Pt[pt].width,Pt[pt].height,0,F,$,Pt[pt].data);for(let Ft=0;Ft<bt.length;Ft++){const Te=bt[Ft].image[pt].image;V?Tt&&e.texSubImage2D(s.TEXTURE_CUBE_MAP_POSITIVE_X+pt,Ft+1,0,0,Te.width,Te.height,F,$,Te.data):e.texImage2D(s.TEXTURE_CUBE_MAP_POSITIVE_X+pt,Ft+1,Et,Te.width,Te.height,0,F,$,Te.data)}}else{V?Tt&&e.texSubImage2D(s.TEXTURE_CUBE_MAP_POSITIVE_X+pt,0,0,0,F,$,Pt[pt]):e.texImage2D(s.TEXTURE_CUBE_MAP_POSITIVE_X+pt,0,Et,F,$,Pt[pt]);for(let Ft=0;Ft<bt.length;Ft++){const ee=bt[Ft];V?Tt&&e.texSubImage2D(s.TEXTURE_CUBE_MAP_POSITIVE_X+pt,Ft+1,0,0,F,$,ee.image[pt]):e.texImage2D(s.TEXTURE_CUBE_MAP_POSITIVE_X+pt,Ft+1,Et,F,$,ee.image[pt])}}}S(R)&&_(s.TEXTURE_CUBE_MAP),lt.__version=_t.version,R.onUpdate&&R.onUpdate(R)}z.__version=R.version}function Qt(z,R,J,rt,_t,lt){const Kt=o.convert(J.format,J.colorSpace),Dt=o.convert(J.type),Xt=A(J.internalFormat,Kt,Dt,J.colorSpace),qt=n.get(R),Mt=n.get(J);if(Mt.__renderTarget=R,!qt.__hasExternalTextures){const Pt=Math.max(1,R.width>>lt),te=Math.max(1,R.height>>lt);_t===s.TEXTURE_3D||_t===s.TEXTURE_2D_ARRAY?e.texImage3D(_t,lt,Xt,Pt,te,R.depth,0,Kt,Dt,null):e.texImage2D(_t,lt,Xt,Pt,te,0,Kt,Dt,null)}e.bindFramebuffer(s.FRAMEBUFFER,z),yt(R)?c.framebufferTexture2DMultisampleEXT(s.FRAMEBUFFER,rt,_t,Mt.__webglTexture,0,Nt(R)):(_t===s.TEXTURE_2D||_t>=s.TEXTURE_CUBE_MAP_POSITIVE_X&&_t<=s.TEXTURE_CUBE_MAP_NEGATIVE_Z)&&s.framebufferTexture2D(s.FRAMEBUFFER,rt,_t,Mt.__webglTexture,lt),e.bindFramebuffer(s.FRAMEBUFFER,null)}function Zt(z,R,J){if(s.bindRenderbuffer(s.RENDERBUFFER,z),R.depthBuffer){const rt=R.depthTexture,_t=rt&&rt.isDepthTexture?rt.type:null,lt=T(R.stencilBuffer,_t),Kt=R.stencilBuffer?s.DEPTH_STENCIL_ATTACHMENT:s.DEPTH_ATTACHMENT,Dt=Nt(R);yt(R)?c.renderbufferStorageMultisampleEXT(s.RENDERBUFFER,Dt,lt,R.width,R.height):J?s.renderbufferStorageMultisample(s.RENDERBUFFER,Dt,lt,R.width,R.height):s.renderbufferStorage(s.RENDERBUFFER,lt,R.width,R.height),s.framebufferRenderbuffer(s.FRAMEBUFFER,Kt,s.RENDERBUFFER,z)}else{const rt=R.textures;for(let _t=0;_t<rt.length;_t++){const lt=rt[_t],Kt=o.convert(lt.format,lt.colorSpace),Dt=o.convert(lt.type),Xt=A(lt.internalFormat,Kt,Dt,lt.colorSpace),qt=Nt(R);J&&yt(R)===!1?s.renderbufferStorageMultisample(s.RENDERBUFFER,qt,Xt,R.width,R.height):yt(R)?c.renderbufferStorageMultisampleEXT(s.RENDERBUFFER,qt,Xt,R.width,R.height):s.renderbufferStorage(s.RENDERBUFFER,Xt,R.width,R.height)}}s.bindRenderbuffer(s.RENDERBUFFER,null)}function re(z,R){if(R&&R.isWebGLCubeRenderTarget)throw new Error("Depth Texture with cube render targets is not supported");if(e.bindFramebuffer(s.FRAMEBUFFER,z),!(R.depthTexture&&R.depthTexture.isDepthTexture))throw new Error("renderTarget.depthTexture must be an instance of THREE.DepthTexture");const rt=n.get(R.depthTexture);rt.__renderTarget=R,(!rt.__webglTexture||R.depthTexture.image.width!==R.width||R.depthTexture.image.height!==R.height)&&(R.depthTexture.image.width=R.width,R.depthTexture.image.height=R.height,R.depthTexture.needsUpdate=!0),ot(R.depthTexture,0);const _t=rt.__webglTexture,lt=Nt(R);if(R.depthTexture.format===Co)yt(R)?c.framebufferTexture2DMultisampleEXT(s.FRAMEBUFFER,s.DEPTH_ATTACHMENT,s.TEXTURE_2D,_t,0,lt):s.framebufferTexture2D(s.FRAMEBUFFER,s.DEPTH_ATTACHMENT,s.TEXTURE_2D,_t,0);else if(R.depthTexture.format===Ro)yt(R)?c.framebufferTexture2DMultisampleEXT(s.FRAMEBUFFER,s.DEPTH_STENCIL_ATTACHMENT,s.TEXTURE_2D,_t,0,lt):s.framebufferTexture2D(s.FRAMEBUFFER,s.DEPTH_STENCIL_ATTACHMENT,s.TEXTURE_2D,_t,0);else throw new Error("Unknown depthTexture format")}function Be(z){const R=n.get(z),J=z.isWebGLCubeRenderTarget===!0;if(R.__boundDepthTexture!==z.depthTexture){const rt=z.depthTexture;if(R.__depthDisposeCallback&&R.__depthDisposeCallback(),rt){const _t=()=>{delete R.__boundDepthTexture,delete R.__depthDisposeCallback,rt.removeEventListener("dispose",_t)};rt.addEventListener("dispose",_t),R.__depthDisposeCallback=_t}R.__boundDepthTexture=rt}if(z.depthTexture&&!R.__autoAllocateDepthBuffer){if(J)throw new Error("target.depthTexture not supported in Cube render targets");const rt=z.texture.mipmaps;rt&&rt.length>0?re(R.__webglFramebuffer[0],z):re(R.__webglFramebuffer,z)}else if(J){R.__webglDepthbuffer=[];for(let rt=0;rt<6;rt++)if(e.bindFramebuffer(s.FRAMEBUFFER,R.__webglFramebuffer[rt]),R.__webglDepthbuffer[rt]===void 0)R.__webglDepthbuffer[rt]=s.createRenderbuffer(),Zt(R.__webglDepthbuffer[rt],z,!1);else{const _t=z.stencilBuffer?s.DEPTH_STENCIL_ATTACHMENT:s.DEPTH_ATTACHMENT,lt=R.__webglDepthbuffer[rt];s.bindRenderbuffer(s.RENDERBUFFER,lt),s.framebufferRenderbuffer(s.FRAMEBUFFER,_t,s.RENDERBUFFER,lt)}}else{const rt=z.texture.mipmaps;if(rt&&rt.length>0?e.bindFramebuffer(s.FRAMEBUFFER,R.__webglFramebuffer[0]):e.bindFramebuffer(s.FRAMEBUFFER,R.__webglFramebuffer),R.__webglDepthbuffer===void 0)R.__webglDepthbuffer=s.createRenderbuffer(),Zt(R.__webglDepthbuffer,z,!1);else{const _t=z.stencilBuffer?s.DEPTH_STENCIL_ATTACHMENT:s.DEPTH_ATTACHMENT,lt=R.__webglDepthbuffer;s.bindRenderbuffer(s.RENDERBUFFER,lt),s.framebufferRenderbuffer(s.FRAMEBUFFER,_t,s.RENDERBUFFER,lt)}}e.bindFramebuffer(s.FRAMEBUFFER,null)}function le(z,R,J){const rt=n.get(z);R!==void 0&&Qt(rt.__webglFramebuffer,z,z.texture,s.COLOR_ATTACHMENT0,s.TEXTURE_2D,0),J!==void 0&&Be(z)}function H(z){const R=z.texture,J=n.get(z),rt=n.get(R);z.addEventListener("dispose",P);const _t=z.textures,lt=z.isWebGLCubeRenderTarget===!0,Kt=_t.length>1;if(Kt||(rt.__webglTexture===void 0&&(rt.__webglTexture=s.createTexture()),rt.__version=R.version,l.memory.textures++),lt){J.__webglFramebuffer=[];for(let Dt=0;Dt<6;Dt++)if(R.mipmaps&&R.mipmaps.length>0){J.__webglFramebuffer[Dt]=[];for(let Xt=0;Xt<R.mipmaps.length;Xt++)J.__webglFramebuffer[Dt][Xt]=s.createFramebuffer()}else J.__webglFramebuffer[Dt]=s.createFramebuffer()}else{if(R.mipmaps&&R.mipmaps.length>0){J.__webglFramebuffer=[];for(let Dt=0;Dt<R.mipmaps.length;Dt++)J.__webglFramebuffer[Dt]=s.createFramebuffer()}else J.__webglFramebuffer=s.createFramebuffer();if(Kt)for(let Dt=0,Xt=_t.length;Dt<Xt;Dt++){const qt=n.get(_t[Dt]);qt.__webglTexture===void 0&&(qt.__webglTexture=s.createTexture(),l.memory.textures++)}if(z.samples>0&&yt(z)===!1){J.__webglMultisampledFramebuffer=s.createFramebuffer(),J.__webglColorRenderbuffer=[],e.bindFramebuffer(s.FRAMEBUFFER,J.__webglMultisampledFramebuffer);for(let Dt=0;Dt<_t.length;Dt++){const Xt=_t[Dt];J.__webglColorRenderbuffer[Dt]=s.createRenderbuffer(),s.bindRenderbuffer(s.RENDERBUFFER,J.__webglColorRenderbuffer[Dt]);const qt=o.convert(Xt.format,Xt.colorSpace),Mt=o.convert(Xt.type),Pt=A(Xt.internalFormat,qt,Mt,Xt.colorSpace,z.isXRRenderTarget===!0),te=Nt(z);s.renderbufferStorageMultisample(s.RENDERBUFFER,te,Pt,z.width,z.height),s.framebufferRenderbuffer(s.FRAMEBUFFER,s.COLOR_ATTACHMENT0+Dt,s.RENDERBUFFER,J.__webglColorRenderbuffer[Dt])}s.bindRenderbuffer(s.RENDERBUFFER,null),z.depthBuffer&&(J.__webglDepthRenderbuffer=s.createRenderbuffer(),Zt(J.__webglDepthRenderbuffer,z,!0)),e.bindFramebuffer(s.FRAMEBUFFER,null)}}if(lt){e.bindTexture(s.TEXTURE_CUBE_MAP,rt.__webglTexture),Ot(s.TEXTURE_CUBE_MAP,R);for(let Dt=0;Dt<6;Dt++)if(R.mipmaps&&R.mipmaps.length>0)for(let Xt=0;Xt<R.mipmaps.length;Xt++)Qt(J.__webglFramebuffer[Dt][Xt],z,R,s.COLOR_ATTACHMENT0,s.TEXTURE_CUBE_MAP_POSITIVE_X+Dt,Xt);else Qt(J.__webglFramebuffer[Dt],z,R,s.COLOR_ATTACHMENT0,s.TEXTURE_CUBE_MAP_POSITIVE_X+Dt,0);S(R)&&_(s.TEXTURE_CUBE_MAP),e.unbindTexture()}else if(Kt){for(let Dt=0,Xt=_t.length;Dt<Xt;Dt++){const qt=_t[Dt],Mt=n.get(qt);let Pt=s.TEXTURE_2D;(z.isWebGL3DRenderTarget||z.isWebGLArrayRenderTarget)&&(Pt=z.isWebGL3DRenderTarget?s.TEXTURE_3D:s.TEXTURE_2D_ARRAY),e.bindTexture(Pt,Mt.__webglTexture),Ot(Pt,qt),Qt(J.__webglFramebuffer,z,qt,s.COLOR_ATTACHMENT0+Dt,Pt,0),S(qt)&&_(Pt)}e.unbindTexture()}else{let Dt=s.TEXTURE_2D;if((z.isWebGL3DRenderTarget||z.isWebGLArrayRenderTarget)&&(Dt=z.isWebGL3DRenderTarget?s.TEXTURE_3D:s.TEXTURE_2D_ARRAY),e.bindTexture(Dt,rt.__webglTexture),Ot(Dt,R),R.mipmaps&&R.mipmaps.length>0)for(let Xt=0;Xt<R.mipmaps.length;Xt++)Qt(J.__webglFramebuffer[Xt],z,R,s.COLOR_ATTACHMENT0,Dt,Xt);else Qt(J.__webglFramebuffer,z,R,s.COLOR_ATTACHMENT0,Dt,0);S(R)&&_(Dt),e.unbindTexture()}z.depthBuffer&&Be(z)}function mt(z){const R=z.textures;for(let J=0,rt=R.length;J<rt;J++){const _t=R[J];if(S(_t)){const lt=E(z),Kt=n.get(_t).__webglTexture;e.bindTexture(lt,Kt),_(lt),e.unbindTexture()}}}const ut=[],St=[];function ht(z){if(z.samples>0){if(yt(z)===!1){const R=z.textures,J=z.width,rt=z.height;let _t=s.COLOR_BUFFER_BIT;const lt=z.stencilBuffer?s.DEPTH_STENCIL_ATTACHMENT:s.DEPTH_ATTACHMENT,Kt=n.get(z),Dt=R.length>1;if(Dt)for(let qt=0;qt<R.length;qt++)e.bindFramebuffer(s.FRAMEBUFFER,Kt.__webglMultisampledFramebuffer),s.framebufferRenderbuffer(s.FRAMEBUFFER,s.COLOR_ATTACHMENT0+qt,s.RENDERBUFFER,null),e.bindFramebuffer(s.FRAMEBUFFER,Kt.__webglFramebuffer),s.framebufferTexture2D(s.DRAW_FRAMEBUFFER,s.COLOR_ATTACHMENT0+qt,s.TEXTURE_2D,null,0);e.bindFramebuffer(s.READ_FRAMEBUFFER,Kt.__webglMultisampledFramebuffer);const Xt=z.texture.mipmaps;Xt&&Xt.length>0?e.bindFramebuffer(s.DRAW_FRAMEBUFFER,Kt.__webglFramebuffer[0]):e.bindFramebuffer(s.DRAW_FRAMEBUFFER,Kt.__webglFramebuffer);for(let qt=0;qt<R.length;qt++){if(z.resolveDepthBuffer&&(z.depthBuffer&&(_t|=s.DEPTH_BUFFER_BIT),z.stencilBuffer&&z.resolveStencilBuffer&&(_t|=s.STENCIL_BUFFER_BIT)),Dt){s.framebufferRenderbuffer(s.READ_FRAMEBUFFER,s.COLOR_ATTACHMENT0,s.RENDERBUFFER,Kt.__webglColorRenderbuffer[qt]);const Mt=n.get(R[qt]).__webglTexture;s.framebufferTexture2D(s.DRAW_FRAMEBUFFER,s.COLOR_ATTACHMENT0,s.TEXTURE_2D,Mt,0)}s.blitFramebuffer(0,0,J,rt,0,0,J,rt,_t,s.NEAREST),h===!0&&(ut.length=0,St.length=0,ut.push(s.COLOR_ATTACHMENT0+qt),z.depthBuffer&&z.resolveDepthBuffer===!1&&(ut.push(lt),St.push(lt),s.invalidateFramebuffer(s.DRAW_FRAMEBUFFER,St)),s.invalidateFramebuffer(s.READ_FRAMEBUFFER,ut))}if(e.bindFramebuffer(s.READ_FRAMEBUFFER,null),e.bindFramebuffer(s.DRAW_FRAMEBUFFER,null),Dt)for(let qt=0;qt<R.length;qt++){e.bindFramebuffer(s.FRAMEBUFFER,Kt.__webglMultisampledFramebuffer),s.framebufferRenderbuffer(s.FRAMEBUFFER,s.COLOR_ATTACHMENT0+qt,s.RENDERBUFFER,Kt.__webglColorRenderbuffer[qt]);const Mt=n.get(R[qt]).__webglTexture;e.bindFramebuffer(s.FRAMEBUFFER,Kt.__webglFramebuffer),s.framebufferTexture2D(s.DRAW_FRAMEBUFFER,s.COLOR_ATTACHMENT0+qt,s.TEXTURE_2D,Mt,0)}e.bindFramebuffer(s.DRAW_FRAMEBUFFER,Kt.__webglMultisampledFramebuffer)}else if(z.depthBuffer&&z.resolveDepthBuffer===!1&&h){const R=z.stencilBuffer?s.DEPTH_STENCIL_ATTACHMENT:s.DEPTH_ATTACHMENT;s.invalidateFramebuffer(s.DRAW_FRAMEBUFFER,[R])}}}function Nt(z){return Math.min(i.maxSamples,z.samples)}function yt(z){const R=n.get(z);return z.samples>0&&t.has("WEBGL_multisampled_render_to_texture")===!0&&R.__useRenderToTexture!==!1}function wt(z){const R=l.render.frame;p.get(z)!==R&&(p.set(z,R),z.update())}function ce(z,R){const J=z.colorSpace,rt=z.format,_t=z.type;return z.isCompressedTexture===!0||z.isVideoTexture===!0||J!==va&&J!==Ps&&(Re.getTransfer(J)===Ve?(rt!==Hn||_t!==Ii)&&console.warn("THREE.WebGLTextures: sRGB encoded textures have to use RGBAFormat and UnsignedByteType."):console.error("THREE.WebGLTextures: Unsupported texture color space:",J)),R}function he(z){return typeof HTMLImageElement<"u"&&z instanceof HTMLImageElement?(f.width=z.naturalWidth||z.width,f.height=z.naturalHeight||z.height):typeof VideoFrame<"u"&&z instanceof VideoFrame?(f.width=z.displayWidth,f.height=z.displayHeight):(f.width=z.width,f.height=z.height),f}this.allocateTextureUnit=X,this.resetTextureUnits=tt,this.setTexture2D=ot,this.setTexture2DArray=k,this.setTexture3D=et,this.setTextureCube=q,this.rebindTextures=le,this.setupRenderTarget=H,this.updateRenderTargetMipmap=mt,this.updateMultisampleRenderTarget=ht,this.setupDepthRenderbuffer=Be,this.setupFrameBufferTexture=Qt,this.useMultisampledRTT=yt}function US(s,t){function e(n,i=Ps){let o;const l=Re.getTransfer(i);if(n===Ii)return s.UNSIGNED_BYTE;if(n===Zh)return s.UNSIGNED_SHORT_4_4_4_4;if(n===Kh)return s.UNSIGNED_SHORT_5_5_5_1;if(n===Um)return s.UNSIGNED_INT_5_9_9_9_REV;if(n===Rm)return s.BYTE;if(n===Dm)return s.SHORT;if(n===Ao)return s.UNSIGNED_SHORT;if(n===jh)return s.INT;if(n===Hs)return s.UNSIGNED_INT;if(n===ri)return s.FLOAT;if(n===zo)return s.HALF_FLOAT;if(n===Nm)return s.ALPHA;if(n===Lm)return s.RGB;if(n===Hn)return s.RGBA;if(n===Co)return s.DEPTH_COMPONENT;if(n===Ro)return s.DEPTH_STENCIL;if(n===Jh)return s.RED;if(n===lc)return s.RED_INTEGER;if(n===Pm)return s.RG;if(n===Qh)return s.RG_INTEGER;if(n===$h)return s.RGBA_INTEGER;if(n===Pl||n===Il||n===Ol||n===Bl)if(l===Ve)if(o=t.get("WEBGL_compressed_texture_s3tc_srgb"),o!==null){if(n===Pl)return o.COMPRESSED_SRGB_S3TC_DXT1_EXT;if(n===Il)return o.COMPRESSED_SRGB_ALPHA_S3TC_DXT1_EXT;if(n===Ol)return o.COMPRESSED_SRGB_ALPHA_S3TC_DXT3_EXT;if(n===Bl)return o.COMPRESSED_SRGB_ALPHA_S3TC_DXT5_EXT}else return null;else if(o=t.get("WEBGL_compressed_texture_s3tc"),o!==null){if(n===Pl)return o.COMPRESSED_RGB_S3TC_DXT1_EXT;if(n===Il)return o.COMPRESSED_RGBA_S3TC_DXT1_EXT;if(n===Ol)return o.COMPRESSED_RGBA_S3TC_DXT3_EXT;if(n===Bl)return o.COMPRESSED_RGBA_S3TC_DXT5_EXT}else return null;if(n===uh||n===hh||n===fh||n===dh)if(o=t.get("WEBGL_compressed_texture_pvrtc"),o!==null){if(n===uh)return o.COMPRESSED_RGB_PVRTC_4BPPV1_IMG;if(n===hh)return o.COMPRESSED_RGB_PVRTC_2BPPV1_IMG;if(n===fh)return o.COMPRESSED_RGBA_PVRTC_4BPPV1_IMG;if(n===dh)return o.COMPRESSED_RGBA_PVRTC_2BPPV1_IMG}else return null;if(n===ph||n===mh||n===gh)if(o=t.get("WEBGL_compressed_texture_etc"),o!==null){if(n===ph||n===mh)return l===Ve?o.COMPRESSED_SRGB8_ETC2:o.COMPRESSED_RGB8_ETC2;if(n===gh)return l===Ve?o.COMPRESSED_SRGB8_ALPHA8_ETC2_EAC:o.COMPRESSED_RGBA8_ETC2_EAC}else return null;if(n===vh||n===_h||n===yh||n===xh||n===Sh||n===Mh||n===bh||n===Eh||n===Th||n===Ah||n===wh||n===Ch||n===Rh||n===Dh)if(o=t.get("WEBGL_compressed_texture_astc"),o!==null){if(n===vh)return l===Ve?o.COMPRESSED_SRGB8_ALPHA8_ASTC_4x4_KHR:o.COMPRESSED_RGBA_ASTC_4x4_KHR;if(n===_h)return l===Ve?o.COMPRESSED_SRGB8_ALPHA8_ASTC_5x4_KHR:o.COMPRESSED_RGBA_ASTC_5x4_KHR;if(n===yh)return l===Ve?o.COMPRESSED_SRGB8_ALPHA8_ASTC_5x5_KHR:o.COMPRESSED_RGBA_ASTC_5x5_KHR;if(n===xh)return l===Ve?o.COMPRESSED_SRGB8_ALPHA8_ASTC_6x5_KHR:o.COMPRESSED_RGBA_ASTC_6x5_KHR;if(n===Sh)return l===Ve?o.COMPRESSED_SRGB8_ALPHA8_ASTC_6x6_KHR:o.COMPRESSED_RGBA_ASTC_6x6_KHR;if(n===Mh)return l===Ve?o.COMPRESSED_SRGB8_ALPHA8_ASTC_8x5_KHR:o.COMPRESSED_RGBA_ASTC_8x5_KHR;if(n===bh)return l===Ve?o.COMPRESSED_SRGB8_ALPHA8_ASTC_8x6_KHR:o.COMPRESSED_RGBA_ASTC_8x6_KHR;if(n===Eh)return l===Ve?o.COMPRESSED_SRGB8_ALPHA8_ASTC_8x8_KHR:o.COMPRESSED_RGBA_ASTC_8x8_KHR;if(n===Th)return l===Ve?o.COMPRESSED_SRGB8_ALPHA8_ASTC_10x5_KHR:o.COMPRESSED_RGBA_ASTC_10x5_KHR;if(n===Ah)return l===Ve?o.COMPRESSED_SRGB8_ALPHA8_ASTC_10x6_KHR:o.COMPRESSED_RGBA_ASTC_10x6_KHR;if(n===wh)return l===Ve?o.COMPRESSED_SRGB8_ALPHA8_ASTC_10x8_KHR:o.COMPRESSED_RGBA_ASTC_10x8_KHR;if(n===Ch)return l===Ve?o.COMPRESSED_SRGB8_ALPHA8_ASTC_10x10_KHR:o.COMPRESSED_RGBA_ASTC_10x10_KHR;if(n===Rh)return l===Ve?o.COMPRESSED_SRGB8_ALPHA8_ASTC_12x10_KHR:o.COMPRESSED_RGBA_ASTC_12x10_KHR;if(n===Dh)return l===Ve?o.COMPRESSED_SRGB8_ALPHA8_ASTC_12x12_KHR:o.COMPRESSED_RGBA_ASTC_12x12_KHR}else return null;if(n===zl||n===Uh||n===Nh)if(o=t.get("EXT_texture_compression_bptc"),o!==null){if(n===zl)return l===Ve?o.COMPRESSED_SRGB_ALPHA_BPTC_UNORM_EXT:o.COMPRESSED_RGBA_BPTC_UNORM_EXT;if(n===Uh)return o.COMPRESSED_RGB_BPTC_SIGNED_FLOAT_EXT;if(n===Nh)return o.COMPRESSED_RGB_BPTC_UNSIGNED_FLOAT_EXT}else return null;if(n===Im||n===Lh||n===Ph||n===Ih)if(o=t.get("EXT_texture_compression_rgtc"),o!==null){if(n===zl)return o.COMPRESSED_RED_RGTC1_EXT;if(n===Lh)return o.COMPRESSED_SIGNED_RED_RGTC1_EXT;if(n===Ph)return o.COMPRESSED_RED_GREEN_RGTC2_EXT;if(n===Ih)return o.COMPRESSED_SIGNED_RED_GREEN_RGTC2_EXT}else return null;return n===wo?s.UNSIGNED_INT_24_8:s[n]!==void 0?s[n]:null}return{convert:e}}class NS extends on{constructor(t=null){super(),this.sourceTexture=t,this.isExternalTexture=!0}}const w3=`
void main() {

	gl_Position = vec4( position, 1.0 );

}`,C3=`
uniform sampler2DArray depthColor;
uniform float depthWidth;
uniform float depthHeight;

void main() {

	vec2 coord = vec2( gl_FragCoord.x / depthWidth, gl_FragCoord.y / depthHeight );

	if ( coord.x >= 1.0 ) {

		gl_FragDepth = texture( depthColor, vec3( coord.x - 1.0, coord.y, 1 ) ).r;

	} else {

		gl_FragDepth = texture( depthColor, vec3( coord.x, coord.y, 0 ) ).r;

	}

}`;class R3{constructor(){this.texture=null,this.mesh=null,this.depthNear=0,this.depthFar=0}init(t,e){if(this.texture===null){const n=new NS(t.texture);(t.depthNear!==e.depthNear||t.depthFar!==e.depthFar)&&(this.depthNear=t.depthNear,this.depthFar=t.depthFar),this.texture=n}}getMesh(t){if(this.texture!==null&&this.mesh===null){const e=t.cameras[0].viewport,n=new Zi({vertexShader:w3,fragmentShader:C3,uniforms:{depthColor:{value:this.texture},depthWidth:{value:e.z},depthHeight:{value:e.w}}});this.mesh=new dn(new Ho(20,20),n)}return this.mesh}reset(){this.texture=null,this.mesh=null}getDepthTexture(){return this.texture}}class D3 extends hs{constructor(t,e){super();const n=this;let i=null,o=1,l=null,c="local-floor",h=1,f=null,p=null,m=null,g=null,v=null,x=null;const b=new R3,S={},_=e.getContextAttributes();let E=null,A=null;const T=[],U=[],D=new dt;let P=null;const O=new cn;O.viewport=new Ne;const C=new cn;C.viewport=new Ne;const w=[O,C],B=new xS;let tt=null,X=null;this.cameraAutoUpdate=!0,this.enabled=!1,this.isPresenting=!1,this.getController=function(at){let Lt=T[at];return Lt===void 0&&(Lt=new Qu,T[at]=Lt),Lt.getTargetRaySpace()},this.getControllerGrip=function(at){let Lt=T[at];return Lt===void 0&&(Lt=new Qu,T[at]=Lt),Lt.getGripSpace()},this.getHand=function(at){let Lt=T[at];return Lt===void 0&&(Lt=new Qu,T[at]=Lt),Lt.getHandSpace()};function Z(at){const Lt=U.indexOf(at.inputSource);if(Lt===-1)return;const Rt=T[Lt];Rt!==void 0&&(Rt.update(at.inputSource,at.frame,f||l),Rt.dispatchEvent({type:at.type,data:at.inputSource}))}function ot(){i.removeEventListener("select",Z),i.removeEventListener("selectstart",Z),i.removeEventListener("selectend",Z),i.removeEventListener("squeeze",Z),i.removeEventListener("squeezestart",Z),i.removeEventListener("squeezeend",Z),i.removeEventListener("end",ot),i.removeEventListener("inputsourceschange",k);for(let at=0;at<T.length;at++){const Lt=U[at];Lt!==null&&(U[at]=null,T[at].disconnect(Lt))}tt=null,X=null,b.reset();for(const at in S)delete S[at];t.setRenderTarget(E),v=null,g=null,m=null,i=null,A=null,jt.stop(),n.isPresenting=!1,t.setPixelRatio(P),t.setSize(D.width,D.height,!1),n.dispatchEvent({type:"sessionend"})}this.setFramebufferScaleFactor=function(at){o=at,n.isPresenting===!0&&console.warn("THREE.WebXRManager: Cannot change framebuffer scale while presenting.")},this.setReferenceSpaceType=function(at){c=at,n.isPresenting===!0&&console.warn("THREE.WebXRManager: Cannot change reference space type while presenting.")},this.getReferenceSpace=function(){return f||l},this.setReferenceSpace=function(at){f=at},this.getBaseLayer=function(){return g!==null?g:v},this.getBinding=function(){return m},this.getFrame=function(){return x},this.getSession=function(){return i},this.setSession=async function(at){if(i=at,i!==null){if(E=t.getRenderTarget(),i.addEventListener("select",Z),i.addEventListener("selectstart",Z),i.addEventListener("selectend",Z),i.addEventListener("squeeze",Z),i.addEventListener("squeezestart",Z),i.addEventListener("squeezeend",Z),i.addEventListener("end",ot),i.addEventListener("inputsourceschange",k),_.xrCompatible!==!0&&await e.makeXRCompatible(),P=t.getPixelRatio(),t.getSize(D),typeof XRWebGLBinding<"u"&&(m=new XRWebGLBinding(i,e)),m!==null&&"createProjectionLayer"in XRWebGLBinding.prototype){let Rt=null,Qt=null,Zt=null;_.depth&&(Zt=_.stencil?e.DEPTH24_STENCIL8:e.DEPTH_COMPONENT24,Rt=_.stencil?Ro:Co,Qt=_.stencil?wo:Hs);const re={colorFormat:e.RGBA8,depthFormat:Zt,scaleFactor:o};g=m.createProjectionLayer(re),i.updateRenderState({layers:[g]}),t.setPixelRatio(1),t.setSize(g.textureWidth,g.textureHeight,!1),A=new us(g.textureWidth,g.textureHeight,{format:Hn,type:Ii,depthTexture:new qm(g.textureWidth,g.textureHeight,Qt,void 0,void 0,void 0,void 0,void 0,void 0,Rt),stencilBuffer:_.stencil,colorSpace:t.outputColorSpace,samples:_.antialias?4:0,resolveDepthBuffer:g.ignoreDepthValues===!1,resolveStencilBuffer:g.ignoreDepthValues===!1})}else{const Rt={antialias:_.antialias,alpha:!0,depth:_.depth,stencil:_.stencil,framebufferScaleFactor:o};v=new XRWebGLLayer(i,e,Rt),i.updateRenderState({baseLayer:v}),t.setPixelRatio(1),t.setSize(v.framebufferWidth,v.framebufferHeight,!1),A=new us(v.framebufferWidth,v.framebufferHeight,{format:Hn,type:Ii,colorSpace:t.outputColorSpace,stencilBuffer:_.stencil,resolveDepthBuffer:v.ignoreDepthValues===!1,resolveStencilBuffer:v.ignoreDepthValues===!1})}A.isXRRenderTarget=!0,this.setFoveation(h),f=null,l=await i.requestReferenceSpace(c),jt.setContext(i),jt.start(),n.isPresenting=!0,n.dispatchEvent({type:"sessionstart"})}},this.getEnvironmentBlendMode=function(){if(i!==null)return i.environmentBlendMode},this.getDepthTexture=function(){return b.getDepthTexture()};function k(at){for(let Lt=0;Lt<at.removed.length;Lt++){const Rt=at.removed[Lt],Qt=U.indexOf(Rt);Qt>=0&&(U[Qt]=null,T[Qt].disconnect(Rt))}for(let Lt=0;Lt<at.added.length;Lt++){const Rt=at.added[Lt];let Qt=U.indexOf(Rt);if(Qt===-1){for(let re=0;re<T.length;re++)if(re>=U.length){U.push(Rt),Qt=re;break}else if(U[re]===null){U[re]=Rt,Qt=re;break}if(Qt===-1)break}const Zt=T[Qt];Zt&&Zt.connect(Rt)}}const et=new I,q=new I;function ct(at,Lt,Rt){et.setFromMatrixPosition(Lt.matrixWorld),q.setFromMatrixPosition(Rt.matrixWorld);const Qt=et.distanceTo(q),Zt=Lt.projectionMatrix.elements,re=Rt.projectionMatrix.elements,Be=Zt[14]/(Zt[10]-1),le=Zt[14]/(Zt[10]+1),H=(Zt[9]+1)/Zt[5],mt=(Zt[9]-1)/Zt[5],ut=(Zt[8]-1)/Zt[0],St=(re[8]+1)/re[0],ht=Be*ut,Nt=Be*St,yt=Qt/(-ut+St),wt=yt*-ut;if(Lt.matrixWorld.decompose(at.position,at.quaternion,at.scale),at.translateX(wt),at.translateZ(yt),at.matrixWorld.compose(at.position,at.quaternion,at.scale),at.matrixWorldInverse.copy(at.matrixWorld).invert(),Zt[10]===-1)at.projectionMatrix.copy(Lt.projectionMatrix),at.projectionMatrixInverse.copy(Lt.projectionMatrixInverse);else{const ce=Be+yt,he=le+yt,z=ht-wt,R=Nt+(Qt-wt),J=H*le/he*ce,rt=mt*le/he*ce;at.projectionMatrix.makePerspective(z,R,J,rt,ce,he),at.projectionMatrixInverse.copy(at.projectionMatrix).invert()}}function vt(at,Lt){Lt===null?at.matrixWorld.copy(at.matrix):at.matrixWorld.multiplyMatrices(Lt.matrixWorld,at.matrix),at.matrixWorldInverse.copy(at.matrixWorld).invert()}this.updateCamera=function(at){if(i===null)return;let Lt=at.near,Rt=at.far;b.texture!==null&&(b.depthNear>0&&(Lt=b.depthNear),b.depthFar>0&&(Rt=b.depthFar)),B.near=C.near=O.near=Lt,B.far=C.far=O.far=Rt,(tt!==B.near||X!==B.far)&&(i.updateRenderState({depthNear:B.near,depthFar:B.far}),tt=B.near,X=B.far),B.layers.mask=at.layers.mask|6,O.layers.mask=B.layers.mask&3,C.layers.mask=B.layers.mask&5;const Qt=at.parent,Zt=B.cameras;vt(B,Qt);for(let re=0;re<Zt.length;re++)vt(Zt[re],Qt);Zt.length===2?ct(B,O,C):B.projectionMatrix.copy(O.projectionMatrix),xt(at,B,Qt)};function xt(at,Lt,Rt){Rt===null?at.matrix.copy(Lt.matrixWorld):(at.matrix.copy(Rt.matrixWorld),at.matrix.invert(),at.matrix.multiply(Lt.matrixWorld)),at.matrix.decompose(at.position,at.quaternion,at.scale),at.updateMatrixWorld(!0),at.projectionMatrix.copy(Lt.projectionMatrix),at.projectionMatrixInverse.copy(Lt.projectionMatrixInverse),at.isPerspectiveCamera&&(at.fov=Uo*2*Math.atan(1/at.projectionMatrix.elements[5]),at.zoom=1)}this.getCamera=function(){return B},this.getFoveation=function(){if(!(g===null&&v===null))return h},this.setFoveation=function(at){h=at,g!==null&&(g.fixedFoveation=at),v!==null&&v.fixedFoveation!==void 0&&(v.fixedFoveation=at)},this.hasDepthSensing=function(){return b.texture!==null},this.getDepthSensingMesh=function(){return b.getMesh(B)},this.getCameraTexture=function(at){return S[at]};let Ot=null;function ne(at,Lt){if(p=Lt.getViewerPose(f||l),x=Lt,p!==null){const Rt=p.views;v!==null&&(t.setRenderTargetFramebuffer(A,v.framebuffer),t.setRenderTarget(A));let Qt=!1;Rt.length!==B.cameras.length&&(B.cameras.length=0,Qt=!0);for(let le=0;le<Rt.length;le++){const H=Rt[le];let mt=null;if(v!==null)mt=v.getViewport(H);else{const St=m.getViewSubImage(g,H);mt=St.viewport,le===0&&(t.setRenderTargetTextures(A,St.colorTexture,St.depthStencilTexture),t.setRenderTarget(A))}let ut=w[le];ut===void 0&&(ut=new cn,ut.layers.enable(le),ut.viewport=new Ne,w[le]=ut),ut.matrix.fromArray(H.transform.matrix),ut.matrix.decompose(ut.position,ut.quaternion,ut.scale),ut.projectionMatrix.fromArray(H.projectionMatrix),ut.projectionMatrixInverse.copy(ut.projectionMatrix).invert(),ut.viewport.set(mt.x,mt.y,mt.width,mt.height),le===0&&(B.matrix.copy(ut.matrix),B.matrix.decompose(B.position,B.quaternion,B.scale)),Qt===!0&&B.cameras.push(ut)}const Zt=i.enabledFeatures;if(Zt&&Zt.includes("depth-sensing")&&i.depthUsage=="gpu-optimized"&&m){const le=m.getDepthInformation(Rt[0]);le&&le.isValid&&le.texture&&b.init(le,i.renderState)}if(Zt&&Zt.includes("camera-access")&&(t.state.unbindTexture(),m))for(let le=0;le<Rt.length;le++){const H=Rt[le].camera;if(H){let mt=S[H];mt||(mt=new NS,S[H]=mt);const ut=m.getCameraImage(H);mt.sourceTexture=ut}}}for(let Rt=0;Rt<T.length;Rt++){const Qt=U[Rt],Zt=T[Rt];Qt!==null&&Zt!==void 0&&Zt.update(Qt,Lt,f||l)}Ot&&Ot(at,Lt),Lt.detectedPlanes&&n.dispatchEvent({type:"planesdetected",data:Lt}),x=null}const jt=new AS;jt.setAnimationLoop(ne),this.setAnimationLoop=function(at){Ot=at},this.dispose=function(){}}}const er=new bi,U3=new pe;function N3(s,t){function e(S,_){S.matrixAutoUpdate===!0&&S.updateMatrix(),_.value.copy(S.matrix)}function n(S,_){_.color.getRGB(S.fogColor.value,Ex(s)),_.isFog?(S.fogNear.value=_.near,S.fogFar.value=_.far):_.isFogExp2&&(S.fogDensity.value=_.density)}function i(S,_,E,A,T){_.isMeshBasicMaterial||_.isMeshLambertMaterial?o(S,_):_.isMeshToonMaterial?(o(S,_),m(S,_)):_.isMeshPhongMaterial?(o(S,_),p(S,_)):_.isMeshStandardMaterial?(o(S,_),g(S,_),_.isMeshPhysicalMaterial&&v(S,_,T)):_.isMeshMatcapMaterial?(o(S,_),x(S,_)):_.isMeshDepthMaterial?o(S,_):_.isMeshDistanceMaterial?(o(S,_),b(S,_)):_.isMeshNormalMaterial?o(S,_):_.isLineBasicMaterial?(l(S,_),_.isLineDashedMaterial&&c(S,_)):_.isPointsMaterial?h(S,_,E,A):_.isSpriteMaterial?f(S,_):_.isShadowMaterial?(S.color.value.copy(_.color),S.opacity.value=_.opacity):_.isShaderMaterial&&(_.uniformsNeedUpdate=!1)}function o(S,_){S.opacity.value=_.opacity,_.color&&S.diffuse.value.copy(_.color),_.emissive&&S.emissive.value.copy(_.emissive).multiplyScalar(_.emissiveIntensity),_.map&&(S.map.value=_.map,e(_.map,S.mapTransform)),_.alphaMap&&(S.alphaMap.value=_.alphaMap,e(_.alphaMap,S.alphaMapTransform)),_.bumpMap&&(S.bumpMap.value=_.bumpMap,e(_.bumpMap,S.bumpMapTransform),S.bumpScale.value=_.bumpScale,_.side===Qn&&(S.bumpScale.value*=-1)),_.normalMap&&(S.normalMap.value=_.normalMap,e(_.normalMap,S.normalMapTransform),S.normalScale.value.copy(_.normalScale),_.side===Qn&&S.normalScale.value.negate()),_.displacementMap&&(S.displacementMap.value=_.displacementMap,e(_.displacementMap,S.displacementMapTransform),S.displacementScale.value=_.displacementScale,S.displacementBias.value=_.displacementBias),_.emissiveMap&&(S.emissiveMap.value=_.emissiveMap,e(_.emissiveMap,S.emissiveMapTransform)),_.specularMap&&(S.specularMap.value=_.specularMap,e(_.specularMap,S.specularMapTransform)),_.alphaTest>0&&(S.alphaTest.value=_.alphaTest);const E=t.get(_),A=E.envMap,T=E.envMapRotation;A&&(S.envMap.value=A,er.copy(T),er.x*=-1,er.y*=-1,er.z*=-1,A.isCubeTexture&&A.isRenderTargetTexture===!1&&(er.y*=-1,er.z*=-1),S.envMapRotation.value.setFromMatrix4(U3.makeRotationFromEuler(er)),S.flipEnvMap.value=A.isCubeTexture&&A.isRenderTargetTexture===!1?-1:1,S.reflectivity.value=_.reflectivity,S.ior.value=_.ior,S.refractionRatio.value=_.refractionRatio),_.lightMap&&(S.lightMap.value=_.lightMap,S.lightMapIntensity.value=_.lightMapIntensity,e(_.lightMap,S.lightMapTransform)),_.aoMap&&(S.aoMap.value=_.aoMap,S.aoMapIntensity.value=_.aoMapIntensity,e(_.aoMap,S.aoMapTransform))}function l(S,_){S.diffuse.value.copy(_.color),S.opacity.value=_.opacity,_.map&&(S.map.value=_.map,e(_.map,S.mapTransform))}function c(S,_){S.dashSize.value=_.dashSize,S.totalSize.value=_.dashSize+_.gapSize,S.scale.value=_.scale}function h(S,_,E,A){S.diffuse.value.copy(_.color),S.opacity.value=_.opacity,S.size.value=_.size*E,S.scale.value=A*.5,_.map&&(S.map.value=_.map,e(_.map,S.uvTransform)),_.alphaMap&&(S.alphaMap.value=_.alphaMap,e(_.alphaMap,S.alphaMapTransform)),_.alphaTest>0&&(S.alphaTest.value=_.alphaTest)}function f(S,_){S.diffuse.value.copy(_.color),S.opacity.value=_.opacity,S.rotation.value=_.rotation,_.map&&(S.map.value=_.map,e(_.map,S.mapTransform)),_.alphaMap&&(S.alphaMap.value=_.alphaMap,e(_.alphaMap,S.alphaMapTransform)),_.alphaTest>0&&(S.alphaTest.value=_.alphaTest)}function p(S,_){S.specular.value.copy(_.specular),S.shininess.value=Math.max(_.shininess,1e-4)}function m(S,_){_.gradientMap&&(S.gradientMap.value=_.gradientMap)}function g(S,_){S.metalness.value=_.metalness,_.metalnessMap&&(S.metalnessMap.value=_.metalnessMap,e(_.metalnessMap,S.metalnessMapTransform)),S.roughness.value=_.roughness,_.roughnessMap&&(S.roughnessMap.value=_.roughnessMap,e(_.roughnessMap,S.roughnessMapTransform)),_.envMap&&(S.envMapIntensity.value=_.envMapIntensity)}function v(S,_,E){S.ior.value=_.ior,_.sheen>0&&(S.sheenColor.value.copy(_.sheenColor).multiplyScalar(_.sheen),S.sheenRoughness.value=_.sheenRoughness,_.sheenColorMap&&(S.sheenColorMap.value=_.sheenColorMap,e(_.sheenColorMap,S.sheenColorMapTransform)),_.sheenRoughnessMap&&(S.sheenRoughnessMap.value=_.sheenRoughnessMap,e(_.sheenRoughnessMap,S.sheenRoughnessMapTransform))),_.clearcoat>0&&(S.clearcoat.value=_.clearcoat,S.clearcoatRoughness.value=_.clearcoatRoughness,_.clearcoatMap&&(S.clearcoatMap.value=_.clearcoatMap,e(_.clearcoatMap,S.clearcoatMapTransform)),_.clearcoatRoughnessMap&&(S.clearcoatRoughnessMap.value=_.clearcoatRoughnessMap,e(_.clearcoatRoughnessMap,S.clearcoatRoughnessMapTransform)),_.clearcoatNormalMap&&(S.clearcoatNormalMap.value=_.clearcoatNormalMap,e(_.clearcoatNormalMap,S.clearcoatNormalMapTransform),S.clearcoatNormalScale.value.copy(_.clearcoatNormalScale),_.side===Qn&&S.clearcoatNormalScale.value.negate())),_.dispersion>0&&(S.dispersion.value=_.dispersion),_.iridescence>0&&(S.iridescence.value=_.iridescence,S.iridescenceIOR.value=_.iridescenceIOR,S.iridescenceThicknessMinimum.value=_.iridescenceThicknessRange[0],S.iridescenceThicknessMaximum.value=_.iridescenceThicknessRange[1],_.iridescenceMap&&(S.iridescenceMap.value=_.iridescenceMap,e(_.iridescenceMap,S.iridescenceMapTransform)),_.iridescenceThicknessMap&&(S.iridescenceThicknessMap.value=_.iridescenceThicknessMap,e(_.iridescenceThicknessMap,S.iridescenceThicknessMapTransform))),_.transmission>0&&(S.transmission.value=_.transmission,S.transmissionSamplerMap.value=E.texture,S.transmissionSamplerSize.value.set(E.width,E.height),_.transmissionMap&&(S.transmissionMap.value=_.transmissionMap,e(_.transmissionMap,S.transmissionMapTransform)),S.thickness.value=_.thickness,_.thicknessMap&&(S.thicknessMap.value=_.thicknessMap,e(_.thicknessMap,S.thicknessMapTransform)),S.attenuationDistance.value=_.attenuationDistance,S.attenuationColor.value.copy(_.attenuationColor)),_.anisotropy>0&&(S.anisotropyVector.value.set(_.anisotropy*Math.cos(_.anisotropyRotation),_.anisotropy*Math.sin(_.anisotropyRotation)),_.anisotropyMap&&(S.anisotropyMap.value=_.anisotropyMap,e(_.anisotropyMap,S.anisotropyMapTransform))),S.specularIntensity.value=_.specularIntensity,S.specularColor.value.copy(_.specularColor),_.specularColorMap&&(S.specularColorMap.value=_.specularColorMap,e(_.specularColorMap,S.specularColorMapTransform)),_.specularIntensityMap&&(S.specularIntensityMap.value=_.specularIntensityMap,e(_.specularIntensityMap,S.specularIntensityMapTransform))}function x(S,_){_.matcap&&(S.matcap.value=_.matcap)}function b(S,_){const E=t.get(_).light;S.referencePosition.value.setFromMatrixPosition(E.matrixWorld),S.nearDistance.value=E.shadow.camera.near,S.farDistance.value=E.shadow.camera.far}return{refreshFogUniforms:n,refreshMaterialUniforms:i}}function L3(s,t,e,n){let i={},o={},l=[];const c=s.getParameter(s.MAX_UNIFORM_BUFFER_BINDINGS);function h(E,A){const T=A.program;n.uniformBlockBinding(E,T)}function f(E,A){let T=i[E.id];T===void 0&&(x(E),T=p(E),i[E.id]=T,E.addEventListener("dispose",S));const U=A.program;n.updateUBOMapping(E,U);const D=t.render.frame;o[E.id]!==D&&(g(E),o[E.id]=D)}function p(E){const A=m();E.__bindingPointIndex=A;const T=s.createBuffer(),U=E.__size,D=E.usage;return s.bindBuffer(s.UNIFORM_BUFFER,T),s.bufferData(s.UNIFORM_BUFFER,U,D),s.bindBuffer(s.UNIFORM_BUFFER,null),s.bindBufferBase(s.UNIFORM_BUFFER,A,T),T}function m(){for(let E=0;E<c;E++)if(l.indexOf(E)===-1)return l.push(E),E;return console.error("THREE.WebGLRenderer: Maximum number of simultaneously usable uniforms groups reached."),0}function g(E){const A=i[E.id],T=E.uniforms,U=E.__cache;s.bindBuffer(s.UNIFORM_BUFFER,A);for(let D=0,P=T.length;D<P;D++){const O=Array.isArray(T[D])?T[D]:[T[D]];for(let C=0,w=O.length;C<w;C++){const B=O[C];if(v(B,D,C,U)===!0){const tt=B.__offset,X=Array.isArray(B.value)?B.value:[B.value];let Z=0;for(let ot=0;ot<X.length;ot++){const k=X[ot],et=b(k);typeof k=="number"||typeof k=="boolean"?(B.__data[0]=k,s.bufferSubData(s.UNIFORM_BUFFER,tt+Z,B.__data)):k.isMatrix3?(B.__data[0]=k.elements[0],B.__data[1]=k.elements[1],B.__data[2]=k.elements[2],B.__data[3]=0,B.__data[4]=k.elements[3],B.__data[5]=k.elements[4],B.__data[6]=k.elements[5],B.__data[7]=0,B.__data[8]=k.elements[6],B.__data[9]=k.elements[7],B.__data[10]=k.elements[8],B.__data[11]=0):(k.toArray(B.__data,Z),Z+=et.storage/Float32Array.BYTES_PER_ELEMENT)}s.bufferSubData(s.UNIFORM_BUFFER,tt,B.__data)}}}s.bindBuffer(s.UNIFORM_BUFFER,null)}function v(E,A,T,U){const D=E.value,P=A+"_"+T;if(U[P]===void 0)return typeof D=="number"||typeof D=="boolean"?U[P]=D:U[P]=D.clone(),!0;{const O=U[P];if(typeof D=="number"||typeof D=="boolean"){if(O!==D)return U[P]=D,!0}else if(O.equals(D)===!1)return O.copy(D),!0}return!1}function x(E){const A=E.uniforms;let T=0;const U=16;for(let P=0,O=A.length;P<O;P++){const C=Array.isArray(A[P])?A[P]:[A[P]];for(let w=0,B=C.length;w<B;w++){const tt=C[w],X=Array.isArray(tt.value)?tt.value:[tt.value];for(let Z=0,ot=X.length;Z<ot;Z++){const k=X[Z],et=b(k),q=T%U,ct=q%et.boundary,vt=q+ct;T+=ct,vt!==0&&U-vt<et.storage&&(T+=U-vt),tt.__data=new Float32Array(et.storage/Float32Array.BYTES_PER_ELEMENT),tt.__offset=T,T+=et.storage}}}const D=T%U;return D>0&&(T+=U-D),E.__size=T,E.__cache={},this}function b(E){const A={boundary:0,storage:0};return typeof E=="number"||typeof E=="boolean"?(A.boundary=4,A.storage=4):E.isVector2?(A.boundary=8,A.storage=8):E.isVector3||E.isColor?(A.boundary=16,A.storage=12):E.isVector4?(A.boundary=16,A.storage=16):E.isMatrix3?(A.boundary=48,A.storage=48):E.isMatrix4?(A.boundary=64,A.storage=64):E.isTexture?console.warn("THREE.WebGLRenderer: Texture samplers can not be part of an uniforms group."):console.warn("THREE.WebGLRenderer: Unsupported uniform value type.",E),A}function S(E){const A=E.target;A.removeEventListener("dispose",S);const T=l.indexOf(A.__bindingPointIndex);l.splice(T,1),s.deleteBuffer(i[A.id]),delete i[A.id],delete o[A.id]}function _(){for(const E in i)s.deleteBuffer(i[E]);l=[],i={},o={}}return{bind:h,update:f,dispose:_}}class LS{constructor(t={}){const{canvas:e=Sx(),context:n=null,depth:i=!0,stencil:o=!1,alpha:l=!1,antialias:c=!1,premultipliedAlpha:h=!0,preserveDrawingBuffer:f=!1,powerPreference:p="default",failIfMajorPerformanceCaveat:m=!1,reversedDepthBuffer:g=!1}=t;this.isWebGLRenderer=!0;let v;if(n!==null){if(typeof WebGLRenderingContext<"u"&&n instanceof WebGLRenderingContext)throw new Error("THREE.WebGLRenderer: WebGL 1 is not supported since r163.");v=n.getContextAttributes().alpha}else v=l;const x=new Uint32Array(4),b=new Int32Array(4);let S=null,_=null;const E=[],A=[];this.domElement=e,this.debug={checkShaderErrors:!0,onShaderError:null},this.autoClear=!0,this.autoClearColor=!0,this.autoClearDepth=!0,this.autoClearStencil=!0,this.sortObjects=!0,this.clippingPlanes=[],this.localClippingEnabled=!1,this.toneMapping=ls,this.toneMappingExposure=1,this.transmissionResolutionScale=1;const T=this;let U=!1;this._outputColorSpace=Fn;let D=0,P=0,O=null,C=-1,w=null;const B=new Ne,tt=new Ne;let X=null;const Z=new kt(0);let ot=0,k=e.width,et=e.height,q=1,ct=null,vt=null;const xt=new Ne(0,0,k,et),Ot=new Ne(0,0,k,et);let ne=!1;const jt=new Fo;let at=!1,Lt=!1;const Rt=new pe,Qt=new I,Zt=new Ne,re={background:null,fog:null,environment:null,overrideMaterial:null,isScene:!0};let Be=!1;function le(){return O===null?q:1}let H=n;function mt(N,W){return e.getContext(N,W)}try{const N={alpha:!0,depth:i,stencil:o,antialias:c,premultipliedAlpha:h,preserveDrawingBuffer:f,powerPreference:p,failIfMajorPerformanceCaveat:m};if("setAttribute"in e&&e.setAttribute("data-engine",`three.js r${Xh}`),e.addEventListener("webglcontextlost",Tt,!1),e.addEventListener("webglcontextrestored",zt,!1),e.addEventListener("webglcontextcreationerror",bt,!1),H===null){const W="webgl2";if(H=mt(W,N),H===null)throw mt(W)?new Error("Error creating WebGL context with your selected attributes."):new Error("Error creating WebGL context.")}}catch(N){throw console.error("THREE.WebGLRenderer: "+N.message),N}let ut,St,ht,Nt,yt,wt,ce,he,z,R,J,rt,_t,lt,Kt,Dt,Xt,qt,Mt,Pt,te,F,$,Et;function V(){ut=new XR(H),ut.init(),F=new US(H,ut),St=new zR(H,ut,t,F),ht=new T3(H,ut),St.reversedDepthBuffer&&g&&ht.buffers.depth.setReversed(!0),Nt=new jR(H),yt=new f3,wt=new A3(H,ut,ht,yt,St,F,Nt),ce=new HR(T),he=new WR(T),z=new tw(H),$=new OR(H,z),R=new qR(H,z,Nt,$),J=new KR(H,R,z,Nt),Mt=new ZR(H,St,wt),Dt=new FR(yt),rt=new h3(T,ce,he,ut,St,$,Dt),_t=new N3(T,yt),lt=new p3,Kt=new x3(ut),qt=new IR(T,ce,he,ht,J,v,h),Xt=new b3(T,J,St),Et=new L3(H,Nt,St,ht),Pt=new BR(H,ut,Nt),te=new YR(H,ut,Nt),Nt.programs=rt.programs,T.capabilities=St,T.extensions=ut,T.properties=yt,T.renderLists=lt,T.shadowMap=Xt,T.state=ht,T.info=Nt}V();const gt=new D3(T,H);this.xr=gt,this.getContext=function(){return H},this.getContextAttributes=function(){return H.getContextAttributes()},this.forceContextLoss=function(){const N=ut.get("WEBGL_lose_context");N&&N.loseContext()},this.forceContextRestore=function(){const N=ut.get("WEBGL_lose_context");N&&N.restoreContext()},this.getPixelRatio=function(){return q},this.setPixelRatio=function(N){N!==void 0&&(q=N,this.setSize(k,et,!1))},this.getSize=function(N){return N.set(k,et)},this.setSize=function(N,W,Q=!0){if(gt.isPresenting){console.warn("THREE.WebGLRenderer: Can't change size while VR device is presenting.");return}k=N,et=W,e.width=Math.floor(N*q),e.height=Math.floor(W*q),Q===!0&&(e.style.width=N+"px",e.style.height=W+"px"),this.setViewport(0,0,N,W)},this.getDrawingBufferSize=function(N){return N.set(k*q,et*q).floor()},this.setDrawingBufferSize=function(N,W,Q){k=N,et=W,q=Q,e.width=Math.floor(N*Q),e.height=Math.floor(W*Q),this.setViewport(0,0,N,W)},this.getCurrentViewport=function(N){return N.copy(B)},this.getViewport=function(N){return N.copy(xt)},this.setViewport=function(N,W,Q,it){N.isVector4?xt.set(N.x,N.y,N.z,N.w):xt.set(N,W,Q,it),ht.viewport(B.copy(xt).multiplyScalar(q).round())},this.getScissor=function(N){return N.copy(Ot)},this.setScissor=function(N,W,Q,it){N.isVector4?Ot.set(N.x,N.y,N.z,N.w):Ot.set(N,W,Q,it),ht.scissor(tt.copy(Ot).multiplyScalar(q).round())},this.getScissorTest=function(){return ne},this.setScissorTest=function(N){ht.setScissorTest(ne=N)},this.setOpaqueSort=function(N){ct=N},this.setTransparentSort=function(N){vt=N},this.getClearColor=function(N){return N.copy(qt.getClearColor())},this.setClearColor=function(){qt.setClearColor(...arguments)},this.getClearAlpha=function(){return qt.getClearAlpha()},this.setClearAlpha=function(){qt.setClearAlpha(...arguments)},this.clear=function(N=!0,W=!0,Q=!0){let it=0;if(N){let Y=!1;if(O!==null){const At=O.texture.format;Y=At===$h||At===Qh||At===lc}if(Y){const At=O.texture.type,It=At===Ii||At===Hs||At===Ao||At===wo||At===Zh||At===Kh,Yt=qt.getClearColor(),Wt=qt.getClearAlpha(),oe=Yt.r,fe=Yt.g,ie=Yt.b;It?(x[0]=oe,x[1]=fe,x[2]=ie,x[3]=Wt,H.clearBufferuiv(H.COLOR,0,x)):(b[0]=oe,b[1]=fe,b[2]=ie,b[3]=Wt,H.clearBufferiv(H.COLOR,0,b))}else it|=H.COLOR_BUFFER_BIT}W&&(it|=H.DEPTH_BUFFER_BIT),Q&&(it|=H.STENCIL_BUFFER_BIT,this.state.buffers.stencil.setMask(4294967295)),H.clear(it)},this.clearColor=function(){this.clear(!0,!1,!1)},this.clearDepth=function(){this.clear(!1,!0,!1)},this.clearStencil=function(){this.clear(!1,!1,!0)},this.dispose=function(){e.removeEventListener("webglcontextlost",Tt,!1),e.removeEventListener("webglcontextrestored",zt,!1),e.removeEventListener("webglcontextcreationerror",bt,!1),qt.dispose(),lt.dispose(),Kt.dispose(),yt.dispose(),ce.dispose(),he.dispose(),J.dispose(),$.dispose(),Et.dispose(),rt.dispose(),gt.dispose(),gt.removeEventListener("sessionstart",yn),gt.removeEventListener("sessionend",ko),Bi.stop()};function Tt(N){N.preventDefault(),console.log("THREE.WebGLRenderer: Context Lost."),U=!0}function zt(){console.log("THREE.WebGLRenderer: Context Restored."),U=!1;const N=Nt.autoReset,W=Xt.enabled,Q=Xt.autoUpdate,it=Xt.needsUpdate,Y=Xt.type;V(),Nt.autoReset=N,Xt.enabled=W,Xt.autoUpdate=Q,Xt.needsUpdate=it,Xt.type=Y}function bt(N){console.error("THREE.WebGLRenderer: A WebGL context could not be created. Reason: ",N.statusMessage)}function pt(N){const W=N.target;W.removeEventListener("dispose",pt),Ft(W)}function Ft(N){ee(N),yt.remove(N)}function ee(N){const W=yt.get(N).programs;W!==void 0&&(W.forEach(function(Q){rt.releaseProgram(Q)}),N.isShaderMaterial&&rt.releaseShaderCache(N))}this.renderBufferDirect=function(N,W,Q,it,Y,At){W===null&&(W=re);const It=Y.isMesh&&Y.matrixWorld.determinant()<0,Yt=Xo(N,W,Q,it,Y);ht.setMaterial(it,It);let Wt=Q.index,oe=1;if(it.wireframe===!0){if(Wt=R.getWireframeAttribute(Q),Wt===void 0)return;oe=2}const fe=Q.drawRange,ie=Q.attributes.position;let be=fe.start*oe,ze=(fe.start+fe.count)*oe;At!==null&&(be=Math.max(be,At.start*oe),ze=Math.min(ze,(At.start+At.count)*oe)),Wt!==null?(be=Math.max(be,0),ze=Math.min(ze,Wt.count)):ie!=null&&(be=Math.max(be,0),ze=Math.min(ze,ie.count));const Ze=ze-be;if(Ze<0||Ze===1/0)return;$.setup(Y,it,Yt,Q,Wt);let Ge,Fe=Pt;if(Wt!==null&&(Ge=z.get(Wt),Fe=te,Fe.setIndex(Ge)),Y.isMesh)it.wireframe===!0?(ht.setLineWidth(it.wireframeLinewidth*le()),Fe.setMode(H.LINES)):Fe.setMode(H.TRIANGLES);else if(Y.isLine){let ae=it.linewidth;ae===void 0&&(ae=1),ht.setLineWidth(ae*le()),Y.isLineSegments?Fe.setMode(H.LINES):Y.isLineLoop?Fe.setMode(H.LINE_LOOP):Fe.setMode(H.LINE_STRIP)}else Y.isPoints?Fe.setMode(H.POINTS):Y.isSprite&&Fe.setMode(H.TRIANGLES);if(Y.isBatchedMesh)if(Y._multiDrawInstances!==null)Eo("THREE.WebGLRenderer: renderMultiDrawInstances has been deprecated and will be removed in r184. Append to renderMultiDraw arguments and use indirection."),Fe.renderMultiDrawInstances(Y._multiDrawStarts,Y._multiDrawCounts,Y._multiDrawCount,Y._multiDrawInstances);else if(ut.get("WEBGL_multi_draw"))Fe.renderMultiDraw(Y._multiDrawStarts,Y._multiDrawCounts,Y._multiDrawCount);else{const ae=Y._multiDrawStarts,Ke=Y._multiDrawCounts,Ce=Y._multiDrawCount,Dn=Wt?z.get(Wt).bytesPerElement:1,ps=yt.get(it).currentProgram.getUniforms();for(let Tn=0;Tn<Ce;Tn++)ps.setValue(H,"_gl_DrawID",Tn),Fe.render(ae[Tn]/Dn,Ke[Tn])}else if(Y.isInstancedMesh)Fe.renderInstances(be,Ze,Y.count);else if(Q.isInstancedBufferGeometry){const ae=Q._maxInstanceCount!==void 0?Q._maxInstanceCount:1/0,Ke=Math.min(Q.instanceCount,ae);Fe.renderInstances(be,Ze,Ke)}else Fe.render(be,Ze)};function Te(N,W,Q){N.transparent===!0&&N.side===as&&N.forceSinglePass===!1?(N.side=Qn,N.needsUpdate=!0,ds(N,W,Q),N.side=zs,N.needsUpdate=!0,ds(N,W,Q),N.side=as):ds(N,W,Q)}this.compile=function(N,W,Q=null){Q===null&&(Q=N),_=Kt.get(Q),_.init(W),A.push(_),Q.traverseVisible(function(Y){Y.isLight&&Y.layers.test(W.layers)&&(_.pushLight(Y),Y.castShadow&&_.pushShadow(Y))}),N!==Q&&N.traverseVisible(function(Y){Y.isLight&&Y.layers.test(W.layers)&&(_.pushLight(Y),Y.castShadow&&_.pushShadow(Y))}),_.setupLights();const it=new Set;return N.traverse(function(Y){if(!(Y.isMesh||Y.isPoints||Y.isLine||Y.isSprite))return;const At=Y.material;if(At)if(Array.isArray(At))for(let It=0;It<At.length;It++){const Yt=At[It];Te(Yt,Q,Y),it.add(Yt)}else Te(At,Q,Y),it.add(At)}),_=A.pop(),it},this.compileAsync=function(N,W,Q=null){const it=this.compile(N,W,Q);return new Promise(Y=>{function At(){if(it.forEach(function(It){yt.get(It).currentProgram.isReady()&&it.delete(It)}),it.size===0){Y(N);return}setTimeout(At,10)}ut.get("KHR_parallel_shader_compile")!==null?At():setTimeout(At,10)})};let Se=null;function _n(N){Se&&Se(N)}function yn(){Bi.stop()}function ko(){Bi.start()}const Bi=new AS;Bi.setAnimationLoop(_n),typeof self<"u"&&Bi.setContext(self),this.setAnimationLoop=function(N){Se=N,gt.setAnimationLoop(N),N===null?Bi.stop():Bi.start()},gt.addEventListener("sessionstart",yn),gt.addEventListener("sessionend",ko),this.render=function(N,W){if(W!==void 0&&W.isCamera!==!0){console.error("THREE.WebGLRenderer.render: camera is not an instance of THREE.Camera.");return}if(U===!0)return;if(N.matrixWorldAutoUpdate===!0&&N.updateMatrixWorld(),W.parent===null&&W.matrixWorldAutoUpdate===!0&&W.updateMatrixWorld(),gt.enabled===!0&&gt.isPresenting===!0&&(gt.cameraAutoUpdate===!0&&gt.updateCamera(W),W=gt.getCamera()),N.isScene===!0&&N.onBeforeRender(T,N,W,O),_=Kt.get(N,A.length),_.init(W),A.push(_),Rt.multiplyMatrices(W.projectionMatrix,W.matrixWorldInverse),jt.setFromProjectionMatrix(Rt,Si,W.reversedDepth),Lt=this.localClippingEnabled,at=Dt.init(this.clippingPlanes,Lt),S=lt.get(N,E.length),S.init(),E.push(S),gt.enabled===!0&&gt.isPresenting===!0){const At=T.xr.getDepthSensingMesh();At!==null&&ba(At,W,-1/0,T.sortObjects)}ba(N,W,0,T.sortObjects),S.finish(),T.sortObjects===!0&&S.sort(ct,vt),Be=gt.enabled===!1||gt.isPresenting===!1||gt.hasDepthSensing()===!1,Be&&qt.addToRenderList(S,N),this.info.render.frame++,at===!0&&Dt.beginShadows();const Q=_.state.shadowsArray;Xt.render(Q,N,W),at===!0&&Dt.endShadows(),this.info.autoReset===!0&&this.info.reset();const it=S.opaque,Y=S.transmissive;if(_.setupLights(),W.isArrayCamera){const At=W.cameras;if(Y.length>0)for(let It=0,Yt=At.length;It<Yt;It++){const Wt=At[It];Wo(it,Y,N,Wt)}Be&&qt.render(N);for(let It=0,Yt=At.length;It<Yt;It++){const Wt=At[It];zi(S,N,Wt,Wt.viewport)}}else Y.length>0&&Wo(it,Y,N,W),Be&&qt.render(N),zi(S,N,W);O!==null&&P===0&&(wt.updateMultisampleRenderTarget(O),wt.updateRenderTargetMipmap(O)),N.isScene===!0&&N.onAfterRender(T,N,W),$.resetDefaultState(),C=-1,w=null,A.pop(),A.length>0?(_=A[A.length-1],at===!0&&Dt.setGlobalState(T.clippingPlanes,_.state.camera)):_=null,E.pop(),E.length>0?S=E[E.length-1]:S=null};function ba(N,W,Q,it){if(N.visible===!1)return;if(N.layers.test(W.layers)){if(N.isGroup)Q=N.renderOrder;else if(N.isLOD)N.autoUpdate===!0&&N.update(W);else if(N.isLight)_.pushLight(N),N.castShadow&&_.pushShadow(N);else if(N.isSprite){if(!N.frustumCulled||jt.intersectsSprite(N)){it&&Zt.setFromMatrixPosition(N.matrixWorld).applyMatrix4(Rt);const It=J.update(N),Yt=N.material;Yt.visible&&S.push(N,It,Yt,Q,Zt.z,null)}}else if((N.isMesh||N.isLine||N.isPoints)&&(!N.frustumCulled||jt.intersectsObject(N))){const It=J.update(N),Yt=N.material;if(it&&(N.boundingSphere!==void 0?(N.boundingSphere===null&&N.computeBoundingSphere(),Zt.copy(N.boundingSphere.center)):(It.boundingSphere===null&&It.computeBoundingSphere(),Zt.copy(It.boundingSphere.center)),Zt.applyMatrix4(N.matrixWorld).applyMatrix4(Rt)),Array.isArray(Yt)){const Wt=It.groups;for(let oe=0,fe=Wt.length;oe<fe;oe++){const ie=Wt[oe],be=Yt[ie.materialIndex];be&&be.visible&&S.push(N,It,be,Q,Zt.z,ie)}}else Yt.visible&&S.push(N,It,Yt,Q,Zt.z,null)}}const At=N.children;for(let It=0,Yt=At.length;It<Yt;It++)ba(At[It],W,Q,it)}function zi(N,W,Q,it){const Y=N.opaque,At=N.transmissive,It=N.transparent;_.setupLightsView(Q),at===!0&&Dt.setGlobalState(T.clippingPlanes,Q),it&&ht.viewport(B.copy(it)),Y.length>0&&li(Y,W,Q),At.length>0&&li(At,W,Q),It.length>0&&li(It,W,Q),ht.buffers.depth.setTest(!0),ht.buffers.depth.setMask(!0),ht.buffers.color.setMask(!0),ht.setPolygonOffset(!1)}function Wo(N,W,Q,it){if((Q.isScene===!0?Q.overrideMaterial:null)!==null)return;_.state.transmissionRenderTarget[it.id]===void 0&&(_.state.transmissionRenderTarget[it.id]=new us(1,1,{generateMipmaps:!0,type:ut.has("EXT_color_buffer_half_float")||ut.has("EXT_color_buffer_float")?zo:Ii,minFilter:rs,samples:4,stencilBuffer:o,resolveDepthBuffer:!1,resolveStencilBuffer:!1,colorSpace:Re.workingColorSpace}));const At=_.state.transmissionRenderTarget[it.id],It=it.viewport||B;At.setSize(It.z*T.transmissionResolutionScale,It.w*T.transmissionResolutionScale);const Yt=T.getRenderTarget(),Wt=T.getActiveCubeFace(),oe=T.getActiveMipmapLevel();T.setRenderTarget(At),T.getClearColor(Z),ot=T.getClearAlpha(),ot<1&&T.setClearColor(16777215,.5),T.clear(),Be&&qt.render(Q);const fe=T.toneMapping;T.toneMapping=ls;const ie=it.viewport;if(it.viewport!==void 0&&(it.viewport=void 0),_.setupLightsView(it),at===!0&&Dt.setGlobalState(T.clippingPlanes,it),li(N,Q,it),wt.updateMultisampleRenderTarget(At),wt.updateRenderTargetMipmap(At),ut.has("WEBGL_multisampled_render_to_texture")===!1){let be=!1;for(let ze=0,Ze=W.length;ze<Ze;ze++){const Ge=W[ze],Fe=Ge.object,ae=Ge.geometry,Ke=Ge.material,Ce=Ge.group;if(Ke.side===as&&Fe.layers.test(it.layers)){const Dn=Ke.side;Ke.side=Qn,Ke.needsUpdate=!0,Ei(Fe,Q,it,ae,Ke,Ce),Ke.side=Dn,Ke.needsUpdate=!0,be=!0}}be===!0&&(wt.updateMultisampleRenderTarget(At),wt.updateRenderTargetMipmap(At))}T.setRenderTarget(Yt,Wt,oe),T.setClearColor(Z,ot),ie!==void 0&&(it.viewport=ie),T.toneMapping=fe}function li(N,W,Q){const it=W.isScene===!0?W.overrideMaterial:null;for(let Y=0,At=N.length;Y<At;Y++){const It=N[Y],Yt=It.object,Wt=It.geometry,oe=It.group;let fe=It.material;fe.allowOverride===!0&&it!==null&&(fe=it),Yt.layers.test(Q.layers)&&Ei(Yt,W,Q,Wt,fe,oe)}}function Ei(N,W,Q,it,Y,At){N.onBeforeRender(T,W,Q,it,Y,At),N.modelViewMatrix.multiplyMatrices(Q.matrixWorldInverse,N.matrixWorld),N.normalMatrix.getNormalMatrix(N.modelViewMatrix),Y.onBeforeRender(T,W,Q,it,N,At),Y.transparent===!0&&Y.side===as&&Y.forceSinglePass===!1?(Y.side=Qn,Y.needsUpdate=!0,T.renderBufferDirect(Q,W,it,Y,N,At),Y.side=zs,Y.needsUpdate=!0,T.renderBufferDirect(Q,W,it,Y,N,At),Y.side=as):T.renderBufferDirect(Q,W,it,Y,N,At),N.onAfterRender(T,W,Q,it,Y,At)}function ds(N,W,Q){W.isScene!==!0&&(W=re);const it=yt.get(N),Y=_.state.lights,At=_.state.shadowsArray,It=Y.state.version,Yt=rt.getParameters(N,Y.state,At,W,Q),Wt=rt.getProgramCacheKey(Yt);let oe=it.programs;it.environment=N.isMeshStandardMaterial?W.environment:null,it.fog=W.fog,it.envMap=(N.isMeshStandardMaterial?he:ce).get(N.envMap||it.environment),it.envMapRotation=it.environment!==null&&N.envMap===null?W.environmentRotation:N.envMapRotation,oe===void 0&&(N.addEventListener("dispose",pt),oe=new Map,it.programs=oe);let fe=oe.get(Wt);if(fe!==void 0){if(it.currentProgram===fe&&it.lightsStateVersion===It)return br(N,Yt),fe}else Yt.uniforms=rt.getUniforms(N),N.onBeforeCompile(Yt,T),fe=rt.acquireProgram(Yt,Wt),oe.set(Wt,fe),it.uniforms=Yt.uniforms;const ie=it.uniforms;return(!N.isShaderMaterial&&!N.isRawShaderMaterial||N.clipping===!0)&&(ie.clippingPlanes=Dt.uniform),br(N,Yt),it.needsLights=_c(N),it.lightsStateVersion=It,it.needsLights&&(ie.ambientLightColor.value=Y.state.ambient,ie.lightProbe.value=Y.state.probe,ie.directionalLights.value=Y.state.directional,ie.directionalLightShadows.value=Y.state.directionalShadow,ie.spotLights.value=Y.state.spot,ie.spotLightShadows.value=Y.state.spotShadow,ie.rectAreaLights.value=Y.state.rectArea,ie.ltc_1.value=Y.state.rectAreaLTC1,ie.ltc_2.value=Y.state.rectAreaLTC2,ie.pointLights.value=Y.state.point,ie.pointLightShadows.value=Y.state.pointShadow,ie.hemisphereLights.value=Y.state.hemi,ie.directionalShadowMap.value=Y.state.directionalShadowMap,ie.directionalShadowMatrix.value=Y.state.directionalShadowMatrix,ie.spotShadowMap.value=Y.state.spotShadowMap,ie.spotLightMatrix.value=Y.state.spotLightMatrix,ie.spotLightMap.value=Y.state.spotLightMap,ie.pointShadowMap.value=Y.state.pointShadowMap,ie.pointShadowMatrix.value=Y.state.pointShadowMatrix),it.currentProgram=fe,it.uniformsList=null,fe}function Qe(N){if(N.uniformsList===null){const W=N.currentProgram.getUniforms();N.uniformsList=$u.seqWithValue(W.seq,N.uniforms)}return N.uniformsList}function br(N,W){const Q=yt.get(N);Q.outputColorSpace=W.outputColorSpace,Q.batching=W.batching,Q.batchingColor=W.batchingColor,Q.instancing=W.instancing,Q.instancingColor=W.instancingColor,Q.instancingMorph=W.instancingMorph,Q.skinning=W.skinning,Q.morphTargets=W.morphTargets,Q.morphNormals=W.morphNormals,Q.morphColors=W.morphColors,Q.morphTargetsCount=W.morphTargetsCount,Q.numClippingPlanes=W.numClippingPlanes,Q.numIntersection=W.numClipIntersection,Q.vertexAlphas=W.vertexAlphas,Q.vertexTangents=W.vertexTangents,Q.toneMapping=W.toneMapping}function Xo(N,W,Q,it,Y){W.isScene!==!0&&(W=re),wt.resetTextureUnits();const At=W.fog,It=it.isMeshStandardMaterial?W.environment:null,Yt=O===null?T.outputColorSpace:O.isXRRenderTarget===!0?O.texture.colorSpace:va,Wt=(it.isMeshStandardMaterial?he:ce).get(it.envMap||It),oe=it.vertexColors===!0&&!!Q.attributes.color&&Q.attributes.color.itemSize===4,fe=!!Q.attributes.tangent&&(!!it.normalMap||it.anisotropy>0),ie=!!Q.morphAttributes.position,be=!!Q.morphAttributes.normal,ze=!!Q.morphAttributes.color;let Ze=ls;it.toneMapped&&(O===null||O.isXRRenderTarget===!0)&&(Ze=T.toneMapping);const Ge=Q.morphAttributes.position||Q.morphAttributes.normal||Q.morphAttributes.color,Fe=Ge!==void 0?Ge.length:0,ae=yt.get(it),Ke=_.state.lights;if(at===!0&&(Lt===!0||N!==w)){const xn=N===w&&it.id===C;Dt.setState(it,N,xn)}let Ce=!1;it.version===ae.__version?(ae.needsLights&&ae.lightsStateVersion!==Ke.state.version||ae.outputColorSpace!==Yt||Y.isBatchedMesh&&ae.batching===!1||!Y.isBatchedMesh&&ae.batching===!0||Y.isBatchedMesh&&ae.batchingColor===!0&&Y.colorTexture===null||Y.isBatchedMesh&&ae.batchingColor===!1&&Y.colorTexture!==null||Y.isInstancedMesh&&ae.instancing===!1||!Y.isInstancedMesh&&ae.instancing===!0||Y.isSkinnedMesh&&ae.skinning===!1||!Y.isSkinnedMesh&&ae.skinning===!0||Y.isInstancedMesh&&ae.instancingColor===!0&&Y.instanceColor===null||Y.isInstancedMesh&&ae.instancingColor===!1&&Y.instanceColor!==null||Y.isInstancedMesh&&ae.instancingMorph===!0&&Y.morphTexture===null||Y.isInstancedMesh&&ae.instancingMorph===!1&&Y.morphTexture!==null||ae.envMap!==Wt||it.fog===!0&&ae.fog!==At||ae.numClippingPlanes!==void 0&&(ae.numClippingPlanes!==Dt.numPlanes||ae.numIntersection!==Dt.numIntersection)||ae.vertexAlphas!==oe||ae.vertexTangents!==fe||ae.morphTargets!==ie||ae.morphNormals!==be||ae.morphColors!==ze||ae.toneMapping!==Ze||ae.morphTargetsCount!==Fe)&&(Ce=!0):(Ce=!0,ae.__version=it.version);let Dn=ae.currentProgram;Ce===!0&&(Dn=ds(it,W,Y));let ps=!1,Tn=!1,Gs=!1;const qe=Dn.getUniforms(),Wn=ae.uniforms;if(ht.useProgram(Dn.program)&&(ps=!0,Tn=!0,Gs=!0),it.id!==C&&(C=it.id,Tn=!0),ps||w!==N){ht.buffers.depth.getReversed()&&N.reversedDepth!==!0&&(N._reversedDepth=!0,N.updateProjectionMatrix()),qe.setValue(H,"projectionMatrix",N.projectionMatrix),qe.setValue(H,"viewMatrix",N.matrixWorldInverse);const Un=qe.map.cameraPosition;Un!==void 0&&Un.setValue(H,Qt.setFromMatrixPosition(N.matrixWorld)),St.logarithmicDepthBuffer&&qe.setValue(H,"logDepthBufFC",2/(Math.log(N.far+1)/Math.LN2)),(it.isMeshPhongMaterial||it.isMeshToonMaterial||it.isMeshLambertMaterial||it.isMeshBasicMaterial||it.isMeshStandardMaterial||it.isShaderMaterial)&&qe.setValue(H,"isOrthographic",N.isOrthographicCamera===!0),w!==N&&(w=N,Tn=!0,Gs=!0)}if(Y.isSkinnedMesh){qe.setOptional(H,Y,"bindMatrix"),qe.setOptional(H,Y,"bindMatrixInverse");const xn=Y.skeleton;xn&&(xn.boneTexture===null&&xn.computeBoneTexture(),qe.setValue(H,"boneTexture",xn.boneTexture,wt))}Y.isBatchedMesh&&(qe.setOptional(H,Y,"batchingTexture"),qe.setValue(H,"batchingTexture",Y._matricesTexture,wt),qe.setOptional(H,Y,"batchingIdTexture"),qe.setValue(H,"batchingIdTexture",Y._indirectTexture,wt),qe.setOptional(H,Y,"batchingColorTexture"),Y._colorsTexture!==null&&qe.setValue(H,"batchingColorTexture",Y._colorsTexture,wt));const Xn=Q.morphAttributes;if((Xn.position!==void 0||Xn.normal!==void 0||Xn.color!==void 0)&&Mt.update(Y,Q,Dn),(Tn||ae.receiveShadow!==Y.receiveShadow)&&(ae.receiveShadow=Y.receiveShadow,qe.setValue(H,"receiveShadow",Y.receiveShadow)),it.isMeshGouraudMaterial&&it.envMap!==null&&(Wn.envMap.value=Wt,Wn.flipEnvMap.value=Wt.isCubeTexture&&Wt.isRenderTargetTexture===!1?-1:1),it.isMeshStandardMaterial&&it.envMap===null&&W.environment!==null&&(Wn.envMapIntensity.value=W.environmentIntensity),Tn&&(qe.setValue(H,"toneMappingExposure",T.toneMappingExposure),ae.needsLights&&vc(Wn,Gs),At&&it.fog===!0&&_t.refreshFogUniforms(Wn,At),_t.refreshMaterialUniforms(Wn,it,q,et,_.state.transmissionRenderTarget[N.id]),$u.upload(H,Qe(ae),Wn,wt)),it.isShaderMaterial&&it.uniformsNeedUpdate===!0&&($u.upload(H,Qe(ae),Wn,wt),it.uniformsNeedUpdate=!1),it.isSpriteMaterial&&qe.setValue(H,"center",Y.center),qe.setValue(H,"modelViewMatrix",Y.modelViewMatrix),qe.setValue(H,"normalMatrix",Y.normalMatrix),qe.setValue(H,"modelMatrix",Y.matrixWorld),it.isShaderMaterial||it.isRawShaderMaterial){const xn=it.uniformsGroups;for(let Un=0,Er=xn.length;Un<Er;Un++){const ti=xn[Un];Et.update(ti,Dn),Et.bind(ti,Dn)}}return Dn}function vc(N,W){N.ambientLightColor.needsUpdate=W,N.lightProbe.needsUpdate=W,N.directionalLights.needsUpdate=W,N.directionalLightShadows.needsUpdate=W,N.pointLights.needsUpdate=W,N.pointLightShadows.needsUpdate=W,N.spotLights.needsUpdate=W,N.spotLightShadows.needsUpdate=W,N.rectAreaLights.needsUpdate=W,N.hemisphereLights.needsUpdate=W}function _c(N){return N.isMeshLambertMaterial||N.isMeshToonMaterial||N.isMeshPhongMaterial||N.isMeshStandardMaterial||N.isShadowMaterial||N.isShaderMaterial&&N.lights===!0}this.getActiveCubeFace=function(){return D},this.getActiveMipmapLevel=function(){return P},this.getRenderTarget=function(){return O},this.setRenderTargetTextures=function(N,W,Q){const it=yt.get(N);it.__autoAllocateDepthBuffer=N.resolveDepthBuffer===!1,it.__autoAllocateDepthBuffer===!1&&(it.__useRenderToTexture=!1),yt.get(N.texture).__webglTexture=W,yt.get(N.depthTexture).__webglTexture=it.__autoAllocateDepthBuffer?void 0:Q,it.__hasExternalTextures=!0},this.setRenderTargetFramebuffer=function(N,W){const Q=yt.get(N);Q.__webglFramebuffer=W,Q.__useDefaultFramebuffer=W===void 0};const wf=H.createFramebuffer();this.setRenderTarget=function(N,W=0,Q=0){O=N,D=W,P=Q;let it=!0,Y=null,At=!1,It=!1;if(N){const Wt=yt.get(N);if(Wt.__useDefaultFramebuffer!==void 0)ht.bindFramebuffer(H.FRAMEBUFFER,null),it=!1;else if(Wt.__webglFramebuffer===void 0)wt.setupRenderTarget(N);else if(Wt.__hasExternalTextures)wt.rebindTextures(N,yt.get(N.texture).__webglTexture,yt.get(N.depthTexture).__webglTexture);else if(N.depthBuffer){const ie=N.depthTexture;if(Wt.__boundDepthTexture!==ie){if(ie!==null&&yt.has(ie)&&(N.width!==ie.image.width||N.height!==ie.image.height))throw new Error("WebGLRenderTarget: Attached DepthTexture is initialized to the incorrect size.");wt.setupDepthRenderbuffer(N)}}const oe=N.texture;(oe.isData3DTexture||oe.isDataArrayTexture||oe.isCompressedArrayTexture)&&(It=!0);const fe=yt.get(N).__webglFramebuffer;N.isWebGLCubeRenderTarget?(Array.isArray(fe[W])?Y=fe[W][Q]:Y=fe[W],At=!0):N.samples>0&&wt.useMultisampledRTT(N)===!1?Y=yt.get(N).__webglMultisampledFramebuffer:Array.isArray(fe)?Y=fe[Q]:Y=fe,B.copy(N.viewport),tt.copy(N.scissor),X=N.scissorTest}else B.copy(xt).multiplyScalar(q).floor(),tt.copy(Ot).multiplyScalar(q).floor(),X=ne;if(Q!==0&&(Y=wf),ht.bindFramebuffer(H.FRAMEBUFFER,Y)&&it&&ht.drawBuffers(N,Y),ht.viewport(B),ht.scissor(tt),ht.setScissorTest(X),At){const Wt=yt.get(N.texture);H.framebufferTexture2D(H.FRAMEBUFFER,H.COLOR_ATTACHMENT0,H.TEXTURE_CUBE_MAP_POSITIVE_X+W,Wt.__webglTexture,Q)}else if(It){const Wt=W;for(let oe=0;oe<N.textures.length;oe++){const fe=yt.get(N.textures[oe]);H.framebufferTextureLayer(H.FRAMEBUFFER,H.COLOR_ATTACHMENT0+oe,fe.__webglTexture,Q,Wt)}}else if(N!==null&&Q!==0){const Wt=yt.get(N.texture);H.framebufferTexture2D(H.FRAMEBUFFER,H.COLOR_ATTACHMENT0,H.TEXTURE_2D,Wt.__webglTexture,Q)}C=-1},this.readRenderTargetPixels=function(N,W,Q,it,Y,At,It,Yt=0){if(!(N&&N.isWebGLRenderTarget)){console.error("THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not THREE.WebGLRenderTarget.");return}let Wt=yt.get(N).__webglFramebuffer;if(N.isWebGLCubeRenderTarget&&It!==void 0&&(Wt=Wt[It]),Wt){ht.bindFramebuffer(H.FRAMEBUFFER,Wt);try{const oe=N.textures[Yt],fe=oe.format,ie=oe.type;if(!St.textureFormatReadable(fe)){console.error("THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not in RGBA or implementation defined format.");return}if(!St.textureTypeReadable(ie)){console.error("THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not in UnsignedByteType or implementation defined type.");return}W>=0&&W<=N.width-it&&Q>=0&&Q<=N.height-Y&&(N.textures.length>1&&H.readBuffer(H.COLOR_ATTACHMENT0+Yt),H.readPixels(W,Q,it,Y,F.convert(fe),F.convert(ie),At))}finally{const oe=O!==null?yt.get(O).__webglFramebuffer:null;ht.bindFramebuffer(H.FRAMEBUFFER,oe)}}},this.readRenderTargetPixelsAsync=async function(N,W,Q,it,Y,At,It,Yt=0){if(!(N&&N.isWebGLRenderTarget))throw new Error("THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not THREE.WebGLRenderTarget.");let Wt=yt.get(N).__webglFramebuffer;if(N.isWebGLCubeRenderTarget&&It!==void 0&&(Wt=Wt[It]),Wt)if(W>=0&&W<=N.width-it&&Q>=0&&Q<=N.height-Y){ht.bindFramebuffer(H.FRAMEBUFFER,Wt);const oe=N.textures[Yt],fe=oe.format,ie=oe.type;if(!St.textureFormatReadable(fe))throw new Error("THREE.WebGLRenderer.readRenderTargetPixelsAsync: renderTarget is not in RGBA or implementation defined format.");if(!St.textureTypeReadable(ie))throw new Error("THREE.WebGLRenderer.readRenderTargetPixelsAsync: renderTarget is not in UnsignedByteType or implementation defined type.");const be=H.createBuffer();H.bindBuffer(H.PIXEL_PACK_BUFFER,be),H.bufferData(H.PIXEL_PACK_BUFFER,At.byteLength,H.STREAM_READ),N.textures.length>1&&H.readBuffer(H.COLOR_ATTACHMENT0+Yt),H.readPixels(W,Q,it,Y,F.convert(fe),F.convert(ie),0);const ze=O!==null?yt.get(O).__webglFramebuffer:null;ht.bindFramebuffer(H.FRAMEBUFFER,ze);const Ze=H.fenceSync(H.SYNC_GPU_COMMANDS_COMPLETE,0);return H.flush(),await yT(H,Ze,4),H.bindBuffer(H.PIXEL_PACK_BUFFER,be),H.getBufferSubData(H.PIXEL_PACK_BUFFER,0,At),H.deleteBuffer(be),H.deleteSync(Ze),At}else throw new Error("THREE.WebGLRenderer.readRenderTargetPixelsAsync: requested read bounds are out of range.")},this.copyFramebufferToTexture=function(N,W=null,Q=0){const it=Math.pow(2,-Q),Y=Math.floor(N.image.width*it),At=Math.floor(N.image.height*it),It=W!==null?W.x:0,Yt=W!==null?W.y:0;wt.setTexture2D(N,0),H.copyTexSubImage2D(H.TEXTURE_2D,Q,0,0,It,Yt,Y,At),ht.unbindTexture()};const qo=H.createFramebuffer(),Yo=H.createFramebuffer();this.copyTextureToTexture=function(N,W,Q=null,it=null,Y=0,At=null){At===null&&(Y!==0?(Eo("WebGLRenderer: copyTextureToTexture function signature has changed to support src and dst mipmap levels."),At=Y,Y=0):At=0);let It,Yt,Wt,oe,fe,ie,be,ze,Ze;const Ge=N.isCompressedTexture?N.mipmaps[At]:N.image;if(Q!==null)It=Q.max.x-Q.min.x,Yt=Q.max.y-Q.min.y,Wt=Q.isBox3?Q.max.z-Q.min.z:1,oe=Q.min.x,fe=Q.min.y,ie=Q.isBox3?Q.min.z:0;else{const Xn=Math.pow(2,-Y);It=Math.floor(Ge.width*Xn),Yt=Math.floor(Ge.height*Xn),N.isDataArrayTexture?Wt=Ge.depth:N.isData3DTexture?Wt=Math.floor(Ge.depth*Xn):Wt=1,oe=0,fe=0,ie=0}it!==null?(be=it.x,ze=it.y,Ze=it.z):(be=0,ze=0,Ze=0);const Fe=F.convert(W.format),ae=F.convert(W.type);let Ke;W.isData3DTexture?(wt.setTexture3D(W,0),Ke=H.TEXTURE_3D):W.isDataArrayTexture||W.isCompressedArrayTexture?(wt.setTexture2DArray(W,0),Ke=H.TEXTURE_2D_ARRAY):(wt.setTexture2D(W,0),Ke=H.TEXTURE_2D),H.pixelStorei(H.UNPACK_FLIP_Y_WEBGL,W.flipY),H.pixelStorei(H.UNPACK_PREMULTIPLY_ALPHA_WEBGL,W.premultiplyAlpha),H.pixelStorei(H.UNPACK_ALIGNMENT,W.unpackAlignment);const Ce=H.getParameter(H.UNPACK_ROW_LENGTH),Dn=H.getParameter(H.UNPACK_IMAGE_HEIGHT),ps=H.getParameter(H.UNPACK_SKIP_PIXELS),Tn=H.getParameter(H.UNPACK_SKIP_ROWS),Gs=H.getParameter(H.UNPACK_SKIP_IMAGES);H.pixelStorei(H.UNPACK_ROW_LENGTH,Ge.width),H.pixelStorei(H.UNPACK_IMAGE_HEIGHT,Ge.height),H.pixelStorei(H.UNPACK_SKIP_PIXELS,oe),H.pixelStorei(H.UNPACK_SKIP_ROWS,fe),H.pixelStorei(H.UNPACK_SKIP_IMAGES,ie);const qe=N.isDataArrayTexture||N.isData3DTexture,Wn=W.isDataArrayTexture||W.isData3DTexture;if(N.isDepthTexture){const Xn=yt.get(N),xn=yt.get(W),Un=yt.get(Xn.__renderTarget),Er=yt.get(xn.__renderTarget);ht.bindFramebuffer(H.READ_FRAMEBUFFER,Un.__webglFramebuffer),ht.bindFramebuffer(H.DRAW_FRAMEBUFFER,Er.__webglFramebuffer);for(let ti=0;ti<Wt;ti++)qe&&(H.framebufferTextureLayer(H.READ_FRAMEBUFFER,H.COLOR_ATTACHMENT0,yt.get(N).__webglTexture,Y,ie+ti),H.framebufferTextureLayer(H.DRAW_FRAMEBUFFER,H.COLOR_ATTACHMENT0,yt.get(W).__webglTexture,At,Ze+ti)),H.blitFramebuffer(oe,fe,It,Yt,be,ze,It,Yt,H.DEPTH_BUFFER_BIT,H.NEAREST);ht.bindFramebuffer(H.READ_FRAMEBUFFER,null),ht.bindFramebuffer(H.DRAW_FRAMEBUFFER,null)}else if(Y!==0||N.isRenderTargetTexture||yt.has(N)){const Xn=yt.get(N),xn=yt.get(W);ht.bindFramebuffer(H.READ_FRAMEBUFFER,qo),ht.bindFramebuffer(H.DRAW_FRAMEBUFFER,Yo);for(let Un=0;Un<Wt;Un++)qe?H.framebufferTextureLayer(H.READ_FRAMEBUFFER,H.COLOR_ATTACHMENT0,Xn.__webglTexture,Y,ie+Un):H.framebufferTexture2D(H.READ_FRAMEBUFFER,H.COLOR_ATTACHMENT0,H.TEXTURE_2D,Xn.__webglTexture,Y),Wn?H.framebufferTextureLayer(H.DRAW_FRAMEBUFFER,H.COLOR_ATTACHMENT0,xn.__webglTexture,At,Ze+Un):H.framebufferTexture2D(H.DRAW_FRAMEBUFFER,H.COLOR_ATTACHMENT0,H.TEXTURE_2D,xn.__webglTexture,At),Y!==0?H.blitFramebuffer(oe,fe,It,Yt,be,ze,It,Yt,H.COLOR_BUFFER_BIT,H.NEAREST):Wn?H.copyTexSubImage3D(Ke,At,be,ze,Ze+Un,oe,fe,It,Yt):H.copyTexSubImage2D(Ke,At,be,ze,oe,fe,It,Yt);ht.bindFramebuffer(H.READ_FRAMEBUFFER,null),ht.bindFramebuffer(H.DRAW_FRAMEBUFFER,null)}else Wn?N.isDataTexture||N.isData3DTexture?H.texSubImage3D(Ke,At,be,ze,Ze,It,Yt,Wt,Fe,ae,Ge.data):W.isCompressedArrayTexture?H.compressedTexSubImage3D(Ke,At,be,ze,Ze,It,Yt,Wt,Fe,Ge.data):H.texSubImage3D(Ke,At,be,ze,Ze,It,Yt,Wt,Fe,ae,Ge):N.isDataTexture?H.texSubImage2D(H.TEXTURE_2D,At,be,ze,It,Yt,Fe,ae,Ge.data):N.isCompressedTexture?H.compressedTexSubImage2D(H.TEXTURE_2D,At,be,ze,Ge.width,Ge.height,Fe,Ge.data):H.texSubImage2D(H.TEXTURE_2D,At,be,ze,It,Yt,Fe,ae,Ge);H.pixelStorei(H.UNPACK_ROW_LENGTH,Ce),H.pixelStorei(H.UNPACK_IMAGE_HEIGHT,Dn),H.pixelStorei(H.UNPACK_SKIP_PIXELS,ps),H.pixelStorei(H.UNPACK_SKIP_ROWS,Tn),H.pixelStorei(H.UNPACK_SKIP_IMAGES,Gs),At===0&&W.generateMipmaps&&H.generateMipmap(Ke),ht.unbindTexture()},this.copyTextureToTexture3D=function(N,W,Q=null,it=null,Y=0){return Eo('WebGLRenderer: copyTextureToTexture3D function has been deprecated. Use "copyTextureToTexture" instead.'),this.copyTextureToTexture(N,W,Q,it,Y)},this.initRenderTarget=function(N){yt.get(N).__webglFramebuffer===void 0&&wt.setupRenderTarget(N)},this.initTexture=function(N){N.isCubeTexture?wt.setTextureCube(N,0):N.isData3DTexture?wt.setTexture3D(N,0):N.isDataArrayTexture||N.isCompressedArrayTexture?wt.setTexture2DArray(N,0):wt.setTexture2D(N,0),ht.unbindTexture()},this.resetState=function(){D=0,P=0,O=null,ht.reset(),$.reset()},typeof __THREE_DEVTOOLS__<"u"&&__THREE_DEVTOOLS__.dispatchEvent(new CustomEvent("observe",{detail:this}))}get coordinateSystem(){return Si}get outputColorSpace(){return this._outputColorSpace}set outputColorSpace(t){this._outputColorSpace=t;const e=this.getContext();e.drawingBufferColorSpace=Re._getDrawingBufferColorSpace(t),e.unpackColorSpace=Re._getUnpackColorSpace()}}const P3=Object.freeze(Object.defineProperty({__proto__:null,ACESFilmicToneMapping:wm,AddEquation:fa,AddOperation:$y,AdditiveAnimationBlendMode:Om,AdditiveBlending:sm,AgXToneMapping:sx,AlphaFormat:Nm,AlwaysCompare:yx,AlwaysDepth:sh,AlwaysStencilFunc:lm,AmbientLight:pS,AnimationAction:bS,AnimationClip:ic,AnimationLoader:q1,AnimationMixer:xA,AnimationObjectGroup:_A,AnimationUtils:G1,ArcCurve:zx,ArrayCamera:xS,ArrowHelper:XA,AttachedBindMode:om,Audio:SS,AudioAnalyser:lA,AudioContext:og,AudioListener:aA,AudioLoader:nA,AxesHelper:qA,BackSide:Qn,BasicDepthPacking:ux,BasicShadowMap:Ly,BatchedMesh:Lx,Bone:Wm,BooleanKeyframeTrack:Sr,Box2:RA,Box3:Gn,Box3Helper:kA,BoxGeometry:xr,BoxHelper:GA,BufferAttribute:Xe,BufferGeometry:xe,BufferGeometryLoader:yS,ByteType:Rm,Cache:os,Camera:sf,CameraHelper:VA,CanvasTexture:h1,CapsuleGeometry:hf,CatmullRomCurve3:Fx,CineonToneMapping:nx,CircleGeometry:ff,ClampToEdgeWrapping:Pi,Clock:lg,Color:kt,ColorKeyframeTrack:sg,ColorManagement:Re,CompressedArrayTexture:c1,CompressedCubeTexture:u1,CompressedTexture:uf,CompressedTextureLoader:Y1,ConeGeometry:hc,ConstantAlphaFactor:Ky,ConstantColorFactor:jy,Controls:jA,CubeCamera:Ax,CubeReflectionMapping:Fs,CubeRefractionMapping:ga,CubeTexture:cc,CubeTextureLoader:j1,CubeUVReflectionMapping:Bo,CubicBezierCurve:jm,CubicBezierCurve3:Hx,CubicInterpolant:aS,CullFaceBack:im,CullFaceFront:Ny,CullFaceFrontBack:_E,CullFaceNone:Uy,Curve:Ki,CurvePath:Gx,CustomBlending:Py,CustomToneMapping:ix,CylinderGeometry:uc,Cylindrical:CA,Data3DTexture:nf,DataArrayTexture:ef,DataTexture:cs,DataTextureLoader:Z1,DataUtils:PT,DecrementStencilOp:NE,DecrementWrapStencilOp:PE,DefaultLoadingManager:lS,DepthFormat:Co,DepthStencilFormat:Ro,DepthTexture:qm,DetachedBindMode:rx,DirectionalLight:dS,DirectionalLightHelper:HA,DiscreteInterpolant:rS,DodecahedronGeometry:df,DoubleSide:as,DstAlphaFactor:ky,DstColorFactor:Xy,DynamicCopyUsage:ZE,DynamicDrawUsage:kE,DynamicReadUsage:qE,EdgesGeometry:Bx,EllipseCurve:pf,EqualCompare:mx,EqualDepth:rh,EqualStencilFunc:zE,EquirectangularReflectionMapping:kl,EquirectangularRefractionMapping:Wl,Euler:bi,EventDispatcher:hs,ExtrudeGeometry:mf,FileLoader:Vs,Float16BufferAttribute:VT,Float32BufferAttribute:Jt,FloatType:ri,Fog:rf,FogExp2:af,FramebufferTexture:l1,FrontSide:zs,Frustum:Fo,FrustumArray:cf,GLBufferAttribute:TA,GLSL1:JE,GLSL3:cm,GreaterCompare:gx,GreaterDepth:lh,GreaterEqualCompare:_x,GreaterEqualDepth:oh,GreaterEqualStencilFunc:GE,GreaterStencilFunc:HE,GridHelper:zA,Group:Mo,HalfFloatType:zo,HemisphereLight:uS,HemisphereLightHelper:BA,IcosahedronGeometry:gf,ImageBitmapLoader:eA,ImageLoader:sc,ImageUtils:Mx,IncrementStencilOp:UE,IncrementWrapStencilOp:LE,InstancedBufferAttribute:Po,InstancedBufferGeometry:_S,InstancedInterleavedBuffer:EA,InstancedMesh:Nx,Int16BufferAttribute:FT,Int32BufferAttribute:HT,Int8BufferAttribute:OT,IntType:jh,InterleavedBuffer:of,InterleavedBufferAttribute:gr,Interpolant:pc,InterpolateDiscrete:Yl,InterpolateLinear:Oh,InterpolateSmooth:Ju,InterpolationSamplingMode:tT,InterpolationSamplingType:$E,InvertStencilOp:IE,KeepStencilOp:sr,KeyframeTrack:Oi,LOD:Dx,LatheGeometry:vf,Layers:No,LessCompare:px,LessDepth:ah,LessEqualCompare:Bm,LessEqualDepth:mr,LessEqualStencilFunc:FE,LessStencilFunc:BE,Light:Ma,LightProbe:vS,Line:_a,Line3:NA,LineBasicMaterial:$n,LineCurve:Zm,LineCurve3:Vx,LineDashedMaterial:nS,LineLoop:Px,LineSegments:fs,LinearFilter:mn,LinearInterpolant:ig,LinearMipMapLinearFilter:ME,LinearMipMapNearestFilter:SE,LinearMipmapLinearFilter:rs,LinearMipmapNearestFilter:Ll,LinearSRGBColorSpace:va,LinearToneMapping:tx,LinearTransfer:Zl,Loader:oi,LoaderUtils:pm,LoadingManager:ag,LoopOnce:ox,LoopPingPong:cx,LoopRepeat:lx,MOUSE:nr,Material:kn,MaterialLoader:Ef,MathUtils:vT,Matrix2:fg,Matrix3:ve,Matrix4:pe,MaxEquation:zy,Mesh:dn,MeshBasicMaterial:xa,MeshDepthMaterial:tg,MeshDistanceMaterial:eg,MeshLambertMaterial:tS,MeshMatcapMaterial:eS,MeshNormalMaterial:$x,MeshPhongMaterial:Jx,MeshPhysicalMaterial:Kx,MeshStandardMaterial:$m,MeshToonMaterial:Qx,MinEquation:By,MirroredRepeatWrapping:ql,MixOperation:Qy,MultiplyBlending:rm,MultiplyOperation:oc,NearestFilter:Cn,NearestMipMapLinearFilter:xE,NearestMipMapNearestFilter:yE,NearestMipmapLinearFilter:xo,NearestMipmapNearestFilter:Cm,NeutralToneMapping:ax,NeverCompare:dx,NeverDepth:ih,NeverStencilFunc:OE,NoBlending:Os,NoColorSpace:Ps,NoToneMapping:ls,NormalAnimationBlendMode:tf,NormalBlending:fr,NotEqualCompare:vx,NotEqualDepth:ch,NotEqualStencilFunc:VE,NumberKeyframeTrack:ec,Object3D:Le,ObjectLoader:$1,ObjectSpaceNormalMap:fx,OctahedronGeometry:fc,OneFactor:Hy,OneMinusConstantAlphaFactor:Jy,OneMinusConstantColorFactor:Zy,OneMinusDstAlphaFactor:Wy,OneMinusDstColorFactor:qy,OneMinusSrcAlphaFactor:nh,OneMinusSrcColorFactor:Gy,OrthographicCamera:ma,PCFShadowMap:qh,PCFSoftShadowMap:Nl,PMREMGenerator:_m,Path:Hh,PerspectiveCamera:cn,Plane:Ls,PlaneGeometry:Ho,PlaneHelper:WA,PointLight:fS,PointLightHelper:IA,Points:Ix,PointsMaterial:Xm,PolarGridHelper:FA,PolyhedronGeometry:Sa,PositionalAudio:oA,PropertyBinding:Ue,PropertyMixer:MS,QuadraticBezierCurve:Km,QuadraticBezierCurve3:Jm,Quaternion:Vn,QuaternionKeyframeTrack:mc,QuaternionLinearInterpolant:oS,RED_GREEN_RGTC2_Format:Ph,RED_RGTC1_Format:Im,REVISION:Xh,RGBADepthPacking:hx,RGBAFormat:Hn,RGBAIntegerFormat:$h,RGBA_ASTC_10x10_Format:Ch,RGBA_ASTC_10x5_Format:Th,RGBA_ASTC_10x6_Format:Ah,RGBA_ASTC_10x8_Format:wh,RGBA_ASTC_12x10_Format:Rh,RGBA_ASTC_12x12_Format:Dh,RGBA_ASTC_4x4_Format:vh,RGBA_ASTC_5x4_Format:_h,RGBA_ASTC_5x5_Format:yh,RGBA_ASTC_6x5_Format:xh,RGBA_ASTC_6x6_Format:Sh,RGBA_ASTC_8x5_Format:Mh,RGBA_ASTC_8x6_Format:bh,RGBA_ASTC_8x8_Format:Eh,RGBA_BPTC_Format:zl,RGBA_ETC2_EAC_Format:gh,RGBA_PVRTC_2BPPV1_Format:dh,RGBA_PVRTC_4BPPV1_Format:fh,RGBA_S3TC_DXT1_Format:Il,RGBA_S3TC_DXT3_Format:Ol,RGBA_S3TC_DXT5_Format:Bl,RGBDepthPacking:wE,RGBFormat:Lm,RGBIntegerFormat:bE,RGB_BPTC_SIGNED_Format:Uh,RGB_BPTC_UNSIGNED_Format:Nh,RGB_ETC1_Format:ph,RGB_ETC2_Format:mh,RGB_PVRTC_2BPPV1_Format:hh,RGB_PVRTC_4BPPV1_Format:uh,RGB_S3TC_DXT1_Format:Pl,RGDepthPacking:CE,RGFormat:Pm,RGIntegerFormat:Qh,RawShaderMaterial:Zx,Ray:yr,Raycaster:ES,RectAreaLight:mS,RedFormat:Jh,RedIntegerFormat:lc,ReinhardToneMapping:ex,RenderTarget:Fm,RenderTarget3D:SA,RepeatWrapping:Xl,ReplaceStencilOp:DE,ReverseSubtractEquation:Oy,RingGeometry:_f,SIGNED_RED_GREEN_RGTC2_Format:Ih,SIGNED_RED_RGTC1_Format:Lh,SRGBColorSpace:Fn,SRGBTransfer:Ve,Scene:Gm,ShaderChunk:Me,ShaderLib:Yi,ShaderMaterial:Zi,ShadowMaterial:jx,Shape:pr,ShapeGeometry:yf,ShapePath:YA,ShapeUtils:ji,ShortType:Dm,Skeleton:lf,SkeletonHelper:PA,SkinnedMesh:Ux,Source:pa,Sphere:Rn,SphereGeometry:dc,Spherical:gm,SphericalHarmonics3:gS,SplineCurve:Qm,SpotLight:hS,SpotLightHelper:LA,Sprite:Rx,SpriteMaterial:km,SrcAlphaFactor:eh,SrcAlphaSaturateFactor:Yy,SrcColorFactor:Vy,StaticCopyUsage:jE,StaticDrawUsage:Kl,StaticReadUsage:XE,StereoCamera:iA,StreamCopyUsage:KE,StreamDrawUsage:WE,StreamReadUsage:YE,StringKeyframeTrack:Mr,SubtractEquation:Iy,SubtractiveBlending:am,TOUCH:ir,TangentSpaceNormalMap:ya,TetrahedronGeometry:xf,Texture:on,TextureLoader:cS,TextureUtils:$A,Timer:AA,TimestampQuery:QE,TorusGeometry:Sf,TorusKnotGeometry:Mf,Triangle:ai,TriangleFanDrawMode:AE,TriangleStripDrawMode:TE,TrianglesDrawMode:EE,TubeGeometry:bf,UVMapping:Yh,Uint16BufferAttribute:Hm,Uint32BufferAttribute:Vm,Uint8BufferAttribute:BT,Uint8ClampedBufferAttribute:zT,Uniform:hg,UniformsGroup:bA,UniformsLib:Bt,UniformsUtils:Tx,UnsignedByteType:Ii,UnsignedInt248Type:wo,UnsignedInt5999Type:Um,UnsignedIntType:Hs,UnsignedShort4444Type:Zh,UnsignedShort5551Type:Kh,UnsignedShortType:Ao,VSMShadowMap:qi,Vector2:dt,Vector3:I,Vector4:Ne,VectorKeyframeTrack:nc,VideoFrameTexture:o1,VideoTexture:Ox,WebGL3DRenderTarget:ET,WebGLArrayRenderTarget:bT,WebGLCoordinateSystem:Si,WebGLCubeRenderTarget:wx,WebGLRenderTarget:us,WebGLRenderer:LS,WebGLUtils:US,WebGPUCoordinateSystem:Do,WebXRController:Qu,WireframeGeometry:Yx,WrapAroundEnding:jl,ZeroCurvatureEnding:lr,ZeroFactor:Fy,ZeroSlopeEnding:cr,ZeroStencilOp:RE,createCanvasElement:Sx},Symbol.toStringTag,{value:"Module"}));var Hp={exports:{}},Vp={},Gp={exports:{}},kp={};/**
 * @license React
 * use-sync-external-store-shim.production.js
 *
 * Copyright (c) Meta Platforms, Inc. and affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */var ry;function I3(){if(ry)return kp;ry=1;var s=Am();function t(m,g){return m===g&&(m!==0||1/m===1/g)||m!==m&&g!==g}var e=typeof Object.is=="function"?Object.is:t,n=s.useState,i=s.useEffect,o=s.useLayoutEffect,l=s.useDebugValue;function c(m,g){var v=g(),x=n({inst:{value:v,getSnapshot:g}}),b=x[0].inst,S=x[1];return o(function(){b.value=v,b.getSnapshot=g,h(b)&&S({inst:b})},[m,v,g]),i(function(){return h(b)&&S({inst:b}),m(function(){h(b)&&S({inst:b})})},[m]),l(v),v}function h(m){var g=m.getSnapshot;m=m.value;try{var v=g();return!e(m,v)}catch{return!0}}function f(m,g){return g()}var p=typeof window>"u"||typeof window.document>"u"||typeof window.document.createElement>"u"?f:c;return kp.useSyncExternalStore=s.useSyncExternalStore!==void 0?s.useSyncExternalStore:p,kp}var oy;function O3(){return oy||(oy=1,Gp.exports=I3()),Gp.exports}/**
 * @license React
 * use-sync-external-store-shim/with-selector.production.js
 *
 * Copyright (c) Meta Platforms, Inc. and affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */var ly;function B3(){if(ly)return Vp;ly=1;var s=Am(),t=O3();function e(f,p){return f===p&&(f!==0||1/f===1/p)||f!==f&&p!==p}var n=typeof Object.is=="function"?Object.is:e,i=t.useSyncExternalStore,o=s.useRef,l=s.useEffect,c=s.useMemo,h=s.useDebugValue;return Vp.useSyncExternalStoreWithSelector=function(f,p,m,g,v){var x=o(null);if(x.current===null){var b={hasValue:!1,value:null};x.current=b}else b=x.current;x=c(function(){function _(D){if(!E){if(E=!0,A=D,D=g(D),v!==void 0&&b.hasValue){var P=b.value;if(v(P,D))return T=P}return T=D}if(P=T,n(A,D))return P;var O=g(D);return v!==void 0&&v(P,O)?(A=D,P):(A=D,T=O)}var E=!1,A,T,U=m===void 0?null:m;return[function(){return _(p())},U===null?void 0:function(){return _(U())}]},[p,m,g,v]);var S=i(f,x[0],x[1]);return l(function(){b.hasValue=!0,b.value=S},[S]),h(S),S},Vp}var cy;function z3(){return cy||(cy=1,Hp.exports=B3()),Hp.exports}var F3=z3();const H3=Cy(F3),uy=s=>{let t;const e=new Set,n=(f,p)=>{const m=typeof f=="function"?f(t):f;if(!Object.is(m,t)){const g=t;t=p??(typeof m!="object"||m===null)?m:Object.assign({},t,m),e.forEach(v=>v(t,g))}},i=()=>t,c={setState:n,getState:i,getInitialState:()=>h,subscribe:f=>(e.add(f),()=>e.delete(f))},h=t=s(n,i,c);return c},V3=(s=>s?uy(s):uy),{useSyncExternalStoreWithSelector:G3}=H3,k3=s=>s;function W3(s,t=k3,e){const n=G3(s.subscribe,s.getState,s.getInitialState,t,e);return sE.useDebugValue(n),n}const hy=(s,t)=>{const e=V3(s),n=(i,o=t)=>W3(e,i,o);return Object.assign(n,e),n},X3=((s,t)=>s?hy(s,t):hy),q3=s=>typeof s=="object"&&typeof s.then=="function",hr=[];function PS(s,t,e=(n,i)=>n===i){if(s===t)return!0;if(!s||!t)return!1;const n=s.length;if(t.length!==n)return!1;for(let i=0;i<n;i++)if(!e(s[i],t[i]))return!1;return!0}function IS(s,t=null,e=!1,n={}){t===null&&(t=[s]);for(const o of hr)if(PS(t,o.keys,o.equal)){if(e)return;if(Object.prototype.hasOwnProperty.call(o,"error"))throw o.error;if(Object.prototype.hasOwnProperty.call(o,"response"))return n.lifespan&&n.lifespan>0&&(o.timeout&&clearTimeout(o.timeout),o.timeout=setTimeout(o.remove,n.lifespan)),o.response;if(!e)throw o.promise}const i={keys:t,equal:n.equal,remove:()=>{const o=hr.indexOf(i);o!==-1&&hr.splice(o,1)},promise:(q3(s)?s:s(...t)).then(o=>{i.response=o,n.lifespan&&n.lifespan>0&&(i.timeout=setTimeout(i.remove,n.lifespan))}).catch(o=>i.error=o)};if(hr.push(i),!e)throw i.promise}const Y3=(s,t,e)=>IS(s,t,!1,e),j3=(s,t,e)=>void IS(s,t,!0,e),Z3=s=>{if(s===void 0||s.length===0)hr.splice(0,hr.length);else{const t=hr.find(e=>PS(s,e.keys,e.equal));t&&t.remove()}};var Wp={exports:{}},Xp={exports:{}},qp={exports:{}},Yp={};/**
 * @license React
 * scheduler.production.js
 *
 * Copyright (c) Meta Platforms, Inc. and affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */var fy;function K3(){return fy||(fy=1,(function(s){function t(k,et){var q=k.length;k.push(et);t:for(;0<q;){var ct=q-1>>>1,vt=k[ct];if(0<i(vt,et))k[ct]=et,k[q]=vt,q=ct;else break t}}function e(k){return k.length===0?null:k[0]}function n(k){if(k.length===0)return null;var et=k[0],q=k.pop();if(q!==et){k[0]=q;t:for(var ct=0,vt=k.length,xt=vt>>>1;ct<xt;){var Ot=2*(ct+1)-1,ne=k[Ot],jt=Ot+1,at=k[jt];if(0>i(ne,q))jt<vt&&0>i(at,ne)?(k[ct]=at,k[jt]=q,ct=jt):(k[ct]=ne,k[Ot]=q,ct=Ot);else if(jt<vt&&0>i(at,q))k[ct]=at,k[jt]=q,ct=jt;else break t}}return et}function i(k,et){var q=k.sortIndex-et.sortIndex;return q!==0?q:k.id-et.id}if(s.unstable_now=void 0,typeof performance=="object"&&typeof performance.now=="function"){var o=performance;s.unstable_now=function(){return o.now()}}else{var l=Date,c=l.now();s.unstable_now=function(){return l.now()-c}}var h=[],f=[],p=1,m=null,g=3,v=!1,x=!1,b=!1,S=typeof setTimeout=="function"?setTimeout:null,_=typeof clearTimeout=="function"?clearTimeout:null,E=typeof setImmediate<"u"?setImmediate:null;function A(k){for(var et=e(f);et!==null;){if(et.callback===null)n(f);else if(et.startTime<=k)n(f),et.sortIndex=et.expirationTime,t(h,et);else break;et=e(f)}}function T(k){if(b=!1,A(k),!x)if(e(h)!==null)x=!0,Z();else{var et=e(f);et!==null&&ot(T,et.startTime-k)}}var U=!1,D=-1,P=5,O=-1;function C(){return!(s.unstable_now()-O<P)}function w(){if(U){var k=s.unstable_now();O=k;var et=!0;try{t:{x=!1,b&&(b=!1,_(D),D=-1),v=!0;var q=g;try{e:{for(A(k),m=e(h);m!==null&&!(m.expirationTime>k&&C());){var ct=m.callback;if(typeof ct=="function"){m.callback=null,g=m.priorityLevel;var vt=ct(m.expirationTime<=k);if(k=s.unstable_now(),typeof vt=="function"){m.callback=vt,A(k),et=!0;break e}m===e(h)&&n(h),A(k)}else n(h);m=e(h)}if(m!==null)et=!0;else{var xt=e(f);xt!==null&&ot(T,xt.startTime-k),et=!1}}break t}finally{m=null,g=q,v=!1}et=void 0}}finally{et?B():U=!1}}}var B;if(typeof E=="function")B=function(){E(w)};else if(typeof MessageChannel<"u"){var tt=new MessageChannel,X=tt.port2;tt.port1.onmessage=w,B=function(){X.postMessage(null)}}else B=function(){S(w,0)};function Z(){U||(U=!0,B())}function ot(k,et){D=S(function(){k(s.unstable_now())},et)}s.unstable_IdlePriority=5,s.unstable_ImmediatePriority=1,s.unstable_LowPriority=4,s.unstable_NormalPriority=3,s.unstable_Profiling=null,s.unstable_UserBlockingPriority=2,s.unstable_cancelCallback=function(k){k.callback=null},s.unstable_continueExecution=function(){x||v||(x=!0,Z())},s.unstable_forceFrameRate=function(k){0>k||125<k?console.error("forceFrameRate takes a positive int between 0 and 125, forcing frame rates higher than 125 fps is not supported"):P=0<k?Math.floor(1e3/k):5},s.unstable_getCurrentPriorityLevel=function(){return g},s.unstable_getFirstCallbackNode=function(){return e(h)},s.unstable_next=function(k){switch(g){case 1:case 2:case 3:var et=3;break;default:et=g}var q=g;g=et;try{return k()}finally{g=q}},s.unstable_pauseExecution=function(){},s.unstable_requestPaint=function(){},s.unstable_runWithPriority=function(k,et){switch(k){case 1:case 2:case 3:case 4:case 5:break;default:k=3}var q=g;g=k;try{return et()}finally{g=q}},s.unstable_scheduleCallback=function(k,et,q){var ct=s.unstable_now();switch(typeof q=="object"&&q!==null?(q=q.delay,q=typeof q=="number"&&0<q?ct+q:ct):q=ct,k){case 1:var vt=-1;break;case 2:vt=250;break;case 5:vt=1073741823;break;case 4:vt=1e4;break;default:vt=5e3}return vt=q+vt,k={id:p++,callback:et,priorityLevel:k,startTime:q,expirationTime:vt,sortIndex:-1},q>ct?(k.sortIndex=q,t(f,k),e(h)===null&&k===e(f)&&(b?(_(D),D=-1):b=!0,ot(T,q-ct))):(k.sortIndex=vt,t(h,k),x||v||(x=!0,Z())),k},s.unstable_shouldYield=C,s.unstable_wrapCallback=function(k){var et=g;return function(){var q=g;g=et;try{return k.apply(this,arguments)}finally{g=q}}}})(Yp)),Yp}var dy;function OS(){return dy||(dy=1,qp.exports=K3()),qp.exports}/**
 * @license React
 * react-reconciler.production.js
 *
 * Copyright (c) Meta Platforms, Inc. and affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */var py;function J3(){return py||(py=1,(function(s){s.exports=function(t){function e(a,r,u,d){return new xM(a,r,u,d)}function n(){}function i(a){var r="https://react.dev/errors/"+a;if(1<arguments.length){r+="?args[]="+encodeURIComponent(arguments[1]);for(var u=2;u<arguments.length;u++)r+="&args[]="+encodeURIComponent(arguments[u])}return"Minified React error #"+a+"; visit "+r+" for the full message or use the non-minified dev environment for full errors and additional helpful warnings."}function o(a){return a===null||typeof a!="object"?null:(a=q0&&a[q0]||a["@@iterator"],typeof a=="function"?a:null)}function l(a){if(a==null)return null;if(typeof a=="function")return a.$$typeof===AM?null:a.displayName||a.name||null;if(typeof a=="string")return a;switch(a){case Dr:return"Fragment";case Rr:return"Portal";case gd:return"Profiler";case k0:return"StrictMode";case _d:return"Suspense";case yd:return"SuspenseList"}if(typeof a=="object")switch(a.$$typeof){case js:return(a.displayName||"Context")+".Provider";case W0:return(a._context.displayName||"Context")+".Consumer";case vd:var r=a.render;return a=a.displayName,a||(a=r.displayName||r.name||"",a=a!==""?"ForwardRef("+a+")":"ForwardRef"),a;case xd:return r=a.displayName||null,r!==null?r:l(a.type)||"Memo";case Zs:r=a._payload,a=a._init;try{return l(a(r))}catch{}}return null}function c(a){if(Sd===void 0)try{throw Error()}catch(u){var r=u.stack.trim().match(/\n( *(at )?)/);Sd=r&&r[1]||"",Y0=-1<u.stack.indexOf(`
    at`)?" (<anonymous>)":-1<u.stack.indexOf("@")?"@unknown:0:0":""}return`
`+Sd+a+Y0}function h(a,r){if(!a||Md)return"";Md=!0;var u=Error.prepareStackTrace;Error.prepareStackTrace=void 0;try{var d={DetermineComponentFrameRoot:function(){try{if(r){var Ht=function(){throw Error()};if(Object.defineProperty(Ht.prototype,"props",{set:function(){throw Error()}}),typeof Reflect=="object"&&Reflect.construct){try{Reflect.construct(Ht,[])}catch(_e){var Gt=_e}Reflect.construct(a,[],Ht)}else{try{Ht.call()}catch(_e){Gt=_e}a.call(Ht.prototype)}}else{try{throw Error()}catch(_e){Gt=_e}(Ht=a())&&typeof Ht.catch=="function"&&Ht.catch(function(){})}}catch(_e){if(_e&&Gt&&typeof _e.stack=="string")return[_e.stack,Gt.stack]}return[null,null]}};d.DetermineComponentFrameRoot.displayName="DetermineComponentFrameRoot";var y=Object.getOwnPropertyDescriptor(d.DetermineComponentFrameRoot,"name");y&&y.configurable&&Object.defineProperty(d.DetermineComponentFrameRoot,"name",{value:"DetermineComponentFrameRoot"});var M=d.DetermineComponentFrameRoot(),L=M[0],G=M[1];if(L&&G){var K=L.split(`
`),ft=G.split(`
`);for(y=d=0;d<K.length&&!K[d].includes("DetermineComponentFrameRoot");)d++;for(;y<ft.length&&!ft[y].includes("DetermineComponentFrameRoot");)y++;if(d===K.length||y===ft.length)for(d=K.length-1,y=ft.length-1;1<=d&&0<=y&&K[d]!==ft[y];)y--;for(;1<=d&&0<=y;d--,y--)if(K[d]!==ft[y]){if(d!==1||y!==1)do if(d--,y--,0>y||K[d]!==ft[y]){var Ut=`
`+K[d].replace(" at new "," at ");return a.displayName&&Ut.includes("<anonymous>")&&(Ut=Ut.replace("<anonymous>",a.displayName)),Ut}while(1<=d&&0<=y);break}}}finally{Md=!1,Error.prepareStackTrace=u}return(u=a?a.displayName||a.name:"")?c(u):""}function f(a){switch(a.tag){case 26:case 27:case 5:return c(a.type);case 16:return c("Lazy");case 13:return c("Suspense");case 19:return c("SuspenseList");case 0:case 15:return a=h(a.type,!1),a;case 11:return a=h(a.type.render,!1),a;case 1:return a=h(a.type,!0),a;default:return""}}function p(a){try{var r="";do r+=f(a),a=a.return;while(a);return r}catch(u){return`
Error generating stack: `+u.message+`
`+u.stack}}function m(a){var r=a,u=a;if(a.alternate)for(;r.return;)r=r.return;else{a=r;do r=a,(r.flags&4098)!==0&&(u=r.return),a=r.return;while(a)}return r.tag===3?u:null}function g(a){if(m(a)!==a)throw Error(i(188))}function v(a){var r=a.alternate;if(!r){if(r=m(a),r===null)throw Error(i(188));return r!==a?null:a}for(var u=a,d=r;;){var y=u.return;if(y===null)break;var M=y.alternate;if(M===null){if(d=y.return,d!==null){u=d;continue}break}if(y.child===M.child){for(M=y.child;M;){if(M===u)return g(y),a;if(M===d)return g(y),r;M=M.sibling}throw Error(i(188))}if(u.return!==d.return)u=y,d=M;else{for(var L=!1,G=y.child;G;){if(G===u){L=!0,u=y,d=M;break}if(G===d){L=!0,d=y,u=M;break}G=G.sibling}if(!L){for(G=M.child;G;){if(G===u){L=!0,u=M,d=y;break}if(G===d){L=!0,d=M,u=y;break}G=G.sibling}if(!L)throw Error(i(189))}}if(u.alternate!==d)throw Error(i(190))}if(u.tag!==3)throw Error(i(188));return u.stateNode.current===u?a:r}function x(a){var r=a.tag;if(r===5||r===26||r===27||r===6)return a;for(a=a.child;a!==null;){if(r=x(a),r!==null)return r;a=a.sibling}return null}function b(a){var r=a.tag;if(r===5||r===26||r===27||r===6)return a;for(a=a.child;a!==null;){if(a.tag!==4&&(r=b(a),r!==null))return r;a=a.sibling}return null}function S(a){return{current:a}}function _(a){0>Nr||(a.current=Cd[Nr],Cd[Nr]=null,Nr--)}function E(a,r){Nr++,Cd[Nr]=a.current,a.current=r}function A(a){return a>>>=0,a===0?32:31-(Vb(a)/Gb|0)|0}function T(a){var r=a&42;if(r!==0)return r;switch(a&-a){case 1:return 1;case 2:return 2;case 4:return 4;case 8:return 8;case 16:return 16;case 32:return 32;case 64:return 64;case 128:case 256:case 512:case 1024:case 2048:case 4096:case 8192:case 16384:case 32768:case 65536:case 131072:case 262144:case 524288:case 1048576:case 2097152:return a&4194176;case 4194304:case 8388608:case 16777216:case 33554432:return a&62914560;case 67108864:return 67108864;case 134217728:return 134217728;case 268435456:return 268435456;case 536870912:return 536870912;case 1073741824:return 0;default:return a}}function U(a,r){var u=a.pendingLanes;if(u===0)return 0;var d=0,y=a.suspendedLanes,M=a.pingedLanes,L=a.warmLanes;a=a.finishedLanes!==0;var G=u&134217727;return G!==0?(u=G&~y,u!==0?d=T(u):(M&=G,M!==0?d=T(M):a||(L=G&~L,L!==0&&(d=T(L))))):(G=u&~y,G!==0?d=T(G):M!==0?d=T(M):a||(L=u&~L,L!==0&&(d=T(L)))),d===0?0:r!==0&&r!==d&&(r&y)===0&&(y=d&-d,L=r&-r,y>=L||y===32&&(L&4194176)!==0)?r:d}function D(a,r){return(a.pendingLanes&~(a.suspendedLanes&~a.pingedLanes)&r)===0}function P(a,r){switch(a){case 1:case 2:case 4:case 8:return r+250;case 16:case 32:case 64:case 128:case 256:case 512:case 1024:case 2048:case 4096:case 8192:case 16384:case 32768:case 65536:case 131072:case 262144:case 524288:case 1048576:case 2097152:return r+5e3;case 4194304:case 8388608:case 16777216:case 33554432:return-1;case 67108864:case 134217728:case 268435456:case 536870912:case 1073741824:return-1;default:return-1}}function O(){var a=Pc;return Pc<<=1,(Pc&4194176)===0&&(Pc=128),a}function C(){var a=Ic;return Ic<<=1,(Ic&62914560)===0&&(Ic=4194304),a}function w(a){for(var r=[],u=0;31>u;u++)r.push(a);return r}function B(a,r){a.pendingLanes|=r,r!==268435456&&(a.suspendedLanes=0,a.pingedLanes=0,a.warmLanes=0)}function tt(a,r,u,d,y,M){var L=a.pendingLanes;a.pendingLanes=u,a.suspendedLanes=0,a.pingedLanes=0,a.warmLanes=0,a.expiredLanes&=u,a.entangledLanes&=u,a.errorRecoveryDisabledLanes&=u,a.shellSuspendCounter=0;var G=a.entanglements,K=a.expirationTimes,ft=a.hiddenUpdates;for(u=L&~u;0<u;){var Ut=31-pi(u),Ht=1<<Ut;G[Ut]=0,K[Ut]=-1;var Gt=ft[Ut];if(Gt!==null)for(ft[Ut]=null,Ut=0;Ut<Gt.length;Ut++){var _e=Gt[Ut];_e!==null&&(_e.lane&=-536870913)}u&=~Ht}d!==0&&X(a,d,0),M!==0&&y===0&&a.tag!==0&&(a.suspendedLanes|=M&~(L&~r))}function X(a,r,u){a.pendingLanes|=r,a.suspendedLanes&=~r;var d=31-pi(r);a.entangledLanes|=r,a.entanglements[d]=a.entanglements[d]|1073741824|u&4194218}function Z(a,r){var u=a.entangledLanes|=r;for(a=a.entanglements;u;){var d=31-pi(u),y=1<<d;y&r|a[d]&r&&(a[d]|=r),u&=~y}}function ot(a){return a&=-a,2<a?8<a?(a&134217727)!==0?32:268435456:8:2}function k(a){if(mi&&typeof mi.onCommitFiberRoot=="function")try{mi.onCommitFiberRoot(al,a,void 0,(a.current.flags&128)===128)}catch{}}function et(a){if(typeof Yb=="function"&&jb(a),mi&&typeof mi.setStrictMode=="function")try{mi.setStrictMode(al,a)}catch{}}function q(a,r){return a===r&&(a!==0||1/a===1/r)||a!==a&&r!==r}function ct(a,r){if(typeof a=="object"&&a!==null){var u=yv.get(a);return u!==void 0?u:(r={value:a,source:r,stack:p(r)},yv.set(a,r),r)}return{value:a,source:r,stack:p(r)}}function vt(a,r){Pr[Ir++]=zc,Pr[Ir++]=Bc,Bc=a,zc=r}function xt(a,r,u){wi[Ci++]=xs,wi[Ci++]=Ss,wi[Ci++]=Na,Na=a;var d=xs;a=Ss;var y=32-pi(d)-1;d&=~(1<<y),u+=1;var M=32-pi(r)+y;if(30<M){var L=y-y%5;M=(d&(1<<L)-1).toString(32),d>>=L,y-=L,xs=1<<32-pi(r)+y|u<<y|d,Ss=M+a}else xs=1<<M|u<<y|d,Ss=a}function Ot(a){a.return!==null&&(vt(a,1),xt(a,1,0))}function ne(a){for(;a===Bc;)Bc=Pr[--Ir],Pr[Ir]=null,zc=Pr[--Ir],Pr[Ir]=null;for(;a===Na;)Na=wi[--Ci],wi[Ci]=null,Ss=wi[--Ci],wi[Ci]=null,xs=wi[--Ci],wi[Ci]=null}function jt(a,r){E(Js,r),E(rl,a),E(wn,null),a=RM(r),_(wn),E(wn,a)}function at(){_(wn),_(rl),_(Js)}function Lt(a){a.memoizedState!==null&&E(Fc,a);var r=wn.current,u=DM(r,a.type);r!==u&&(E(rl,a),E(wn,u))}function Rt(a){rl.current===a&&(_(wn),_(rl)),Fc.current===a&&(_(Fc),ys?Ua._currentValue=Ur:Ua._currentValue2=Ur)}function Qt(a){var r=Error(i(418,""));throw H(ct(r,a)),Ud}function Zt(a,r){if(!Ti)throw Error(i(175));bb(a.stateNode,a.type,a.memoizedProps,r,a)||Qt(a)}function re(a){for(Yn=a.return;Yn;)switch(Yn.tag){case 3:case 27:Ji=!0;return;case 5:case 13:Ji=!1;return;default:Yn=Yn.return}}function Be(a){if(!Ti||a!==Yn)return!1;if(!Pe)return re(a),Pe=!0,!1;var r=!1;if(Pn?a.tag!==3&&a.tag!==27&&(a.tag!==5||lv(a.type)&&!Lc(a.type,a.memoizedProps))&&(r=!0):a.tag!==3&&(a.tag!==5||lv(a.type)&&!Lc(a.type,a.memoizedProps))&&(r=!0),r&&In&&Qt(a),re(a),a.tag===13){if(!Ti)throw Error(i(316));if(a=a.memoizedState,a=a!==null?a.dehydrated:null,!a)throw Error(i(317));In=Ab(a)}else In=Yn?rv(a.stateNode):null;return!0}function le(){Ti&&(In=Yn=null,Pe=!1)}function H(a){Vi===null?Vi=[a]:Vi.push(a)}function mt(){for(var a=Or,r=Nd=Or=0;r<a;){var u=Ri[r];Ri[r++]=null;var d=Ri[r];Ri[r++]=null;var y=Ri[r];Ri[r++]=null;var M=Ri[r];if(Ri[r++]=null,d!==null&&y!==null){var L=d.pending;L===null?y.next=y:(y.next=L.next,L.next=y),d.pending=y}M!==0&&Nt(u,y,M)}}function ut(a,r,u,d){Ri[Or++]=a,Ri[Or++]=r,Ri[Or++]=u,Ri[Or++]=d,Nd|=d,a.lanes|=d,a=a.alternate,a!==null&&(a.lanes|=d)}function St(a,r,u,d){return ut(a,r,u,d),yt(a)}function ht(a,r){return ut(a,null,null,r),yt(a)}function Nt(a,r,u){a.lanes|=u;var d=a.alternate;d!==null&&(d.lanes|=u);for(var y=!1,M=a.return;M!==null;)M.childLanes|=u,d=M.alternate,d!==null&&(d.childLanes|=u),M.tag===22&&(a=M.stateNode,a===null||a._visibility&1||(y=!0)),a=M,M=M.return;y&&r!==null&&a.tag===3&&(M=a.stateNode,y=31-pi(u),M=M.hiddenUpdates,a=M[y],a===null?M[y]=[r]:a.push(r),r.lane=u|536870912)}function yt(a){if(50<ml)throw ml=0,jd=null,Error(i(185));for(var r=a.return;r!==null;)a=r,r=a.return;return a.tag===3?a.stateNode:null}function wt(a){a!==Br&&a.next===null&&(Br===null?Hc=Br=a:Br=Br.next=a),Vc=!0,Ld||(Ld=!0,rt(he))}function ce(a,r){if(!Pd&&Vc){Pd=!0;do for(var u=!1,d=Hc;d!==null;){if(a!==0){var y=d.pendingLanes;if(y===0)var M=0;else{var L=d.suspendedLanes,G=d.pingedLanes;M=(1<<31-pi(42|a)+1)-1,M&=y&~(L&~G),M=M&201326677?M&201326677|1:M?M|2:0}M!==0&&(u=!0,J(d,M))}else M=De,M=U(d,d===Ye?M:0),(M&3)===0||D(d,M)||(u=!0,J(d,M));d=d.next}while(u);Pd=!1}}function he(){Vc=Ld=!1;var a=0;zr!==0&&(zM()&&(a=zr),zr=0);for(var r=Hi(),u=null,d=Hc;d!==null;){var y=d.next,M=z(d,r);M===0?(d.next=null,u===null?Hc=y:u.next=y,y===null&&(Br=u)):(u=d,(a!==0||(M&3)!==0)&&(Vc=!0)),d=y}ce(a)}function z(a,r){for(var u=a.suspendedLanes,d=a.pingedLanes,y=a.expirationTimes,M=a.pendingLanes&-62914561;0<M;){var L=31-pi(M),G=1<<L,K=y[L];K===-1?((G&u)===0||(G&d)!==0)&&(y[L]=P(G,r)):K<=r&&(a.expiredLanes|=G),M&=~G}if(r=Ye,u=De,u=U(a,a===r?u:0),d=a.callbackNode,u===0||a===r&&je===2||a.cancelPendingCommit!==null)return d!==null&&d!==null&&Rd(d),a.callbackNode=null,a.callbackPriority=0;if((u&3)===0||D(a,u)){if(r=u&-u,r===a.callbackPriority)return r;switch(d!==null&&Rd(d),ot(u)){case 2:case 8:u=Xb;break;case 32:u=Dd;break;case 268435456:u=qb;break;default:u=Dd}return d=R.bind(null,a),u=Oc(u,d),a.callbackPriority=r,a.callbackNode=u,r}return d!==null&&d!==null&&Rd(d),a.callbackPriority=2,a.callbackNode=null,2}function R(a,r){var u=a.callbackNode;if(Ca()&&a.callbackNode!==u)return null;var d=De;return d=U(a,a===Ye?d:0),d===0?null:(M0(a,d,r),z(a,Hi()),a.callbackNode!=null&&a.callbackNode===u?R.bind(null,a):null)}function J(a,r){if(Ca())return null;M0(a,r,!0)}function rt(a){WM?XM(function(){(We&6)!==0?Oc(_v,a):a()}):Oc(_v,a)}function _t(){return zr===0&&(zr=O()),zr}function lt(a,r){if(ol===null){var u=ol=[];Id=0,Fr=_t(),Hr={status:"pending",value:void 0,then:function(d){u.push(d)}}}return Id++,r.then(Kt,Kt),r}function Kt(){if(--Id===0&&ol!==null){Hr!==null&&(Hr.status="fulfilled");var a=ol;ol=null,Fr=0,Hr=null;for(var r=0;r<a.length;r++)(0,a[r])()}}function Dt(a,r){var u=[],d={status:"pending",value:null,reason:null,then:function(y){u.push(y)}};return a.then(function(){d.status="fulfilled",d.value=r;for(var y=0;y<u.length;y++)(0,u[y])(r)},function(y){for(d.status="rejected",d.reason=y,y=0;y<u.length;y++)(0,u[y])(void 0)}),d}function Xt(a){a.updateQueue={baseState:a.memoizedState,firstBaseUpdate:null,lastBaseUpdate:null,shared:{pending:null,lanes:0,hiddenCallbacks:null},callbacks:null}}function qt(a,r){a=a.updateQueue,r.updateQueue===a&&(r.updateQueue={baseState:a.baseState,firstBaseUpdate:a.firstBaseUpdate,lastBaseUpdate:a.lastBaseUpdate,shared:a.shared,callbacks:null})}function Mt(a){return{lane:a,tag:0,payload:null,callback:null,next:null}}function Pt(a,r,u){var d=a.updateQueue;if(d===null)return null;if(d=d.shared,(We&2)!==0){var y=d.pending;return y===null?r.next=r:(r.next=y.next,y.next=r),d.pending=r,r=yt(a),Nt(a,null,u),r}return ut(a,d,r,u),yt(a)}function te(a,r,u){if(r=r.updateQueue,r!==null&&(r=r.shared,(u&4194176)!==0)){var d=r.lanes;d&=a.pendingLanes,u|=d,r.lanes=u,Z(a,u)}}function F(a,r){var u=a.updateQueue,d=a.alternate;if(d!==null&&(d=d.updateQueue,u===d)){var y=null,M=null;if(u=u.firstBaseUpdate,u!==null){do{var L={lane:u.lane,tag:u.tag,payload:u.payload,callback:null,next:null};M===null?y=M=L:M=M.next=L,u=u.next}while(u!==null);M===null?y=M=r:M=M.next=r}else y=M=r;u={baseState:d.baseState,firstBaseUpdate:y,lastBaseUpdate:M,shared:d.shared,callbacks:d.callbacks},a.updateQueue=u;return}a=u.lastBaseUpdate,a===null?u.firstBaseUpdate=r:a.next=r,u.lastBaseUpdate=r}function $(){if(Od){var a=Hr;if(a!==null)throw a}}function Et(a,r,u,d){Od=!1;var y=a.updateQueue;Qs=!1;var M=y.firstBaseUpdate,L=y.lastBaseUpdate,G=y.shared.pending;if(G!==null){y.shared.pending=null;var K=G,ft=K.next;K.next=null,L===null?M=ft:L.next=ft,L=K;var Ut=a.alternate;Ut!==null&&(Ut=Ut.updateQueue,G=Ut.lastBaseUpdate,G!==L&&(G===null?Ut.firstBaseUpdate=ft:G.next=ft,Ut.lastBaseUpdate=K))}if(M!==null){var Ht=y.baseState;L=0,Ut=ft=K=null,G=M;do{var Gt=G.lane&-536870913,_e=Gt!==G.lane;if(_e?(De&Gt)===Gt:(d&Gt)===Gt){Gt!==0&&Gt===Fr&&(Od=!0),Ut!==null&&(Ut=Ut.next={lane:0,tag:G.tag,payload:G.payload,callback:null,next:null});t:{var Ni=a,gl=G;Gt=r;var Va=u;switch(gl.tag){case 1:if(Ni=gl.payload,typeof Ni=="function"){Ht=Ni.call(Va,Ht,Gt);break t}Ht=Ni;break t;case 3:Ni.flags=Ni.flags&-65537|128;case 0:if(Ni=gl.payload,Gt=typeof Ni=="function"?Ni.call(Va,Ht,Gt):Ni,Gt==null)break t;Ht=md({},Ht,Gt);break t;case 2:Qs=!0}}Gt=G.callback,Gt!==null&&(a.flags|=64,_e&&(a.flags|=8192),_e=y.callbacks,_e===null?y.callbacks=[Gt]:_e.push(Gt))}else _e={lane:Gt,tag:G.tag,payload:G.payload,callback:G.callback,next:null},Ut===null?(ft=Ut=_e,K=Ht):Ut=Ut.next=_e,L|=Gt;if(G=G.next,G===null){if(G=y.shared.pending,G===null)break;_e=G,G=_e.next,_e.next=null,y.lastBaseUpdate=_e,y.shared.pending=null}}while(!0);Ut===null&&(K=Ht),y.baseState=K,y.firstBaseUpdate=ft,y.lastBaseUpdate=Ut,M===null&&(y.shared.lanes=0),ea|=L,a.lanes=L,a.memoizedState=Ht}}function V(a,r){if(typeof a!="function")throw Error(i(191,a));a.call(r)}function gt(a,r){var u=a.callbacks;if(u!==null)for(a.callbacks=null,a=0;a<u.length;a++)V(u[a],r)}function Tt(a,r){if(gi(a,r))return!0;if(typeof a!="object"||a===null||typeof r!="object"||r===null)return!1;var u=Object.keys(a),d=Object.keys(r);if(u.length!==d.length)return!1;for(d=0;d<u.length;d++){var y=u[d];if(!Zb.call(r,y)||!gi(a[y],r[y]))return!1}return!0}function zt(a){return a=a.status,a==="fulfilled"||a==="rejected"}function bt(){}function pt(a,r,u){switch(u=a[u],u===void 0?a.push(r):u!==r&&(r.then(bt,bt),r=u),r.status){case"fulfilled":return r.value;case"rejected":throw a=r.reason,a===ll?Error(i(483)):a;default:if(typeof r.status=="string")r.then(bt,bt);else{if(a=Ye,a!==null&&100<a.shellSuspendCounter)throw Error(i(482));a=r,a.status="pending",a.then(function(d){if(r.status==="pending"){var y=r;y.status="fulfilled",y.value=d}},function(d){if(r.status==="pending"){var y=r;y.status="rejected",y.reason=d}})}switch(r.status){case"fulfilled":return r.value;case"rejected":throw a=r.reason,a===ll?Error(i(483)):a}throw Vr=r,ll}}function Ft(){if(Vr===null)throw Error(i(459));var a=Vr;return Vr=null,a}function ee(a){var r=cl;return cl+=1,Gr===null&&(Gr=[]),pt(Gr,a,r)}function Te(a,r){r=r.props.ref,a.ref=r!==void 0?r:null}function Se(a,r){throw r.$$typeof===bM?Error(i(525)):(a=Object.prototype.toString.call(r),Error(i(31,a==="[object Object]"?"object with keys {"+Object.keys(r).join(", ")+"}":a)))}function _n(a){var r=a._init;return r(a._payload)}function yn(a){function r(nt,j){if(a){var st=nt.deletions;st===null?(nt.deletions=[j],nt.flags|=16):st.push(j)}}function u(nt,j){if(!a)return null;for(;j!==null;)r(nt,j),j=j.sibling;return null}function d(nt){for(var j=new Map;nt!==null;)nt.key!==null?j.set(nt.key,nt):j.set(nt.index,nt),nt=nt.sibling;return j}function y(nt,j){return nt=Ys(nt,j),nt.index=0,nt.sibling=null,nt}function M(nt,j,st){return nt.index=st,a?(st=nt.alternate,st!==null?(st=st.index,st<j?(nt.flags|=33554434,j):st):(nt.flags|=33554434,j)):(nt.flags|=1048576,j)}function L(nt){return a&&nt.alternate===null&&(nt.flags|=33554434),nt}function G(nt,j,st,Ct){return j===null||j.tag!==6?(j=fd(st,nt.mode,Ct),j.return=nt,j):(j=y(j,st),j.return=nt,j)}function K(nt,j,st,Ct){var se=st.type;return se===Dr?Ut(nt,j,st.props.children,Ct,st.key):j!==null&&(j.elementType===se||typeof se=="object"&&se!==null&&se.$$typeof===Zs&&_n(se)===j.type)?(j=y(j,st.props),Te(j,st),j.return=nt,j):(j=Dc(st.type,st.key,st.props,null,nt.mode,Ct),Te(j,st),j.return=nt,j)}function ft(nt,j,st,Ct){return j===null||j.tag!==4||j.stateNode.containerInfo!==st.containerInfo||j.stateNode.implementation!==st.implementation?(j=dd(st,nt.mode,Ct),j.return=nt,j):(j=y(j,st.children||[]),j.return=nt,j)}function Ut(nt,j,st,Ct,se){return j===null||j.tag!==7?(j=Ra(st,nt.mode,Ct,se),j.return=nt,j):(j=y(j,st),j.return=nt,j)}function Ht(nt,j,st){if(typeof j=="string"&&j!==""||typeof j=="number"||typeof j=="bigint")return j=fd(""+j,nt.mode,st),j.return=nt,j;if(typeof j=="object"&&j!==null){switch(j.$$typeof){case Uc:return st=Dc(j.type,j.key,j.props,null,nt.mode,st),Te(st,j),st.return=nt,st;case Rr:return j=dd(j,nt.mode,st),j.return=nt,j;case Zs:var Ct=j._init;return j=Ct(j._payload),Ht(nt,j,st)}if(Nc(j)||o(j))return j=Ra(j,nt.mode,st,null),j.return=nt,j;if(typeof j.then=="function")return Ht(nt,ee(j),st);if(j.$$typeof===js)return Ht(nt,Ec(nt,j),st);Se(nt,j)}return null}function Gt(nt,j,st,Ct){var se=j!==null?j.key:null;if(typeof st=="string"&&st!==""||typeof st=="number"||typeof st=="bigint")return se!==null?null:G(nt,j,""+st,Ct);if(typeof st=="object"&&st!==null){switch(st.$$typeof){case Uc:return st.key===se?K(nt,j,st,Ct):null;case Rr:return st.key===se?ft(nt,j,st,Ct):null;case Zs:return se=st._init,st=se(st._payload),Gt(nt,j,st,Ct)}if(Nc(st)||o(st))return se!==null?null:Ut(nt,j,st,Ct,null);if(typeof st.then=="function")return Gt(nt,j,ee(st),Ct);if(st.$$typeof===js)return Gt(nt,j,Ec(nt,st),Ct);Se(nt,st)}return null}function _e(nt,j,st,Ct,se){if(typeof Ct=="string"&&Ct!==""||typeof Ct=="number"||typeof Ct=="bigint")return nt=nt.get(st)||null,G(j,nt,""+Ct,se);if(typeof Ct=="object"&&Ct!==null){switch(Ct.$$typeof){case Uc:return nt=nt.get(Ct.key===null?st:Ct.key)||null,K(j,nt,Ct,se);case Rr:return nt=nt.get(Ct.key===null?st:Ct.key)||null,ft(j,nt,Ct,se);case Zs:var Je=Ct._init;return Ct=Je(Ct._payload),_e(nt,j,st,Ct,se)}if(Nc(Ct)||o(Ct))return nt=nt.get(st)||null,Ut(j,nt,Ct,se,null);if(typeof Ct.then=="function")return _e(nt,j,st,ee(Ct),se);if(Ct.$$typeof===js)return _e(nt,j,st,Ec(j,Ct),se);Se(j,Ct)}return null}function Ni(nt,j,st,Ct){for(var se=null,Je=null,me=j,Ie=j=0,bn=null;me!==null&&Ie<st.length;Ie++){me.index>Ie?(bn=me,me=null):bn=me.sibling;var Oe=Gt(nt,me,st[Ie],Ct);if(Oe===null){me===null&&(me=bn);break}a&&me&&Oe.alternate===null&&r(nt,me),j=M(Oe,j,Ie),Je===null?se=Oe:Je.sibling=Oe,Je=Oe,me=bn}if(Ie===st.length)return u(nt,me),Pe&&vt(nt,Ie),se;if(me===null){for(;Ie<st.length;Ie++)me=Ht(nt,st[Ie],Ct),me!==null&&(j=M(me,j,Ie),Je===null?se=me:Je.sibling=me,Je=me);return Pe&&vt(nt,Ie),se}for(me=d(me);Ie<st.length;Ie++)bn=_e(me,nt,Ie,st[Ie],Ct),bn!==null&&(a&&bn.alternate!==null&&me.delete(bn.key===null?Ie:bn.key),j=M(bn,j,Ie),Je===null?se=bn:Je.sibling=bn,Je=bn);return a&&me.forEach(function(ia){return r(nt,ia)}),Pe&&vt(nt,Ie),se}function gl(nt,j,st,Ct){if(st==null)throw Error(i(151));for(var se=null,Je=null,me=j,Ie=j=0,bn=null,Oe=st.next();me!==null&&!Oe.done;Ie++,Oe=st.next()){me.index>Ie?(bn=me,me=null):bn=me.sibling;var ia=Gt(nt,me,Oe.value,Ct);if(ia===null){me===null&&(me=bn);break}a&&me&&ia.alternate===null&&r(nt,me),j=M(ia,j,Ie),Je===null?se=ia:Je.sibling=ia,Je=ia,me=bn}if(Oe.done)return u(nt,me),Pe&&vt(nt,Ie),se;if(me===null){for(;!Oe.done;Ie++,Oe=st.next())Oe=Ht(nt,Oe.value,Ct),Oe!==null&&(j=M(Oe,j,Ie),Je===null?se=Oe:Je.sibling=Oe,Je=Oe);return Pe&&vt(nt,Ie),se}for(me=d(me);!Oe.done;Ie++,Oe=st.next())Oe=_e(me,nt,Ie,Oe.value,Ct),Oe!==null&&(a&&Oe.alternate!==null&&me.delete(Oe.key===null?Ie:Oe.key),j=M(Oe,j,Ie),Je===null?se=Oe:Je.sibling=Oe,Je=Oe);return a&&me.forEach(function(nE){return r(nt,nE)}),Pe&&vt(nt,Ie),se}function Va(nt,j,st,Ct){if(typeof st=="object"&&st!==null&&st.type===Dr&&st.key===null&&(st=st.props.children),typeof st=="object"&&st!==null){switch(st.$$typeof){case Uc:t:{for(var se=st.key;j!==null;){if(j.key===se){if(se=st.type,se===Dr){if(j.tag===7){u(nt,j.sibling),Ct=y(j,st.props.children),Ct.return=nt,nt=Ct;break t}}else if(j.elementType===se||typeof se=="object"&&se!==null&&se.$$typeof===Zs&&_n(se)===j.type){u(nt,j.sibling),Ct=y(j,st.props),Te(Ct,st),Ct.return=nt,nt=Ct;break t}u(nt,j);break}else r(nt,j);j=j.sibling}st.type===Dr?(Ct=Ra(st.props.children,nt.mode,Ct,st.key),Ct.return=nt,nt=Ct):(Ct=Dc(st.type,st.key,st.props,null,nt.mode,Ct),Te(Ct,st),Ct.return=nt,nt=Ct)}return L(nt);case Rr:t:{for(se=st.key;j!==null;){if(j.key===se)if(j.tag===4&&j.stateNode.containerInfo===st.containerInfo&&j.stateNode.implementation===st.implementation){u(nt,j.sibling),Ct=y(j,st.children||[]),Ct.return=nt,nt=Ct;break t}else{u(nt,j);break}else r(nt,j);j=j.sibling}Ct=dd(st,nt.mode,Ct),Ct.return=nt,nt=Ct}return L(nt);case Zs:return se=st._init,st=se(st._payload),Va(nt,j,st,Ct)}if(Nc(st))return Ni(nt,j,st,Ct);if(o(st)){if(se=o(st),typeof se!="function")throw Error(i(150));return st=se.call(st),gl(nt,j,st,Ct)}if(typeof st.then=="function")return Va(nt,j,ee(st),Ct);if(st.$$typeof===js)return Va(nt,j,Ec(nt,st),Ct);Se(nt,st)}return typeof st=="string"&&st!==""||typeof st=="number"||typeof st=="bigint"?(st=""+st,j!==null&&j.tag===6?(u(nt,j.sibling),Ct=y(j,st),Ct.return=nt,nt=Ct):(u(nt,j),Ct=fd(st,nt.mode,Ct),Ct.return=nt,nt=Ct),L(nt)):u(nt,j)}return function(nt,j,st,Ct){try{cl=0;var se=Va(nt,j,st,Ct);return Gr=null,se}catch(me){if(me===ll)throw me;var Je=e(29,me,null,nt.mode);return Je.lanes=Ct,Je.return=nt,Je}finally{}}}function ko(a,r){a=Ts,E(kc,a),E(kr,r),Ts=a|r.baseLanes}function Bi(){E(kc,Ts),E(kr,kr.current)}function ba(){Ts=kc.current,_(kr),_(kc)}function zi(a){var r=a.alternate;E(pn,pn.current&1),E(Di,a),Qi===null&&(r===null||kr.current!==null||r.memoizedState!==null)&&(Qi=a)}function Wo(a){if(a.tag===22){if(E(pn,pn.current),E(Di,a),Qi===null){var r=a.alternate;r!==null&&r.memoizedState!==null&&(Qi=a)}}else li()}function li(){E(pn,pn.current),E(Di,Di.current)}function Ei(a){_(Di),Qi===a&&(Qi=null),_(pn)}function ds(a){for(var r=a;r!==null;){if(r.tag===13){var u=r.memoizedState;if(u!==null&&(u=u.dehydrated,u===null||Td(u)||Ad(u)))return r}else if(r.tag===19&&r.memoizedProps.revealOrder!==void 0){if((r.flags&128)!==0)return r}else if(r.child!==null){r.child.return=r,r=r.child;continue}if(r===a)break;for(;r.sibling===null;){if(r.return===null||r.return===a)return null;r=r.return}r.sibling.return=r.return,r=r.sibling}return null}function Qe(){throw Error(i(321))}function br(a,r){if(r===null)return!1;for(var u=0;u<r.length&&u<a.length;u++)if(!gi(a[u],r[u]))return!1;return!0}function Xo(a,r,u,d,y,M){return $s=M,Ee=r,r.memoizedState=null,r.updateQueue=null,r.lanes=0,ge.H=a===null||a.memoizedState===null?Ia:ta,Pa=!1,M=u(d,y),Pa=!1,Wr&&(M=_c(r,u,d,y)),vc(a),M}function vc(a){ge.H=$i;var r=ke!==null&&ke.next!==null;if($s=0,un=ke=Ee=null,Wc=!1,ul=0,Xr=null,r)throw Error(i(300));a===null||Sn||(a=a.dependencies,a!==null&&bc(a)&&(Sn=!0))}function _c(a,r,u,d){Ee=a;var y=0;do{if(Wr&&(Xr=null),ul=0,Wr=!1,25<=y)throw Error(i(301));if(y+=1,un=ke=null,a.updateQueue!=null){var M=a.updateQueue;M.lastEffect=null,M.events=null,M.stores=null,M.memoCache!=null&&(M.memoCache.index=0)}ge.H=Oa,M=r(u,d)}while(Wr);return M}function wf(){var a=ge.H,r=a.useState()[0];return r=typeof r.then=="function"?it(r):r,a=a.useState()[0],(ke!==null?ke.memoizedState:null)!==a&&(Ee.flags|=1024),r}function qo(){var a=Xc!==0;return Xc=0,a}function Yo(a,r,u){r.updateQueue=a.updateQueue,r.flags&=-2053,a.lanes&=~u}function N(a){if(Wc){for(a=a.memoizedState;a!==null;){var r=a.queue;r!==null&&(r.pending=null),a=a.next}Wc=!1}$s=0,un=ke=Ee=null,Wr=!1,ul=Xc=0,Xr=null}function W(){var a={memoizedState:null,baseState:null,baseQueue:null,queue:null,next:null};return un===null?Ee.memoizedState=un=a:un=un.next=a,un}function Q(){if(ke===null){var a=Ee.alternate;a=a!==null?a.memoizedState:null}else a=ke.next;var r=un===null?Ee.memoizedState:un.next;if(r!==null)un=r,ke=a;else{if(a===null)throw Ee.alternate===null?Error(i(467)):Error(i(310));ke=a,a={memoizedState:ke.memoizedState,baseState:ke.baseState,baseQueue:ke.baseQueue,queue:ke.queue,next:null},un===null?Ee.memoizedState=un=a:un=un.next=a}return un}function it(a){var r=ul;return ul+=1,Xr===null&&(Xr=[]),a=pt(Xr,a,r),r=Ee,(un===null?r.memoizedState:un.next)===null&&(r=r.alternate,ge.H=r===null||r.memoizedState===null?Ia:ta),a}function Y(a){if(a!==null&&typeof a=="object"){if(typeof a.then=="function")return it(a);if(a.$$typeof===js)return Nn(a)}throw Error(i(438,String(a)))}function At(a){var r=null,u=Ee.updateQueue;if(u!==null&&(r=u.memoCache),r==null){var d=Ee.alternate;d!==null&&(d=d.updateQueue,d!==null&&(d=d.memoCache,d!=null&&(r={data:d.data.map(function(y){return y.slice()}),index:0})))}if(r==null&&(r={data:[],index:0}),u===null&&(u=zd(),Ee.updateQueue=u),u.memoCache=r,u=r.data[r.index],u===void 0)for(u=r.data[r.index]=Array(a),d=0;d<a;d++)u[d]=TM;return r.index++,u}function It(a,r){return typeof r=="function"?r(a):r}function Yt(a){var r=Q();return Wt(r,ke,a)}function Wt(a,r,u){var d=a.queue;if(d===null)throw Error(i(311));d.lastRenderedReducer=u;var y=a.baseQueue,M=d.pending;if(M!==null){if(y!==null){var L=y.next;y.next=M.next,M.next=L}r.baseQueue=y=M,d.pending=null}if(M=a.baseState,y===null)a.memoizedState=M;else{r=y.next;var G=L=null,K=null,ft=r,Ut=!1;do{var Ht=ft.lane&-536870913;if(Ht!==ft.lane?(De&Ht)===Ht:($s&Ht)===Ht){var Gt=ft.revertLane;if(Gt===0)K!==null&&(K=K.next={lane:0,revertLane:0,action:ft.action,hasEagerState:ft.hasEagerState,eagerState:ft.eagerState,next:null}),Ht===Fr&&(Ut=!0);else if(($s&Gt)===Gt){ft=ft.next,Gt===Fr&&(Ut=!0);continue}else Ht={lane:0,revertLane:ft.revertLane,action:ft.action,hasEagerState:ft.hasEagerState,eagerState:ft.eagerState,next:null},K===null?(G=K=Ht,L=M):K=K.next=Ht,Ee.lanes|=Gt,ea|=Gt;Ht=ft.action,Pa&&u(M,Ht),M=ft.hasEagerState?ft.eagerState:u(M,Ht)}else Gt={lane:Ht,revertLane:ft.revertLane,action:ft.action,hasEagerState:ft.hasEagerState,eagerState:ft.eagerState,next:null},K===null?(G=K=Gt,L=M):K=K.next=Gt,Ee.lanes|=Ht,ea|=Ht;ft=ft.next}while(ft!==null&&ft!==r);if(K===null?L=M:K.next=G,!gi(M,a.memoizedState)&&(Sn=!0,Ut&&(u=Hr,u!==null)))throw u;a.memoizedState=M,a.baseState=L,a.baseQueue=K,d.lastRenderedState=M}return y===null&&(d.lanes=0),[a.memoizedState,d.dispatch]}function oe(a){var r=Q(),u=r.queue;if(u===null)throw Error(i(311));u.lastRenderedReducer=a;var d=u.dispatch,y=u.pending,M=r.memoizedState;if(y!==null){u.pending=null;var L=y=y.next;do M=a(M,L.action),L=L.next;while(L!==y);gi(M,r.memoizedState)||(Sn=!0),r.memoizedState=M,r.baseQueue===null&&(r.baseState=M),u.lastRenderedState=M}return[M,d]}function fe(a,r,u){var d=Ee,y=Q(),M=Pe;if(M){if(u===void 0)throw Error(i(407));u=u()}else u=r();var L=!gi((ke||y).memoizedState,u);if(L&&(y.memoizedState=u,Sn=!0),y=y.queue,Cf(ze.bind(null,d,y,a),[a]),y.getSnapshot!==r||L||un!==null&&un.memoizedState.tag&1){if(d.flags|=2048,ti(9,be.bind(null,d,y,u,r),{destroy:void 0},null),Ye===null)throw Error(i(349));M||($s&60)!==0||ie(d,r,u)}return u}function ie(a,r,u){a.flags|=16384,a={getSnapshot:r,value:u},r=Ee.updateQueue,r===null?(r=zd(),Ee.updateQueue=r,r.stores=[a]):(u=r.stores,u===null?r.stores=[a]:u.push(a))}function be(a,r,u,d){r.value=u,r.getSnapshot=d,Ze(r)&&Ge(a)}function ze(a,r,u){return u(function(){Ze(r)&&Ge(a)})}function Ze(a){var r=a.getSnapshot;a=a.value;try{var u=r();return!gi(a,u)}catch{return!0}}function Ge(a){var r=ht(a,2);r!==null&&qn(r,a,2)}function Fe(a){var r=W();if(typeof a=="function"){var u=a;if(a=u(),Pa){et(!0);try{u()}finally{et(!1)}}}return r.memoizedState=r.baseState=a,r.queue={pending:null,lanes:0,dispatch:null,lastRenderedReducer:It,lastRenderedState:a},r}function ae(a,r,u,d){return a.baseState=u,Wt(a,ke,typeof d=="function"?d:It)}function Ke(a,r,u,d,y){if(Sc(a))throw Error(i(485));if(a=r.action,a!==null){var M={payload:y,action:a,next:null,isTransition:!0,status:"pending",value:null,reason:null,listeners:[],then:function(L){M.listeners.push(L)}};ge.T!==null?u(!0):M.isTransition=!1,d(M),u=r.pending,u===null?(M.next=r.pending=M,Ce(r,M)):(M.next=u.next,r.pending=u.next=M)}}function Ce(a,r){var u=r.action,d=r.payload,y=a.state;if(r.isTransition){var M=ge.T,L={};ge.T=L;try{var G=u(y,d),K=ge.S;K!==null&&K(L,G),Dn(a,r,G)}catch(ft){Tn(a,r,ft)}finally{ge.T=M}}else try{M=u(y,d),Dn(a,r,M)}catch(ft){Tn(a,r,ft)}}function Dn(a,r,u){u!==null&&typeof u=="object"&&typeof u.then=="function"?u.then(function(d){ps(a,r,d)},function(d){return Tn(a,r,d)}):ps(a,r,u)}function ps(a,r,u){r.status="fulfilled",r.value=u,Gs(r),a.state=u,r=a.pending,r!==null&&(u=r.next,u===r?a.pending=null:(u=u.next,r.next=u,Ce(a,u)))}function Tn(a,r,u){var d=a.pending;if(a.pending=null,d!==null){d=d.next;do r.status="rejected",r.reason=u,Gs(r),r=r.next;while(r!==d)}a.action=null}function Gs(a){a=a.listeners;for(var r=0;r<a.length;r++)(0,a[r])()}function qe(a,r){return r}function Wn(a,r){if(Pe){var u=Ye.formState;if(u!==null){t:{var d=Ee;if(Pe){if(In){var y=gb(In,Ji);if(y){In=rv(y),d=vb(y);break t}}Qt(d)}d=!1}d&&(r=u[0])}}u=W(),u.memoizedState=u.baseState=r,d={pending:null,lanes:0,dispatch:null,lastRenderedReducer:qe,lastRenderedState:r},u.queue=d,u=Ug.bind(null,Ee,d),d.dispatch=u,d=Fe(!1);var M=Nf.bind(null,Ee,!1,d.queue);return d=W(),y={state:r,dispatch:null,action:a,pending:null},d.queue=y,u=Ke.bind(null,Ee,y,M,u),y.dispatch=u,d.memoizedState=a,[r,u,!1]}function Xn(a){var r=Q();return xn(r,ke,a)}function xn(a,r,u){r=Wt(a,r,qe)[0],a=Yt(It)[0],r=typeof r=="object"&&r!==null&&typeof r.then=="function"?it(r):r;var d=Q(),y=d.queue,M=y.dispatch;return u!==d.memoizedState&&(Ee.flags|=2048,ti(9,Un.bind(null,y,u),{destroy:void 0},null)),[r,M,a]}function Un(a,r){a.action=r}function Er(a){var r=Q(),u=ke;if(u!==null)return xn(r,u,a);Q(),r=r.memoizedState,u=Q();var d=u.queue.dispatch;return u.memoizedState=a,[r,d,!1]}function ti(a,r,u,d){return a={tag:a,create:r,inst:u,deps:d,next:null},r=Ee.updateQueue,r===null&&(r=zd(),Ee.updateQueue=r),u=r.lastEffect,u===null?r.lastEffect=a.next=a:(d=u.next,u.next=a,a.next=d,r.lastEffect=a),a}function _g(){return Q().memoizedState}function yc(a,r,u,d){var y=W();Ee.flags|=a,y.memoizedState=ti(1|r,u,{destroy:void 0},d===void 0?null:d)}function xc(a,r,u,d){var y=Q();d=d===void 0?null:d;var M=y.memoizedState.inst;ke!==null&&d!==null&&br(d,ke.memoizedState.deps)?y.memoizedState=ti(r,u,M,d):(Ee.flags|=a,y.memoizedState=ti(1|r,u,M,d))}function yg(a,r){yc(8390656,8,a,r)}function Cf(a,r){xc(2048,8,a,r)}function xg(a,r){return xc(4,2,a,r)}function Sg(a,r){return xc(4,4,a,r)}function Mg(a,r){if(typeof r=="function"){a=a();var u=r(a);return function(){typeof u=="function"?u():r(null)}}if(r!=null)return a=a(),r.current=a,function(){r.current=null}}function bg(a,r,u){u=u!=null?u.concat([a]):null,xc(4,4,Mg.bind(null,r,a),u)}function Rf(){}function Eg(a,r){var u=Q();r=r===void 0?null:r;var d=u.memoizedState;return r!==null&&br(r,d[1])?d[0]:(u.memoizedState=[a,r],a)}function Tg(a,r){var u=Q();r=r===void 0?null:r;var d=u.memoizedState;if(r!==null&&br(r,d[1]))return d[0];if(d=a(),Pa){et(!0);try{a()}finally{et(!1)}}return u.memoizedState=[d,r],d}function Df(a,r,u){return u===void 0||($s&1073741824)!==0?a.memoizedState=r:(a.memoizedState=u,a=S0(),Ee.lanes|=a,ea|=a,u)}function Ag(a,r,u,d){return gi(u,r)?u:kr.current!==null?(a=Df(a,u,d),gi(a,r)||(Sn=!0),a):($s&42)===0?(Sn=!0,a.memoizedState=u):(a=S0(),Ee.lanes|=a,ea|=a,r)}function wg(a,r,u,d,y){var M=Da();ni(M!==0&&8>M?M:8);var L=ge.T,G={};ge.T=G,Nf(a,!1,r,u);try{var K=y(),ft=ge.S;if(ft!==null&&ft(G,K),K!==null&&typeof K=="object"&&typeof K.then=="function"){var Ut=Dt(K,d);jo(a,r,Ut,fi(a))}else jo(a,r,d,fi(a))}catch(Ht){jo(a,r,{then:function(){},status:"rejected",reason:Ht},fi())}finally{ni(M),ge.T=L}}function Cg(a){var r=a.memoizedState;if(r!==null)return r;r={memoizedState:Ur,baseState:Ur,baseQueue:null,queue:{pending:null,lanes:0,dispatch:null,lastRenderedReducer:It,lastRenderedState:Ur},next:null};var u={};return r.next={memoizedState:u,baseState:u,baseQueue:null,queue:{pending:null,lanes:0,dispatch:null,lastRenderedReducer:It,lastRenderedState:u},next:null},a.memoizedState=r,a=a.alternate,a!==null&&(a.memoizedState=r),r}function Uf(){return Nn(Ua)}function Rg(){return Q().memoizedState}function Dg(){return Q().memoizedState}function iM(a){for(var r=a.return;r!==null;){switch(r.tag){case 24:case 3:var u=fi();a=Mt(u);var d=Pt(r,a,u);d!==null&&(qn(d,r,u),te(d,r,u)),r={cache:Xf()},a.payload=r;return}r=r.return}}function sM(a,r,u){var d=fi();u={lane:d,revertLane:0,action:u,hasEagerState:!1,eagerState:null,next:null},Sc(a)?Ng(r,u):(u=St(a,r,u,d),u!==null&&(qn(u,a,d),Lg(u,r,d)))}function Ug(a,r,u){var d=fi();jo(a,r,u,d)}function jo(a,r,u,d){var y={lane:d,revertLane:0,action:u,hasEagerState:!1,eagerState:null,next:null};if(Sc(a))Ng(r,y);else{var M=a.alternate;if(a.lanes===0&&(M===null||M.lanes===0)&&(M=r.lastRenderedReducer,M!==null))try{var L=r.lastRenderedState,G=M(L,u);if(y.hasEagerState=!0,y.eagerState=G,gi(G,L))return ut(a,r,y,0),Ye===null&&mt(),!1}catch{}finally{}if(u=St(a,r,y,d),u!==null)return qn(u,a,d),Lg(u,r,d),!0}return!1}function Nf(a,r,u,d){if(d={lane:2,revertLane:_t(),action:d,hasEagerState:!1,eagerState:null,next:null},Sc(a)){if(r)throw Error(i(479))}else r=St(a,u,d,2),r!==null&&qn(r,a,2)}function Sc(a){var r=a.alternate;return a===Ee||r!==null&&r===Ee}function Ng(a,r){Wr=Wc=!0;var u=a.pending;u===null?r.next=r:(r.next=u.next,u.next=r),a.pending=r}function Lg(a,r,u){if((u&4194176)!==0){var d=r.lanes;d&=a.pendingLanes,u|=d,r.lanes=u,Z(a,u)}}function Lf(a,r,u,d){r=a.memoizedState,u=u(d,r),u=u==null?r:md({},r,u),a.memoizedState=u,a.lanes===0&&(a.updateQueue.baseState=u)}function Pg(a,r,u,d,y,M,L){return a=a.stateNode,typeof a.shouldComponentUpdate=="function"?a.shouldComponentUpdate(d,M,L):r.prototype&&r.prototype.isPureReactComponent?!Tt(u,d)||!Tt(y,M):!0}function Ig(a,r,u,d){a=r.state,typeof r.componentWillReceiveProps=="function"&&r.componentWillReceiveProps(u,d),typeof r.UNSAFE_componentWillReceiveProps=="function"&&r.UNSAFE_componentWillReceiveProps(u,d),r.state!==a&&Fd.enqueueReplaceState(r,r.state,null)}function Ea(a,r){var u=r;if("ref"in r){u={};for(var d in r)d!=="ref"&&(u[d]=r[d])}if(a=a.defaultProps){u===r&&(u=md({},u));for(var y in a)u[y]===void 0&&(u[y]=a[y])}return u}function Mc(a,r){try{var u=a.onUncaughtError;u(r.value,{componentStack:r.stack})}catch(d){setTimeout(function(){throw d})}}function Og(a,r,u){try{var d=a.onCaughtError;d(u.value,{componentStack:u.stack,errorBoundary:r.tag===1?r.stateNode:null})}catch(y){setTimeout(function(){throw y})}}function Pf(a,r,u){return u=Mt(u),u.tag=3,u.payload={element:null},u.callback=function(){Mc(a,r)},u}function Bg(a){return a=Mt(a),a.tag=3,a}function zg(a,r,u,d){var y=u.type.getDerivedStateFromError;if(typeof y=="function"){var M=d.value;a.payload=function(){return y(M)},a.callback=function(){Og(r,u,d)}}var L=u.stateNode;L!==null&&typeof L.componentDidCatch=="function"&&(a.callback=function(){Og(r,u,d),typeof y!="function"&&(na===null?na=new Set([this]):na.add(this));var G=d.stack;this.componentDidCatch(d.value,{componentStack:G!==null?G:""})})}function aM(a,r,u,d,y){if(u.flags|=32768,d!==null&&typeof d=="object"&&typeof d.then=="function"){if(r=u.alternate,r!==null&&Ko(r,u,y,!0),u=Di.current,u!==null){switch(u.tag){case 13:return Qi===null?ld():u.alternate===null&&an===0&&(an=3),u.flags&=-257,u.flags|=65536,u.lanes=y,d===Gc?u.flags|=16384:(r=u.updateQueue,r===null?u.updateQueue=new Set([d]):r.add(d),ud(a,d,y)),!1;case 22:return u.flags|=65536,d===Gc?u.flags|=16384:(r=u.updateQueue,r===null?(r={transitions:null,markerInstances:null,retryQueue:new Set([d])},u.updateQueue=r):(u=r.retryQueue,u===null?r.retryQueue=new Set([d]):u.add(d)),ud(a,d,y)),!1}throw Error(i(435,u.tag))}return ud(a,d,y),ld(),!1}if(Pe)return r=Di.current,r!==null?((r.flags&65536)===0&&(r.flags|=256),r.flags|=65536,r.lanes=y,d!==Ud&&(a=Error(i(422),{cause:d}),H(ct(a,u)))):(d!==Ud&&(r=Error(i(423),{cause:d}),H(ct(r,u))),a=a.current.alternate,a.flags|=65536,y&=-y,a.lanes|=y,d=ct(d,u),y=Pf(a.stateNode,d,y),F(a,y),an!==4&&(an=2)),!1;var M=Error(i(520),{cause:d});if(M=ct(M,u),fl===null?fl=[M]:fl.push(M),an!==4&&(an=2),r===null)return!0;d=ct(d,u),u=r;do{switch(u.tag){case 3:return u.flags|=65536,a=y&-y,u.lanes|=a,a=Pf(u.stateNode,d,a),F(u,a),!1;case 1:if(r=u.type,M=u.stateNode,(u.flags&128)===0&&(typeof r.getDerivedStateFromError=="function"||M!==null&&typeof M.componentDidCatch=="function"&&(na===null||!na.has(M))))return u.flags|=65536,y&=-y,u.lanes|=y,y=Bg(y),zg(y,a,u,d),F(u,y),!1}u=u.return}while(u!==null);return!1}function An(a,r,u,d){r.child=a===null?xv(r,null,u,d):La(r,a.child,u,d)}function Fg(a,r,u,d,y){u=u.render;var M=r.ref;if("ref"in d){var L={};for(var G in d)G!=="ref"&&(L[G]=d[G])}else L=d;return Ta(r),d=Xo(a,r,u,L,M,y),G=qo(),a!==null&&!Sn?(Yo(a,r,y),ms(a,r,y)):(Pe&&G&&Ot(r),r.flags|=1,An(a,r,d,y),r.child)}function Hg(a,r,u,d,y){if(a===null){var M=u.type;return typeof M=="function"&&!hd(M)&&M.defaultProps===void 0&&u.compare===null?(r.tag=15,r.type=M,Vg(a,r,M,d,y)):(a=Dc(u.type,null,d,r,r.mode,y),a.ref=r.ref,a.return=r,r.child=a)}if(M=a.child,!Gf(a,y)){var L=M.memoizedProps;if(u=u.compare,u=u!==null?u:Tt,u(L,d)&&a.ref===r.ref)return ms(a,r,y)}return r.flags|=1,a=Ys(M,d),a.ref=r.ref,a.return=r,r.child=a}function Vg(a,r,u,d,y){if(a!==null){var M=a.memoizedProps;if(Tt(M,d)&&a.ref===r.ref)if(Sn=!1,r.pendingProps=d=M,Gf(a,y))(a.flags&131072)!==0&&(Sn=!0);else return r.lanes=a.lanes,ms(a,r,y)}return If(a,r,u,d,y)}function Gg(a,r,u){var d=r.pendingProps,y=d.children,M=(r.stateNode._pendingVisibility&2)!==0,L=a!==null?a.memoizedState:null;if(Zo(a,r),d.mode==="hidden"||M){if((r.flags&128)!==0){if(d=L!==null?L.baseLanes|u:u,a!==null){for(y=r.child=a.child,M=0;y!==null;)M=M|y.lanes|y.childLanes,y=y.sibling;r.childLanes=M&~d}else r.childLanes=0,r.child=null;return kg(a,r,d,u)}if((u&536870912)!==0)r.memoizedState={baseLanes:0,cachePool:null},a!==null&&Tc(r,L!==null?L.cachePool:null),L!==null?ko(r,L):Bi(),Wo(r);else return r.lanes=r.childLanes=536870912,kg(a,r,L!==null?L.baseLanes|u:u,u)}else L!==null?(Tc(r,L.cachePool),ko(r,L),li(),r.memoizedState=null):(a!==null&&Tc(r,null),Bi(),li());return An(a,r,y,u),r.child}function kg(a,r,u,d){var y=qf();return y=y===null?null:{parent:ys?nn._currentValue:nn._currentValue2,pool:y},r.memoizedState={baseLanes:u,cachePool:y},a!==null&&Tc(r,null),Bi(),Wo(r),a!==null&&Ko(a,r,d,!0),null}function Zo(a,r){var u=r.ref;if(u===null)a!==null&&a.ref!==null&&(r.flags|=2097664);else{if(typeof u!="function"&&typeof u!="object")throw Error(i(284));(a===null||a.ref!==u)&&(r.flags|=2097664)}}function If(a,r,u,d,y){return Ta(r),u=Xo(a,r,u,d,void 0,y),d=qo(),a!==null&&!Sn?(Yo(a,r,y),ms(a,r,y)):(Pe&&d&&Ot(r),r.flags|=1,An(a,r,u,y),r.child)}function Wg(a,r,u,d,y,M){return Ta(r),r.updateQueue=null,u=_c(r,d,u,y),vc(a),d=qo(),a!==null&&!Sn?(Yo(a,r,M),ms(a,r,M)):(Pe&&d&&Ot(r),r.flags|=1,An(a,r,u,M),r.child)}function Xg(a,r,u,d,y){if(Ta(r),r.stateNode===null){var M=Lr,L=u.contextType;typeof L=="object"&&L!==null&&(M=Nn(L)),M=new u(d,M),r.memoizedState=M.state!==null&&M.state!==void 0?M.state:null,M.updater=Fd,r.stateNode=M,M._reactInternals=r,M=r.stateNode,M.props=d,M.state=r.memoizedState,M.refs={},Xt(r),L=u.contextType,M.context=typeof L=="object"&&L!==null?Nn(L):Lr,M.state=r.memoizedState,L=u.getDerivedStateFromProps,typeof L=="function"&&(Lf(r,u,L,d),M.state=r.memoizedState),typeof u.getDerivedStateFromProps=="function"||typeof M.getSnapshotBeforeUpdate=="function"||typeof M.UNSAFE_componentWillMount!="function"&&typeof M.componentWillMount!="function"||(L=M.state,typeof M.componentWillMount=="function"&&M.componentWillMount(),typeof M.UNSAFE_componentWillMount=="function"&&M.UNSAFE_componentWillMount(),L!==M.state&&Fd.enqueueReplaceState(M,M.state,null),Et(r,d,M,y),$(),M.state=r.memoizedState),typeof M.componentDidMount=="function"&&(r.flags|=4194308),d=!0}else if(a===null){M=r.stateNode;var G=r.memoizedProps,K=Ea(u,G);M.props=K;var ft=M.context,Ut=u.contextType;L=Lr,typeof Ut=="object"&&Ut!==null&&(L=Nn(Ut));var Ht=u.getDerivedStateFromProps;Ut=typeof Ht=="function"||typeof M.getSnapshotBeforeUpdate=="function",G=r.pendingProps!==G,Ut||typeof M.UNSAFE_componentWillReceiveProps!="function"&&typeof M.componentWillReceiveProps!="function"||(G||ft!==L)&&Ig(r,M,d,L),Qs=!1;var Gt=r.memoizedState;M.state=Gt,Et(r,d,M,y),$(),ft=r.memoizedState,G||Gt!==ft||Qs?(typeof Ht=="function"&&(Lf(r,u,Ht,d),ft=r.memoizedState),(K=Qs||Pg(r,u,K,d,Gt,ft,L))?(Ut||typeof M.UNSAFE_componentWillMount!="function"&&typeof M.componentWillMount!="function"||(typeof M.componentWillMount=="function"&&M.componentWillMount(),typeof M.UNSAFE_componentWillMount=="function"&&M.UNSAFE_componentWillMount()),typeof M.componentDidMount=="function"&&(r.flags|=4194308)):(typeof M.componentDidMount=="function"&&(r.flags|=4194308),r.memoizedProps=d,r.memoizedState=ft),M.props=d,M.state=ft,M.context=L,d=K):(typeof M.componentDidMount=="function"&&(r.flags|=4194308),d=!1)}else{M=r.stateNode,qt(a,r),L=r.memoizedProps,Ut=Ea(u,L),M.props=Ut,Ht=r.pendingProps,Gt=M.context,ft=u.contextType,K=Lr,typeof ft=="object"&&ft!==null&&(K=Nn(ft)),G=u.getDerivedStateFromProps,(ft=typeof G=="function"||typeof M.getSnapshotBeforeUpdate=="function")||typeof M.UNSAFE_componentWillReceiveProps!="function"&&typeof M.componentWillReceiveProps!="function"||(L!==Ht||Gt!==K)&&Ig(r,M,d,K),Qs=!1,Gt=r.memoizedState,M.state=Gt,Et(r,d,M,y),$();var _e=r.memoizedState;L!==Ht||Gt!==_e||Qs||a!==null&&a.dependencies!==null&&bc(a.dependencies)?(typeof G=="function"&&(Lf(r,u,G,d),_e=r.memoizedState),(Ut=Qs||Pg(r,u,Ut,d,Gt,_e,K)||a!==null&&a.dependencies!==null&&bc(a.dependencies))?(ft||typeof M.UNSAFE_componentWillUpdate!="function"&&typeof M.componentWillUpdate!="function"||(typeof M.componentWillUpdate=="function"&&M.componentWillUpdate(d,_e,K),typeof M.UNSAFE_componentWillUpdate=="function"&&M.UNSAFE_componentWillUpdate(d,_e,K)),typeof M.componentDidUpdate=="function"&&(r.flags|=4),typeof M.getSnapshotBeforeUpdate=="function"&&(r.flags|=1024)):(typeof M.componentDidUpdate!="function"||L===a.memoizedProps&&Gt===a.memoizedState||(r.flags|=4),typeof M.getSnapshotBeforeUpdate!="function"||L===a.memoizedProps&&Gt===a.memoizedState||(r.flags|=1024),r.memoizedProps=d,r.memoizedState=_e),M.props=d,M.state=_e,M.context=K,d=Ut):(typeof M.componentDidUpdate!="function"||L===a.memoizedProps&&Gt===a.memoizedState||(r.flags|=4),typeof M.getSnapshotBeforeUpdate!="function"||L===a.memoizedProps&&Gt===a.memoizedState||(r.flags|=1024),d=!1)}return M=d,Zo(a,r),d=(r.flags&128)!==0,M||d?(M=r.stateNode,u=d&&typeof u.getDerivedStateFromError!="function"?null:M.render(),r.flags|=1,a!==null&&d?(r.child=La(r,a.child,null,y),r.child=La(r,null,u,y)):An(a,r,u,y),r.memoizedState=M.state,a=r.child):a=ms(a,r,y),a}function qg(a,r,u,d){return le(),r.flags|=256,An(a,r,u,d),r.child}function Of(a){return{baseLanes:a,cachePool:Qg()}}function Bf(a,r,u){return a=a!==null?a.childLanes&~u:0,r&&(a|=Ui),a}function Yg(a,r,u){var d=r.pendingProps,y=!1,M=(r.flags&128)!==0,L;if((L=M)||(L=a!==null&&a.memoizedState===null?!1:(pn.current&2)!==0),L&&(y=!0,r.flags&=-129),L=(r.flags&32)!==0,r.flags&=-33,a===null){if(Pe){if(y?zi(r):li(),Pe){var G=In,K;(K=G)&&(G=Mb(G,Ji),G!==null?(r.memoizedState={dehydrated:G,treeContext:Na!==null?{id:xs,overflow:Ss}:null,retryLane:536870912},K=e(18,null,null,0),K.stateNode=G,K.return=r,r.child=K,Yn=r,In=null,K=!0):K=!1),K||Qt(r)}if(G=r.memoizedState,G!==null&&(G=G.dehydrated,G!==null))return Ad(G)?r.lanes=16:r.lanes=536870912,null;Ei(r)}return G=d.children,d=d.fallback,y?(li(),y=r.mode,G=Ff({mode:"hidden",children:G},y),d=Ra(d,y,u,null),G.return=r,d.return=r,G.sibling=d,r.child=G,y=r.child,y.memoizedState=Of(u),y.childLanes=Bf(a,L,u),r.memoizedState=Hd,d):(zi(r),zf(r,G))}if(K=a.memoizedState,K!==null&&(G=K.dehydrated,G!==null)){if(M)r.flags&256?(zi(r),r.flags&=-257,r=Hf(a,r,u)):r.memoizedState!==null?(li(),r.child=a.child,r.flags|=128,r=null):(li(),y=d.fallback,G=r.mode,d=Ff({mode:"visible",children:d.children},G),y=Ra(y,G,u,null),y.flags|=2,d.return=r,y.return=r,d.sibling=y,r.child=d,La(r,a.child,null,u),d=r.child,d.memoizedState=Of(u),d.childLanes=Bf(a,L,u),r.memoizedState=Hd,r=y);else if(zi(r),Ad(G))L=pb(G).digest,d=Error(i(419)),d.stack="",d.digest=L,H({value:d,source:null,stack:null}),r=Hf(a,r,u);else if(Sn||Ko(a,r,u,!1),L=(u&a.childLanes)!==0,Sn||L){if(L=Ye,L!==null){if(d=u&-u,(d&42)!==0)d=1;else switch(d){case 2:d=1;break;case 8:d=4;break;case 32:d=16;break;case 128:case 256:case 512:case 1024:case 2048:case 4096:case 8192:case 16384:case 32768:case 65536:case 131072:case 262144:case 524288:case 1048576:case 2097152:case 4194304:case 8388608:case 16777216:case 33554432:d=64;break;case 268435456:d=134217728;break;default:d=0}if(d=(d&(L.suspendedLanes|u))!==0?0:d,d!==0&&d!==K.retryLane)throw K.retryLane=d,ht(a,d),qn(L,a,d),Mv}Td(G)||ld(),r=Hf(a,r,u)}else Td(G)?(r.flags|=128,r.child=a.child,r=vM.bind(null,a),mb(G,r),r=null):(a=K.treeContext,Ti&&(In=yb(G),Yn=r,Pe=!0,Vi=null,Ji=!1,a!==null&&(wi[Ci++]=xs,wi[Ci++]=Ss,wi[Ci++]=Na,xs=a.id,Ss=a.overflow,Na=r)),r=zf(r,d.children),r.flags|=4096);return r}return y?(li(),y=d.fallback,G=r.mode,K=a.child,M=K.sibling,d=Ys(K,{mode:"hidden",children:d.children}),d.subtreeFlags=K.subtreeFlags&31457280,M!==null?y=Ys(M,y):(y=Ra(y,G,u,null),y.flags|=2),y.return=r,d.return=r,d.sibling=y,r.child=d,d=y,y=r.child,G=a.child.memoizedState,G===null?G=Of(u):(K=G.cachePool,K!==null?(M=ys?nn._currentValue:nn._currentValue2,K=K.parent!==M?{parent:M,pool:M}:K):K=Qg(),G={baseLanes:G.baseLanes|u,cachePool:K}),y.memoizedState=G,y.childLanes=Bf(a,L,u),r.memoizedState=Hd,d):(zi(r),u=a.child,a=u.sibling,u=Ys(u,{mode:"visible",children:d.children}),u.return=r,u.sibling=null,a!==null&&(L=r.deletions,L===null?(r.deletions=[a],r.flags|=16):L.push(a)),r.child=u,r.memoizedState=null,u)}function zf(a,r){return r=Ff({mode:"visible",children:r},a.mode),r.return=a,a.child=r}function Ff(a,r){return B0(a,r,0,null)}function Hf(a,r,u){return La(r,a.child,null,u),a=zf(r,r.pendingProps.children),a.flags|=2,r.memoizedState=null,a}function jg(a,r,u){a.lanes|=r;var d=a.alternate;d!==null&&(d.lanes|=r),kf(a.return,r,u)}function Vf(a,r,u,d,y){var M=a.memoizedState;M===null?a.memoizedState={isBackwards:r,rendering:null,renderingStartTime:0,last:d,tail:u,tailMode:y}:(M.isBackwards=r,M.rendering=null,M.renderingStartTime=0,M.last=d,M.tail=u,M.tailMode=y)}function Zg(a,r,u){var d=r.pendingProps,y=d.revealOrder,M=d.tail;if(An(a,r,d.children,u),d=pn.current,(d&2)!==0)d=d&1|2,r.flags|=128;else{if(a!==null&&(a.flags&128)!==0)t:for(a=r.child;a!==null;){if(a.tag===13)a.memoizedState!==null&&jg(a,u,r);else if(a.tag===19)jg(a,u,r);else if(a.child!==null){a.child.return=a,a=a.child;continue}if(a===r)break t;for(;a.sibling===null;){if(a.return===null||a.return===r)break t;a=a.return}a.sibling.return=a.return,a=a.sibling}d&=1}switch(E(pn,d),y){case"forwards":for(u=r.child,y=null;u!==null;)a=u.alternate,a!==null&&ds(a)===null&&(y=u),u=u.sibling;u=y,u===null?(y=r.child,r.child=null):(y=u.sibling,u.sibling=null),Vf(r,!1,y,u,M);break;case"backwards":for(u=null,y=r.child,r.child=null;y!==null;){if(a=y.alternate,a!==null&&ds(a)===null){r.child=y;break}a=y.sibling,y.sibling=u,u=y,y=a}Vf(r,!0,u,null,M);break;case"together":Vf(r,!1,null,null,void 0);break;default:r.memoizedState=null}return r.child}function ms(a,r,u){if(a!==null&&(r.dependencies=a.dependencies),ea|=r.lanes,(u&r.childLanes)===0)if(a!==null){if(Ko(a,r,u,!1),(u&r.childLanes)===0)return null}else return null;if(a!==null&&r.child!==a.child)throw Error(i(153));if(r.child!==null){for(a=r.child,u=Ys(a,a.pendingProps),r.child=u,u.return=r;a.sibling!==null;)a=a.sibling,u=u.sibling=Ys(a,a.pendingProps),u.return=r;u.sibling=null}return r.child}function Gf(a,r){return(a.lanes&r)!==0?!0:(a=a.dependencies,!!(a!==null&&bc(a)))}function rM(a,r,u){switch(r.tag){case 3:jt(r,r.stateNode.containerInfo),ks(r,nn,a.memoizedState.cache),le();break;case 27:case 5:Lt(r);break;case 4:jt(r,r.stateNode.containerInfo);break;case 10:ks(r,r.type,r.memoizedProps.value);break;case 13:var d=r.memoizedState;if(d!==null)return d.dehydrated!==null?(zi(r),r.flags|=128,null):(u&r.child.childLanes)!==0?Yg(a,r,u):(zi(r),a=ms(a,r,u),a!==null?a.sibling:null);zi(r);break;case 19:var y=(a.flags&128)!==0;if(d=(u&r.childLanes)!==0,d||(Ko(a,r,u,!1),d=(u&r.childLanes)!==0),y){if(d)return Zg(a,r,u);r.flags|=128}if(y=r.memoizedState,y!==null&&(y.rendering=null,y.tail=null,y.lastEffect=null),E(pn,pn.current),d)break;return null;case 22:case 23:return r.lanes=0,Gg(a,r,u);case 24:ks(r,nn,a.memoizedState.cache)}return ms(a,r,u)}function Kg(a,r,u){if(a!==null)if(a.memoizedProps!==r.pendingProps)Sn=!0;else{if(!Gf(a,u)&&(r.flags&128)===0)return Sn=!1,rM(a,r,u);Sn=(a.flags&131072)!==0}else Sn=!1,Pe&&(r.flags&1048576)!==0&&xt(r,zc,r.index);switch(r.lanes=0,r.tag){case 16:t:{a=r.pendingProps;var d=r.elementType,y=d._init;if(d=y(d._payload),r.type=d,typeof d=="function")hd(d)?(a=Ea(d,a),r.tag=1,r=Xg(null,r,d,a,u)):(r.tag=0,r=If(null,r,d,a,u));else{if(d!=null){if(y=d.$$typeof,y===vd){r.tag=11,r=Fg(null,r,d,a,u);break t}else if(y===xd){r.tag=14,r=Hg(null,r,d,a,u);break t}}throw r=l(d)||d,Error(i(306,r,""))}}return r;case 0:return If(a,r,r.type,r.pendingProps,u);case 1:return d=r.type,y=Ea(d,r.pendingProps),Xg(a,r,d,y,u);case 3:t:{if(jt(r,r.stateNode.containerInfo),a===null)throw Error(i(387));var M=r.pendingProps;y=r.memoizedState,d=y.element,qt(a,r),Et(r,M,null,u);var L=r.memoizedState;if(M=L.cache,ks(r,nn,M),M!==y.cache&&Wf(r,[nn],u,!0),$(),M=L.element,Ti&&y.isDehydrated)if(y={element:M,isDehydrated:!1,cache:L.cache},r.updateQueue.baseState=y,r.memoizedState=y,r.flags&256){r=qg(a,r,M,u);break t}else if(M!==d){d=ct(Error(i(424)),r),H(d),r=qg(a,r,M,u);break t}else for(Ti&&(In=_b(r.stateNode.containerInfo),Yn=r,Pe=!0,Vi=null,Ji=!0),u=xv(r,null,M,u),r.child=u;u;)u.flags=u.flags&-3|4096,u=u.sibling;else{if(le(),M===d){r=ms(a,r,u);break t}An(a,r,M,u)}r=r.child}return r;case 26:if(Ai)return Zo(a,r),a===null?(u=uv(r.type,null,r.pendingProps,null))?r.memoizedState=u:Pe||(r.stateNode=Pb(r.type,r.pendingProps,Js.current,r)):r.memoizedState=uv(r.type,a.memoizedProps,r.pendingProps,a.memoizedState),null;case 27:if(Pn)return Lt(r),a===null&&Pn&&Pe&&(d=r.stateNode=gv(r.type,r.pendingProps,Js.current,wn.current,!1),Yn=r,Ji=!0,In=ov(d)),d=r.pendingProps.children,a!==null||Pe?An(a,r,d,u):r.child=La(r,null,d,u),Zo(a,r),r.child;case 5:return a===null&&Pe&&(Ub(r.type,r.pendingProps,wn.current),(y=d=In)&&(d=xb(d,r.type,r.pendingProps,Ji),d!==null?(r.stateNode=d,Yn=r,In=ov(d),Ji=!1,y=!0):y=!1),y||Qt(r)),Lt(r),y=r.type,M=r.pendingProps,L=a!==null?a.memoizedProps:null,d=M.children,Lc(y,M)?d=null:L!==null&&Lc(y,L)&&(r.flags|=32),r.memoizedState!==null&&(y=Xo(a,r,wf,null,null,u),ys?Ua._currentValue=y:Ua._currentValue2=y),Zo(a,r),An(a,r,d,u),r.child;case 6:return a===null&&Pe&&(Nb(r.pendingProps,wn.current),(a=u=In)&&(u=Sb(u,r.pendingProps,Ji),u!==null?(r.stateNode=u,Yn=r,In=null,a=!0):a=!1),a||Qt(r)),null;case 13:return Yg(a,r,u);case 4:return jt(r,r.stateNode.containerInfo),d=r.pendingProps,a===null?r.child=La(r,null,d,u):An(a,r,d,u),r.child;case 11:return Fg(a,r,r.type,r.pendingProps,u);case 7:return An(a,r,r.pendingProps,u),r.child;case 8:return An(a,r,r.pendingProps.children,u),r.child;case 12:return An(a,r,r.pendingProps.children,u),r.child;case 10:return d=r.pendingProps,ks(r,r.type,d.value),An(a,r,d.children,u),r.child;case 9:return y=r.type._context,d=r.pendingProps.children,Ta(r),y=Nn(y),d=d(y),r.flags|=1,An(a,r,d,u),r.child;case 14:return Hg(a,r,r.type,r.pendingProps,u);case 15:return Vg(a,r,r.type,r.pendingProps,u);case 19:return Zg(a,r,u);case 22:return Gg(a,r,u);case 24:return Ta(r),d=Nn(nn),a===null?(y=qf(),y===null&&(y=Ye,M=Xf(),y.pooledCache=M,M.refCount++,M!==null&&(y.pooledCacheLanes|=u),y=M),r.memoizedState={parent:d,cache:y},Xt(r),ks(r,nn,y)):((a.lanes&u)!==0&&(qt(a,r),Et(r,null,null,u),$()),y=a.memoizedState,M=r.memoizedState,y.parent!==d?(y={parent:d,cache:d},r.memoizedState=y,r.lanes===0&&(r.memoizedState=r.updateQueue.baseState=y),ks(r,nn,d)):(d=M.cache,ks(r,nn,d),d!==y.cache&&Wf(r,[nn],u,!0))),An(a,r,r.pendingProps.children,u),r.child;case 29:throw r.pendingProps}throw Error(i(156,r.tag))}function ks(a,r,u){ys?(E(qc,r._currentValue),r._currentValue=u):(E(qc,r._currentValue2),r._currentValue2=u)}function gs(a){var r=qc.current;ys?a._currentValue=r:a._currentValue2=r,_(qc)}function kf(a,r,u){for(;a!==null;){var d=a.alternate;if((a.childLanes&r)!==r?(a.childLanes|=r,d!==null&&(d.childLanes|=r)):d!==null&&(d.childLanes&r)!==r&&(d.childLanes|=r),a===u)break;a=a.return}}function Wf(a,r,u,d){var y=a.child;for(y!==null&&(y.return=a);y!==null;){var M=y.dependencies;if(M!==null){var L=y.child;M=M.firstContext;t:for(;M!==null;){var G=M;M=y;for(var K=0;K<r.length;K++)if(G.context===r[K]){M.lanes|=u,G=M.alternate,G!==null&&(G.lanes|=u),kf(M.return,u,a),d||(L=null);break t}M=G.next}}else if(y.tag===18){if(L=y.return,L===null)throw Error(i(341));L.lanes|=u,M=L.alternate,M!==null&&(M.lanes|=u),kf(L,u,a),L=null}else L=y.child;if(L!==null)L.return=y;else for(L=y;L!==null;){if(L===a){L=null;break}if(y=L.sibling,y!==null){y.return=L.return,L=y;break}L=L.return}y=L}}function Ko(a,r,u,d){a=null;for(var y=r,M=!1;y!==null;){if(!M){if((y.flags&524288)!==0)M=!0;else if((y.flags&262144)!==0)break}if(y.tag===10){var L=y.alternate;if(L===null)throw Error(i(387));if(L=L.memoizedProps,L!==null){var G=y.type;gi(y.pendingProps.value,L.value)||(a!==null?a.push(G):a=[G])}}else if(y===Fc.current){if(L=y.alternate,L===null)throw Error(i(387));L.memoizedState.memoizedState!==y.memoizedState.memoizedState&&(a!==null?a.push(Ua):a=[Ua])}y=y.return}a!==null&&Wf(r,a,u,d),r.flags|=262144}function bc(a){for(a=a.firstContext;a!==null;){var r=a.context;if(!gi(ys?r._currentValue:r._currentValue2,a.memoizedValue))return!0;a=a.next}return!1}function Ta(a){Ba=a,Ms=null,a=a.dependencies,a!==null&&(a.firstContext=null)}function Nn(a){return Jg(Ba,a)}function Ec(a,r){return Ba===null&&Ta(a),Jg(a,r)}function Jg(a,r){var u=ys?r._currentValue:r._currentValue2;if(r={context:r,memoizedValue:u,next:null},Ms===null){if(a===null)throw Error(i(308));Ms=r,a.dependencies={lanes:0,firstContext:r},a.flags|=524288}else Ms=Ms.next=r;return u}function Xf(){return{controller:new Jb,data:new Map,refCount:0}}function Jo(a){a.refCount--,a.refCount===0&&Qb($b,function(){a.controller.abort()})}function qf(){var a=za.current;return a!==null?a:Ye.pooledCache}function Tc(a,r){r===null?E(za,za.current):E(za,r.pool)}function Qg(){var a=qf();return a===null?null:{parent:ys?nn._currentValue:nn._currentValue2,pool:a}}function ci(a){a.flags|=4}function $g(a,r){if(a!==null&&a.child===r.child)return!1;if((r.flags&16)!==0)return!0;for(a=r.child;a!==null;){if((a.flags&13878)!==0||(a.subtreeFlags&13878)!==0)return!0;a=a.sibling}return!1}function Yf(a,r,u,d){if(Ln)for(u=r.child;u!==null;){if(u.tag===5||u.tag===6)bd(a,u.stateNode);else if(!(u.tag===4||Pn&&u.tag===27)&&u.child!==null){u.child.return=u,u=u.child;continue}if(u===r)break;for(;u.sibling===null;){if(u.return===null||u.return===r)return;u=u.return}u.sibling.return=u.return,u=u.sibling}else if(Ks)for(var y=r.child;y!==null;){if(y.tag===5){var M=y.stateNode;u&&d&&(M=sv(M,y.type,y.memoizedProps)),bd(a,M)}else if(y.tag===6)M=y.stateNode,u&&d&&(M=av(M,y.memoizedProps)),bd(a,M);else if(y.tag!==4){if(y.tag===22&&y.memoizedState!==null)M=y.child,M!==null&&(M.return=y),Yf(a,y,!0,!0);else if(y.child!==null){y.child.return=y,y=y.child;continue}}if(y===r)break;for(;y.sibling===null;){if(y.return===null||y.return===r)return;y=y.return}y.sibling.return=y.return,y=y.sibling}}function t0(a,r,u,d){if(Ks)for(var y=r.child;y!==null;){if(y.tag===5){var M=y.stateNode;u&&d&&(M=sv(M,y.type,y.memoizedProps)),nv(a,M)}else if(y.tag===6)M=y.stateNode,u&&d&&(M=av(M,y.memoizedProps)),nv(a,M);else if(y.tag!==4){if(y.tag===22&&y.memoizedState!==null)M=y.child,M!==null&&(M.return=y),t0(a,y,!(y.memoizedProps!==null&&y.memoizedProps.mode==="manual"),!0);else if(y.child!==null){y.child.return=y,y=y.child;continue}}if(y===r)break;for(;y.sibling===null;){if(y.return===null||y.return===r)return;y=y.return}y.sibling.return=y.return,y=y.sibling}}function e0(a,r){if(Ks&&$g(a,r)){a=r.stateNode;var u=a.containerInfo,d=ev();t0(d,r,!1,!1),a.pendingChildren=d,ci(r),db(u,d)}}function jf(a,r,u,d){if(Ln)a.memoizedProps!==d&&ci(r);else if(Ks){var y=a.stateNode,M=a.memoizedProps;if((a=$g(a,r))||M!==d){var L=wn.current;M=fb(y,u,M,d,!a,null),M===y?r.stateNode=y:(Z0(M,u,d,L)&&ci(r),r.stateNode=M,a?Yf(M,r,!1,!1):ci(r))}else r.stateNode=y}}function Zf(a,r,u){if(HM(r,u)){if(a.flags|=16777216,!Q0(r,u))if(A0())a.flags|=8192;else throw Vr=Gc,Bd}else a.flags&=-16777217}function n0(a,r){if(Ob(r)){if(a.flags|=16777216,!mv(r))if(A0())a.flags|=8192;else throw Vr=Gc,Bd}else a.flags&=-16777217}function Ac(a,r){r!==null&&(a.flags|=4),a.flags&16384&&(r=a.tag!==22?C():536870912,a.lanes|=r,jr|=r)}function Qo(a,r){if(!Pe)switch(a.tailMode){case"hidden":r=a.tail;for(var u=null;r!==null;)r.alternate!==null&&(u=r),r=r.sibling;u===null?a.tail=null:u.sibling=null;break;case"collapsed":u=a.tail;for(var d=null;u!==null;)u.alternate!==null&&(d=u),u=u.sibling;d===null?r||a.tail===null?a.tail=null:a.tail.sibling=null:d.sibling=null}}function tn(a){var r=a.alternate!==null&&a.alternate.child===a.child,u=0,d=0;if(r)for(var y=a.child;y!==null;)u|=y.lanes|y.childLanes,d|=y.subtreeFlags&31457280,d|=y.flags&31457280,y.return=a,y=y.sibling;else for(y=a.child;y!==null;)u|=y.lanes|y.childLanes,d|=y.subtreeFlags,d|=y.flags,y.return=a,y=y.sibling;return a.subtreeFlags|=d,a.childLanes=u,r}function oM(a,r,u){var d=r.pendingProps;switch(ne(r),r.tag){case 16:case 15:case 0:case 11:case 7:case 8:case 12:case 9:case 14:return tn(r),null;case 1:return tn(r),null;case 3:return u=r.stateNode,d=null,a!==null&&(d=a.memoizedState.cache),r.memoizedState.cache!==d&&(r.flags|=2048),gs(nn),at(),u.pendingContext&&(u.context=u.pendingContext,u.pendingContext=null),(a===null||a.child===null)&&(Be(r)?ci(r):a===null||a.memoizedState.isDehydrated&&(r.flags&256)===0||(r.flags|=1024,Vi!==null&&(rd(Vi),Vi=null))),e0(a,r),tn(r),null;case 26:if(Ai){u=r.type;var y=r.memoizedState;return a===null?(ci(r),y!==null?(tn(r),n0(r,y)):(tn(r),Zf(r,u,d))):y?y!==a.memoizedState?(ci(r),tn(r),n0(r,y)):(tn(r),r.flags&=-16777217):(Ln?a.memoizedProps!==d&&ci(r):jf(a,r,u,d),tn(r),Zf(r,u,d)),null}case 27:if(Pn){if(Rt(r),u=Js.current,y=r.type,a!==null&&r.stateNode!=null)Ln?a.memoizedProps!==d&&ci(r):jf(a,r,y,d);else{if(!d){if(r.stateNode===null)throw Error(i(166));return tn(r),null}a=wn.current,Be(r)?Zt(r,a):(a=gv(y,d,u,a,!0),r.stateNode=a,ci(r))}return tn(r),null}case 5:if(Rt(r),u=r.type,a!==null&&r.stateNode!=null)jf(a,r,u,d);else{if(!d){if(r.stateNode===null)throw Error(i(166));return tn(r),null}a=wn.current,Be(r)?Zt(r,a):(y=LM(u,d,Js.current,a,r),Yf(y,r,!1,!1),r.stateNode=y,Z0(y,u,d,a)&&ci(r))}return tn(r),Zf(r,r.type,r.pendingProps),null;case 6:if(a&&r.stateNode!=null)u=a.memoizedProps,Ln?u!==d&&ci(r):Ks&&(u!==d?(r.stateNode=K0(d,Js.current,wn.current,r),ci(r)):r.stateNode=a.stateNode);else{if(typeof d!="string"&&r.stateNode===null)throw Error(i(166));if(a=Js.current,u=wn.current,Be(r)){if(!Ti)throw Error(i(176));if(a=r.stateNode,u=r.memoizedProps,d=null,y=Yn,y!==null)switch(y.tag){case 27:case 5:d=y.memoizedProps}Eb(a,u,r,d)||Qt(r)}else r.stateNode=K0(d,a,u,r)}return tn(r),null;case 13:if(d=r.memoizedState,a===null||a.memoizedState!==null&&a.memoizedState.dehydrated!==null){if(y=Be(r),d!==null&&d.dehydrated!==null){if(a===null){if(!y)throw Error(i(318));if(!Ti)throw Error(i(344));if(y=r.memoizedState,y=y!==null?y.dehydrated:null,!y)throw Error(i(317));Tb(y,r)}else le(),(r.flags&128)===0&&(r.memoizedState=null),r.flags|=4;tn(r),y=!1}else Vi!==null&&(rd(Vi),Vi=null),y=!0;if(!y)return r.flags&256?(Ei(r),r):(Ei(r),null)}if(Ei(r),(r.flags&128)!==0)return r.lanes=u,r;if(u=d!==null,a=a!==null&&a.memoizedState!==null,u){d=r.child,y=null,d.alternate!==null&&d.alternate.memoizedState!==null&&d.alternate.memoizedState.cachePool!==null&&(y=d.alternate.memoizedState.cachePool.pool);var M=null;d.memoizedState!==null&&d.memoizedState.cachePool!==null&&(M=d.memoizedState.cachePool.pool),M!==y&&(d.flags|=2048)}return u!==a&&u&&(r.child.flags|=8192),Ac(r,r.updateQueue),tn(r),null;case 4:return at(),e0(a,r),a===null&&OM(r.stateNode.containerInfo),tn(r),null;case 10:return gs(r.type),tn(r),null;case 19:if(_(pn),y=r.memoizedState,y===null)return tn(r),null;if(d=(r.flags&128)!==0,M=y.rendering,M===null)if(d)Qo(y,!1);else{if(an!==0||a!==null&&(a.flags&128)!==0)for(a=r.child;a!==null;){if(M=ds(a),M!==null){for(r.flags|=128,Qo(y,!1),a=M.updateQueue,r.updateQueue=a,Ac(r,a),r.subtreeFlags=0,a=u,u=r.child;u!==null;)O0(u,a),u=u.sibling;return E(pn,pn.current&1|2),r.child}a=a.sibling}y.tail!==null&&Hi()>dl&&(r.flags|=128,d=!0,Qo(y,!1),r.lanes=4194304)}else{if(!d)if(a=ds(M),a!==null){if(r.flags|=128,d=!0,a=a.updateQueue,r.updateQueue=a,Ac(r,a),Qo(y,!0),y.tail===null&&y.tailMode==="hidden"&&!M.alternate&&!Pe)return tn(r),null}else 2*Hi()-y.renderingStartTime>dl&&u!==536870912&&(r.flags|=128,d=!0,Qo(y,!1),r.lanes=4194304);y.isBackwards?(M.sibling=r.child,r.child=M):(a=y.last,a!==null?a.sibling=M:r.child=M,y.last=M)}return y.tail!==null?(r=y.tail,y.rendering=r,y.tail=r.sibling,y.renderingStartTime=Hi(),r.sibling=null,a=pn.current,E(pn,d?a&1|2:a&1),r):(tn(r),null);case 22:case 23:return Ei(r),ba(),d=r.memoizedState!==null,a!==null?a.memoizedState!==null!==d&&(r.flags|=8192):d&&(r.flags|=8192),d?(u&536870912)!==0&&(r.flags&128)===0&&(tn(r),r.subtreeFlags&6&&(r.flags|=8192)):tn(r),u=r.updateQueue,u!==null&&Ac(r,u.retryQueue),u=null,a!==null&&a.memoizedState!==null&&a.memoizedState.cachePool!==null&&(u=a.memoizedState.cachePool.pool),d=null,r.memoizedState!==null&&r.memoizedState.cachePool!==null&&(d=r.memoizedState.cachePool.pool),d!==u&&(r.flags|=2048),a!==null&&_(za),null;case 24:return u=null,a!==null&&(u=a.memoizedState.cache),r.memoizedState.cache!==u&&(r.flags|=2048),gs(nn),tn(r),null;case 25:return null}throw Error(i(156,r.tag))}function lM(a,r){switch(ne(r),r.tag){case 1:return a=r.flags,a&65536?(r.flags=a&-65537|128,r):null;case 3:return gs(nn),at(),a=r.flags,(a&65536)!==0&&(a&128)===0?(r.flags=a&-65537|128,r):null;case 26:case 27:case 5:return Rt(r),null;case 13:if(Ei(r),a=r.memoizedState,a!==null&&a.dehydrated!==null){if(r.alternate===null)throw Error(i(340));le()}return a=r.flags,a&65536?(r.flags=a&-65537|128,r):null;case 19:return _(pn),null;case 4:return at(),null;case 10:return gs(r.type),null;case 22:case 23:return Ei(r),ba(),a!==null&&_(za),a=r.flags,a&65536?(r.flags=a&-65537|128,r):null;case 24:return gs(nn),null;case 25:return null;default:return null}}function i0(a,r){switch(ne(r),r.tag){case 3:gs(nn),at();break;case 26:case 27:case 5:Rt(r);break;case 4:at();break;case 13:Ei(r);break;case 19:_(pn);break;case 10:gs(r.type);break;case 22:case 23:Ei(r),ba(),a!==null&&_(za);break;case 24:gs(nn)}}function $o(a,r){try{var u=r.updateQueue,d=u!==null?u.lastEffect:null;if(d!==null){var y=d.next;u=y;do{if((u.tag&a)===a){d=void 0;var M=u.create,L=u.inst;d=M(),L.destroy=d}u=u.next}while(u!==y)}}catch(G){He(r,r.return,G)}}function Ws(a,r,u){try{var d=r.updateQueue,y=d!==null?d.lastEffect:null;if(y!==null){var M=y.next;d=M;do{if((d.tag&a)===a){var L=d.inst,G=L.destroy;if(G!==void 0){L.destroy=void 0,y=r;var K=u;try{G()}catch(ft){He(y,K,ft)}}}d=d.next}while(d!==M)}}catch(ft){He(r,r.return,ft)}}function s0(a){var r=a.updateQueue;if(r!==null){var u=a.stateNode;try{gt(r,u)}catch(d){He(a,a.return,d)}}}function a0(a,r,u){u.props=Ea(a.type,a.memoizedProps),u.state=a.memoizedState;try{u.componentWillUnmount()}catch(d){He(a,r,d)}}function Aa(a,r){try{var u=a.ref;if(u!==null){var d=a.stateNode;switch(a.tag){case 26:case 27:case 5:var y=nl(d);break;default:y=d}typeof u=="function"?a.refCleanup=u(y):u.current=y}}catch(M){He(a,r,M)}}function ui(a,r){var u=a.ref,d=a.refCleanup;if(u!==null)if(typeof d=="function")try{d()}catch(y){He(a,r,y)}finally{a.refCleanup=null,a=a.alternate,a!=null&&(a.refCleanup=null)}else if(typeof u=="function")try{u(null)}catch(y){He(a,r,y)}else u.current=null}function r0(a){var r=a.type,u=a.memoizedProps,d=a.stateNode;try{eb(d,r,u,a)}catch(y){He(a,a.return,y)}}function o0(a,r,u){try{nb(a.stateNode,a.type,u,r,a)}catch(d){He(a,a.return,d)}}function l0(a){return a.tag===5||a.tag===3||(Ai?a.tag===26:!1)||(Pn?a.tag===27:!1)||a.tag===4}function Kf(a){t:for(;;){for(;a.sibling===null;){if(a.return===null||l0(a.return))return null;a=a.return}for(a.sibling.return=a.return,a=a.sibling;a.tag!==5&&a.tag!==6&&(!Pn||a.tag!==27)&&a.tag!==18;){if(a.flags&2||a.child===null||a.tag===4)continue t;a.child.return=a,a=a.child}if(!(a.flags&2))return a.stateNode}}function Jf(a,r,u){var d=a.tag;if(d===5||d===6)a=a.stateNode,r?sb(u,a,r):$M(u,a);else if(!(d===4||Pn&&d===27)&&(a=a.child,a!==null))for(Jf(a,r,u),a=a.sibling;a!==null;)Jf(a,r,u),a=a.sibling}function wc(a,r,u){var d=a.tag;if(d===5||d===6)a=a.stateNode,r?ib(u,a,r):QM(u,a);else if(!(d===4||Pn&&d===27)&&(a=a.child,a!==null))for(wc(a,r,u),a=a.sibling;a!==null;)wc(a,r,u),a=a.sibling}function c0(a,r,u){a=a.containerInfo;try{iv(a,u)}catch(d){He(r,r.return,d)}}function cM(a,r){for(UM(a.containerInfo),Mn=r;Mn!==null;)if(a=Mn,r=a.child,(a.subtreeFlags&1028)!==0&&r!==null)r.return=a,Mn=r;else for(;Mn!==null;){a=Mn;var u=a.alternate;switch(r=a.flags,a.tag){case 0:break;case 11:case 15:break;case 1:if((r&1024)!==0&&u!==null){r=void 0;var d=a,y=u.memoizedProps;u=u.memoizedState;var M=d.stateNode;try{var L=Ea(d.type,y,d.elementType===d.type);r=M.getSnapshotBeforeUpdate(L,u),M.__reactInternalSnapshotBeforeUpdate=r}catch(G){He(d,d.return,G)}}break;case 3:(r&1024)!==0&&Ln&&hb(a.stateNode.containerInfo);break;case 5:case 26:case 27:case 6:case 4:case 17:break;default:if((r&1024)!==0)throw Error(i(163))}if(r=a.sibling,r!==null){r.return=a.return,Mn=r;break}Mn=a.return}return L=Tv,Tv=!1,L}function u0(a,r,u){var d=u.flags;switch(u.tag){case 0:case 11:case 15:vs(a,u),d&4&&$o(5,u);break;case 1:if(vs(a,u),d&4)if(a=u.stateNode,r===null)try{a.componentDidMount()}catch(G){He(u,u.return,G)}else{var y=Ea(u.type,r.memoizedProps);r=r.memoizedState;try{a.componentDidUpdate(y,r,a.__reactInternalSnapshotBeforeUpdate)}catch(G){He(u,u.return,G)}}d&64&&s0(u),d&512&&Aa(u,u.return);break;case 3:if(vs(a,u),d&64&&(d=u.updateQueue,d!==null)){if(a=null,u.child!==null)switch(u.child.tag){case 27:case 5:a=nl(u.child.stateNode);break;case 1:a=u.child.stateNode}try{gt(d,a)}catch(G){He(u,u.return,G)}}break;case 26:if(Ai){vs(a,u),d&512&&Aa(u,u.return);break}case 27:case 5:vs(a,u),r===null&&d&4&&r0(u),d&512&&Aa(u,u.return);break;case 12:vs(a,u);break;case 13:vs(a,u),d&4&&f0(a,u);break;case 22:if(y=u.memoizedState!==null||bs,!y){r=r!==null&&r.memoizedState!==null||sn;var M=bs,L=sn;bs=y,(sn=r)&&!L?Xs(a,u,(u.subtreeFlags&8772)!==0):vs(a,u),bs=M,sn=L}d&512&&(u.memoizedProps.mode==="manual"?Aa(u,u.return):ui(u,u.return));break;default:vs(a,u)}}function h0(a){var r=a.alternate;r!==null&&(a.alternate=null,h0(r)),a.child=null,a.deletions=null,a.sibling=null,a.tag===5&&(r=a.stateNode,r!==null&&FM(r)),a.stateNode=null,a.return=null,a.dependencies=null,a.memoizedProps=null,a.memoizedState=null,a.pendingProps=null,a.stateNode=null,a.updateQueue=null}function Fi(a,r,u){for(u=u.child;u!==null;)Qf(a,r,u),u=u.sibling}function Qf(a,r,u){if(mi&&typeof mi.onCommitFiberUnmount=="function")try{mi.onCommitFiberUnmount(al,u)}catch{}switch(u.tag){case 26:if(Ai){sn||ui(u,r),Fi(a,r,u),u.memoizedState?fv(u.memoizedState):u.stateNode&&pv(u.stateNode);break}case 27:if(Pn){sn||ui(u,r);var d=hn,y=vi;hn=u.stateNode,Fi(a,r,u),Hb(u.stateNode),hn=d,vi=y;break}case 5:sn||ui(u,r);case 6:if(Ln){if(d=hn,y=vi,hn=null,Fi(a,r,u),hn=d,vi=y,hn!==null)if(vi)try{rb(hn,u.stateNode)}catch(M){He(u,r,M)}else try{ab(hn,u.stateNode)}catch(M){He(u,r,M)}}else Fi(a,r,u);break;case 18:Ln&&hn!==null&&(vi?Db(hn,u.stateNode):Rb(hn,u.stateNode));break;case 4:Ln?(d=hn,y=vi,hn=u.stateNode.containerInfo,vi=!0,Fi(a,r,u),hn=d,vi=y):(Ks&&c0(u.stateNode,u,ev()),Fi(a,r,u));break;case 0:case 11:case 14:case 15:sn||Ws(2,u,r),sn||Ws(4,u,r),Fi(a,r,u);break;case 1:sn||(ui(u,r),d=u.stateNode,typeof d.componentWillUnmount=="function"&&a0(u,r,d)),Fi(a,r,u);break;case 21:Fi(a,r,u);break;case 22:sn||ui(u,r),sn=(d=sn)||u.memoizedState!==null,Fi(a,r,u),sn=d;break;default:Fi(a,r,u)}}function f0(a,r){if(Ti&&r.memoizedState===null&&(a=r.alternate,a!==null&&(a=a.memoizedState,a!==null&&(a=a.dehydrated,a!==null))))try{Cb(a)}catch(u){He(r,r.return,u)}}function uM(a){switch(a.tag){case 13:case 19:var r=a.stateNode;return r===null&&(r=a.stateNode=new Ev),r;case 22:return a=a.stateNode,r=a._retryCache,r===null&&(r=a._retryCache=new Ev),r;default:throw Error(i(435,a.tag))}}function $f(a,r){var u=uM(a);r.forEach(function(d){var y=_M.bind(null,a,d);u.has(d)||(u.add(d),d.then(y,y))})}function ei(a,r){var u=r.deletions;if(u!==null)for(var d=0;d<u.length;d++){var y=u[d],M=a,L=r;if(Ln){var G=L;t:for(;G!==null;){switch(G.tag){case 27:case 5:hn=G.stateNode,vi=!1;break t;case 3:hn=G.stateNode.containerInfo,vi=!0;break t;case 4:hn=G.stateNode.containerInfo,vi=!0;break t}G=G.return}if(hn===null)throw Error(i(160));Qf(M,L,y),hn=null,vi=!1}else Qf(M,L,y);M=y.alternate,M!==null&&(M.return=null),y.return=null}if(r.subtreeFlags&13878)for(r=r.child;r!==null;)d0(r,a),r=r.sibling}function d0(a,r){var u=a.alternate,d=a.flags;switch(a.tag){case 0:case 11:case 14:case 15:ei(r,a),hi(a),d&4&&(Ws(3,a,a.return),$o(3,a),Ws(5,a,a.return));break;case 1:ei(r,a),hi(a),d&512&&(sn||u===null||ui(u,u.return)),d&64&&bs&&(a=a.updateQueue,a!==null&&(d=a.callbacks,d!==null&&(u=a.shared.hiddenCallbacks,a.shared.hiddenCallbacks=u===null?d:u.concat(d))));break;case 26:if(Ai){var y=Gi;ei(r,a),hi(a),d&512&&(sn||u===null||ui(u,u.return)),d&4&&(d=u!==null?u.memoizedState:null,r=a.memoizedState,u===null?r===null?a.stateNode===null?a.stateNode=Lb(y,a.type,a.memoizedProps,a):dv(y,a.type,a.stateNode):a.stateNode=hv(y,r,a.memoizedProps):d!==r?(d===null?u.stateNode!==null&&pv(u.stateNode):fv(d),r===null?dv(y,a.type,a.stateNode):hv(y,r,a.memoizedProps)):r===null&&a.stateNode!==null&&o0(a,a.memoizedProps,u.memoizedProps));break}case 27:if(Pn&&d&4&&a.alternate===null){y=a.stateNode;var M=a.memoizedProps;try{zb(y),Fb(a.type,M,y,a)}catch(Ut){He(a,a.return,Ut)}}case 5:if(ei(r,a),hi(a),d&512&&(sn||u===null||ui(u,u.return)),Ln){if(a.flags&32){r=a.stateNode;try{tv(r)}catch(Ut){He(a,a.return,Ut)}}d&4&&a.stateNode!=null&&(r=a.memoizedProps,o0(a,r,u!==null?u.memoizedProps:r)),d&1024&&(Vd=!0)}break;case 6:if(ei(r,a),hi(a),d&4&&Ln){if(a.stateNode===null)throw Error(i(162));d=a.memoizedProps,u=u!==null?u.memoizedProps:d,r=a.stateNode;try{tb(r,u,d)}catch(Ut){He(a,a.return,Ut)}}break;case 3:if(Ai?(Ib(),y=Gi,Gi=wd(r.containerInfo),ei(r,a),Gi=y):ei(r,a),hi(a),d&4){if(Ln&&Ti&&u!==null&&u.memoizedState.isDehydrated)try{wb(r.containerInfo)}catch(Ut){He(a,a.return,Ut)}if(Ks){d=r.containerInfo,u=r.pendingChildren;try{iv(d,u)}catch(Ut){He(a,a.return,Ut)}}}Vd&&(Vd=!1,p0(a));break;case 4:Ai?(u=Gi,Gi=wd(a.stateNode.containerInfo),ei(r,a),hi(a),Gi=u):(ei(r,a),hi(a)),d&4&&Ks&&c0(a.stateNode,a,a.stateNode.pendingChildren);break;case 12:ei(r,a),hi(a);break;case 13:ei(r,a),hi(a),a.child.flags&8192&&a.memoizedState!==null!=(u!==null&&u.memoizedState!==null)&&(Xd=Hi()),d&4&&(d=a.updateQueue,d!==null&&(a.updateQueue=null,$f(a,d)));break;case 22:d&512&&(sn||u===null||ui(u,u.return)),y=a.memoizedState!==null;var L=u!==null&&u.memoizedState!==null,G=bs,K=sn;if(bs=G||y,sn=K||L,ei(r,a),sn=K,bs=G,hi(a),r=a.stateNode,r._current=a,r._visibility&=-3,r._visibility|=r._pendingVisibility&2,d&8192&&(r._visibility=y?r._visibility&-2:r._visibility|1,y&&(r=bs||sn,u===null||L||r||Tr(a)),Ln&&(a.memoizedProps===null||a.memoizedProps.mode!=="manual"))){t:if(u=null,Ln)for(r=a;;){if(r.tag===5||Ai&&r.tag===26||Pn&&r.tag===27){if(u===null){L=u=r;try{M=L.stateNode,y?ob(M):cb(L.stateNode,L.memoizedProps)}catch(Ut){He(L,L.return,Ut)}}}else if(r.tag===6){if(u===null){L=r;try{var ft=L.stateNode;y?lb(ft):ub(ft,L.memoizedProps)}catch(Ut){He(L,L.return,Ut)}}}else if((r.tag!==22&&r.tag!==23||r.memoizedState===null||r===a)&&r.child!==null){r.child.return=r,r=r.child;continue}if(r===a)break t;for(;r.sibling===null;){if(r.return===null||r.return===a)break t;u===r&&(u=null),r=r.return}u===r&&(u=null),r.sibling.return=r.return,r=r.sibling}}d&4&&(d=a.updateQueue,d!==null&&(u=d.retryQueue,u!==null&&(d.retryQueue=null,$f(a,u))));break;case 19:ei(r,a),hi(a),d&4&&(d=a.updateQueue,d!==null&&(a.updateQueue=null,$f(a,d)));break;case 21:break;default:ei(r,a),hi(a)}}function hi(a){var r=a.flags;if(r&2){try{if(Ln&&(!Pn||a.tag!==27)){t:{for(var u=a.return;u!==null;){if(l0(u)){var d=u;break t}u=u.return}throw Error(i(160))}switch(d.tag){case 27:if(Pn){var y=d.stateNode,M=Kf(a);wc(a,M,y);break}case 5:var L=d.stateNode;d.flags&32&&(tv(L),d.flags&=-33);var G=Kf(a);wc(a,G,L);break;case 3:case 4:var K=d.stateNode.containerInfo,ft=Kf(a);Jf(a,ft,K);break;default:throw Error(i(161))}}}catch(Ut){He(a,a.return,Ut)}a.flags&=-3}r&4096&&(a.flags&=-4097)}function p0(a){if(a.subtreeFlags&1024)for(a=a.child;a!==null;){var r=a;p0(r),r.tag===5&&r.flags&1024&&kM(r.stateNode),a=a.sibling}}function vs(a,r){if(r.subtreeFlags&8772)for(r=r.child;r!==null;)u0(a,r.alternate,r),r=r.sibling}function Tr(a){for(a=a.child;a!==null;){var r=a;switch(r.tag){case 0:case 11:case 14:case 15:Ws(4,r,r.return),Tr(r);break;case 1:ui(r,r.return);var u=r.stateNode;typeof u.componentWillUnmount=="function"&&a0(r,r.return,u),Tr(r);break;case 26:case 27:case 5:ui(r,r.return),Tr(r);break;case 22:ui(r,r.return),r.memoizedState===null&&Tr(r);break;default:Tr(r)}a=a.sibling}}function Xs(a,r,u){for(u=u&&(r.subtreeFlags&8772)!==0,r=r.child;r!==null;){var d=r.alternate,y=a,M=r,L=M.flags;switch(M.tag){case 0:case 11:case 15:Xs(y,M,u),$o(4,M);break;case 1:if(Xs(y,M,u),d=M,y=d.stateNode,typeof y.componentDidMount=="function")try{y.componentDidMount()}catch(ft){He(d,d.return,ft)}if(d=M,y=d.updateQueue,y!==null){var G=d.stateNode;try{var K=y.shared.hiddenCallbacks;if(K!==null)for(y.shared.hiddenCallbacks=null,y=0;y<K.length;y++)V(K[y],G)}catch(ft){He(d,d.return,ft)}}u&&L&64&&s0(M),Aa(M,M.return);break;case 26:case 27:case 5:Xs(y,M,u),u&&d===null&&L&4&&r0(M),Aa(M,M.return);break;case 12:Xs(y,M,u);break;case 13:Xs(y,M,u),u&&L&4&&f0(y,M);break;case 22:M.memoizedState===null&&Xs(y,M,u),Aa(M,M.return);break;default:Xs(y,M,u)}r=r.sibling}}function td(a,r){var u=null;a!==null&&a.memoizedState!==null&&a.memoizedState.cachePool!==null&&(u=a.memoizedState.cachePool.pool),a=null,r.memoizedState!==null&&r.memoizedState.cachePool!==null&&(a=r.memoizedState.cachePool.pool),a!==u&&(a!=null&&a.refCount++,u!=null&&Jo(u))}function ed(a,r){a=null,r.alternate!==null&&(a=r.alternate.memoizedState.cache),r=r.memoizedState.cache,r!==a&&(r.refCount++,a!=null&&Jo(a))}function qs(a,r,u,d){if(r.subtreeFlags&10256)for(r=r.child;r!==null;)m0(a,r,u,d),r=r.sibling}function m0(a,r,u,d){var y=r.flags;switch(r.tag){case 0:case 11:case 15:qs(a,r,u,d),y&2048&&$o(9,r);break;case 3:qs(a,r,u,d),y&2048&&(a=null,r.alternate!==null&&(a=r.alternate.memoizedState.cache),r=r.memoizedState.cache,r!==a&&(r.refCount++,a!=null&&Jo(a)));break;case 12:if(y&2048){qs(a,r,u,d),a=r.stateNode;try{var M=r.memoizedProps,L=M.id,G=M.onPostCommit;typeof G=="function"&&G(L,r.alternate===null?"mount":"update",a.passiveEffectDuration,-0)}catch(K){He(r,r.return,K)}}else qs(a,r,u,d);break;case 23:break;case 22:M=r.stateNode,r.memoizedState!==null?M._visibility&4?qs(a,r,u,d):tl(a,r):M._visibility&4?qs(a,r,u,d):(M._visibility|=4,Ar(a,r,u,d,(r.subtreeFlags&10256)!==0)),y&2048&&td(r.alternate,r);break;case 24:qs(a,r,u,d),y&2048&&ed(r.alternate,r);break;default:qs(a,r,u,d)}}function Ar(a,r,u,d,y){for(y=y&&(r.subtreeFlags&10256)!==0,r=r.child;r!==null;){var M=a,L=r,G=u,K=d,ft=L.flags;switch(L.tag){case 0:case 11:case 15:Ar(M,L,G,K,y),$o(8,L);break;case 23:break;case 22:var Ut=L.stateNode;L.memoizedState!==null?Ut._visibility&4?Ar(M,L,G,K,y):tl(M,L):(Ut._visibility|=4,Ar(M,L,G,K,y)),y&&ft&2048&&td(L.alternate,L);break;case 24:Ar(M,L,G,K,y),y&&ft&2048&&ed(L.alternate,L);break;default:Ar(M,L,G,K,y)}r=r.sibling}}function tl(a,r){if(r.subtreeFlags&10256)for(r=r.child;r!==null;){var u=a,d=r,y=d.flags;switch(d.tag){case 22:tl(u,d),y&2048&&td(d.alternate,d);break;case 24:tl(u,d),y&2048&&ed(d.alternate,d);break;default:tl(u,d)}r=r.sibling}}function wa(a){if(a.subtreeFlags&qr)for(a=a.child;a!==null;)g0(a),a=a.sibling}function g0(a){switch(a.tag){case 26:wa(a),a.flags&qr&&(a.memoizedState!==null?Bb(Gi,a.memoizedState,a.memoizedProps):$0(a.type,a.memoizedProps));break;case 5:wa(a),a.flags&qr&&$0(a.type,a.memoizedProps);break;case 3:case 4:if(Ai){var r=Gi;Gi=wd(a.stateNode.containerInfo),wa(a),Gi=r}else wa(a);break;case 22:a.memoizedState===null&&(r=a.alternate,r!==null&&r.memoizedState!==null?(r=qr,qr=16777216,wa(a),qr=r):wa(a));break;default:wa(a)}}function v0(a){var r=a.alternate;if(r!==null&&(a=r.child,a!==null)){r.child=null;do r=a.sibling,a.sibling=null,a=r;while(a!==null)}}function el(a){var r=a.deletions;if((a.flags&16)!==0){if(r!==null)for(var u=0;u<r.length;u++){var d=r[u];Mn=d,y0(d,a)}v0(a)}if(a.subtreeFlags&10256)for(a=a.child;a!==null;)_0(a),a=a.sibling}function _0(a){switch(a.tag){case 0:case 11:case 15:el(a),a.flags&2048&&Ws(9,a,a.return);break;case 3:el(a);break;case 12:el(a);break;case 22:var r=a.stateNode;a.memoizedState!==null&&r._visibility&4&&(a.return===null||a.return.tag!==13)?(r._visibility&=-5,Cc(a)):el(a);break;default:el(a)}}function Cc(a){var r=a.deletions;if((a.flags&16)!==0){if(r!==null)for(var u=0;u<r.length;u++){var d=r[u];Mn=d,y0(d,a)}v0(a)}for(a=a.child;a!==null;){switch(r=a,r.tag){case 0:case 11:case 15:Ws(8,r,r.return),Cc(r);break;case 22:u=r.stateNode,u._visibility&4&&(u._visibility&=-5,Cc(r));break;default:Cc(r)}a=a.sibling}}function y0(a,r){for(;Mn!==null;){var u=Mn;switch(u.tag){case 0:case 11:case 15:Ws(8,u,r);break;case 23:case 22:if(u.memoizedState!==null&&u.memoizedState.cachePool!==null){var d=u.memoizedState.cachePool.pool;d!=null&&d.refCount++}break;case 24:Jo(u.memoizedState.cache)}if(d=u.child,d!==null)d.return=u,Mn=d;else t:for(u=a;Mn!==null;){d=Mn;var y=d.sibling,M=d.return;if(h0(d),d===u){Mn=null;break t}if(y!==null){y.return=M,Mn=y;break t}Mn=M}}}function nd(a){var r=J0(a);if(r!=null){if(typeof r.memoizedProps["data-testname"]!="string")throw Error(i(364));return r}if(a=qM(a),a===null)throw Error(i(362));return a.stateNode.current}function id(a,r){var u=a.tag;switch(r.$$typeof){case Yc:if(a.type===r.value)return!0;break;case jc:t:{for(r=r.value,a=[a,0],u=0;u<a.length;){var d=a[u++],y=d.tag,M=a[u++],L=r[M];if(y!==5&&y!==26&&y!==27||!sl(d)){for(;L!=null&&id(d,L);)M++,L=r[M];if(M===r.length){r=!0;break t}else for(d=d.child;d!==null;)a.push(d,M),d=d.sibling}}r=!1}return r;case Zc:if((u===5||u===26||u===27)&&ZM(a.stateNode,r.value))return!0;break;case Jc:if((u===5||u===6||u===26||u===27)&&(a=jM(a),a!==null&&0<=a.indexOf(r.value)))return!0;break;case Kc:if((u===5||u===26||u===27)&&(a=a.memoizedProps["data-testname"],typeof a=="string"&&a.toLowerCase()===r.value.toLowerCase()))return!0;break;default:throw Error(i(365))}return!1}function sd(a){switch(a.$$typeof){case Yc:return"<"+(l(a.value)||"Unknown")+">";case jc:return":has("+(sd(a)||"")+")";case Zc:return'[role="'+a.value+'"]';case Jc:return'"'+a.value+'"';case Kc:return'[data-testname="'+a.value+'"]';default:throw Error(i(365))}}function x0(a,r){var u=[];a=[a,0];for(var d=0;d<a.length;){var y=a[d++],M=y.tag,L=a[d++],G=r[L];if(M!==5&&M!==26&&M!==27||!sl(y)){for(;G!=null&&id(y,G);)L++,G=r[L];if(L===r.length)u.push(y);else for(y=y.child;y!==null;)a.push(y,L),y=y.sibling}}return u}function ad(a,r){if(!il)throw Error(i(363));a=nd(a),a=x0(a,r),r=[],a=Array.from(a);for(var u=0;u<a.length;){var d=a[u++],y=d.tag;if(y===5||y===26||y===27)sl(d)||r.push(d.stateNode);else for(d=d.child;d!==null;)a.push(d),d=d.sibling}return r}function fi(){if((We&2)!==0&&De!==0)return De&-De;if(ge.T!==null){var a=Fr;return a!==0?a:_t()}return BM()}function S0(){Ui===0&&(Ui=(De&536870912)===0||Pe?O():536870912);var a=Di.current;return a!==null&&(a.flags|=32),Ui}function qn(a,r,u){(a===Ye&&je===2||a.cancelPendingCommit!==null)&&(wr(a,0),_s(a,De,Ui,!1)),B(a,u),((We&2)===0||a!==Ye)&&(a===Ye&&((We&2)===0&&(Fa|=u),an===4&&_s(a,De,Ui,!1)),wt(a))}function M0(a,r,u){if((We&6)!==0)throw Error(i(327));var d=!u&&(r&60)===0&&(r&a.expiredLanes)===0||D(a,r),y=d?dM(a,r):cd(a,r,!0),M=d;do{if(y===0){Yr&&!d&&_s(a,r,0,!1);break}else if(y===6)_s(a,r,0,!Es);else{if(u=a.current.alternate,M&&!hM(u)){y=cd(a,r,!1),M=!1;continue}if(y===2){if(M=r,a.errorRecoveryDisabledLanes&M)var L=0;else L=a.pendingLanes&-536870913,L=L!==0?L:L&536870912?536870912:0;if(L!==0){r=L;t:{var G=a;y=fl;var K=Ti&&G.current.memoizedState.isDehydrated;if(K&&(wr(G,L).flags|=256),L=cd(G,L,!1),L!==2){if(Gd&&!K){G.errorRecoveryDisabledLanes|=M,Fa|=M,y=4;break t}M=ts,ts=y,M!==null&&rd(M)}y=L}if(M=!1,y!==2)continue}}if(y===1){wr(a,0),_s(a,r,0,!0);break}t:{switch(d=a,y){case 0:case 1:throw Error(i(345));case 4:if((r&4194176)===r){_s(d,r,Ui,!Es);break t}break;case 2:ts=null;break;case 3:case 5:break;default:throw Error(i(329))}if(d.finishedWork=u,d.finishedLanes=r,(r&62914560)===r&&(M=Xd+300-Hi(),10<M)){if(_s(d,r,Ui,!Es),U(d,0)!==0)break t;d.timeoutHandle=PM(b0.bind(null,d,u,ts,Qc,Wd,r,Ui,Fa,jr,Es,2,-0,0),M);break t}b0(d,u,ts,Qc,Wd,r,Ui,Fa,jr,Es,0,-0,0)}}break}while(!0);wt(a)}function rd(a){ts===null?ts=a:ts.push.apply(ts,a)}function b0(a,r,u,d,y,M,L,G,K,ft,Ut,Ht,Gt){var _e=r.subtreeFlags;if((_e&8192||(_e&16785408)===16785408)&&(VM(),g0(r),r=GM(),r!==null)){a.cancelPendingCommit=r(N0.bind(null,a,u,d,y,L,G,K,1,Ht,Gt)),_s(a,M,L,!ft);return}N0(a,u,d,y,L,G,K,Ut,Ht,Gt)}function hM(a){for(var r=a;;){var u=r.tag;if((u===0||u===11||u===15)&&r.flags&16384&&(u=r.updateQueue,u!==null&&(u=u.stores,u!==null)))for(var d=0;d<u.length;d++){var y=u[d],M=y.getSnapshot;y=y.value;try{if(!gi(M(),y))return!1}catch{return!1}}if(u=r.child,r.subtreeFlags&16384&&u!==null)u.return=r,r=u;else{if(r===a)break;for(;r.sibling===null;){if(r.return===null||r.return===a)return!0;r=r.return}r.sibling.return=r.return,r=r.sibling}}return!0}function _s(a,r,u,d){r&=~kd,r&=~Fa,a.suspendedLanes|=r,a.pingedLanes&=~r,d&&(a.warmLanes|=r),d=a.expirationTimes;for(var y=r;0<y;){var M=31-pi(y),L=1<<M;d[M]=-1,y&=~L}u!==0&&X(a,u,r)}function E0(){return(We&6)===0?(ce(0),!1):!0}function od(){if(we!==null){if(je===0)var a=we.return;else a=we,Ms=Ba=null,N(a),Gr=null,cl=0,a=we;for(;a!==null;)i0(a.alternate,a),a=a.return;we=null}}function wr(a,r){a.finishedWork=null,a.finishedLanes=0;var u=a.timeoutHandle;u!==Ed&&(a.timeoutHandle=Ed,IM(u)),u=a.cancelPendingCommit,u!==null&&(a.cancelPendingCommit=null,u()),od(),Ye=a,we=u=Ys(a.current,null),De=r,je=0,_i=null,Es=!1,Yr=D(a,r),Gd=!1,jr=Ui=kd=Fa=ea=an=0,ts=fl=null,Wd=!1,(r&8)!==0&&(r|=r&32);var d=a.entangledLanes;if(d!==0)for(a=a.entanglements,d&=r;0<d;){var y=31-pi(d),M=1<<y;r|=a[y],d&=~M}return Ts=r,mt(),u}function T0(a,r){Ee=null,ge.H=$i,r===ll?(r=Ft(),je=3):r===Bd?(r=Ft(),je=4):je=r===Mv?8:r!==null&&typeof r=="object"&&typeof r.then=="function"?6:1,_i=r,we===null&&(an=1,Mc(a,ct(r,a.current)))}function A0(){var a=Di.current;return a===null?!0:(De&4194176)===De?Qi===null:(De&62914560)===De||(De&536870912)!==0?a===Qi:!1}function w0(){var a=ge.H;return ge.H=$i,a===null?$i:a}function C0(){var a=ge.A;return ge.A=tE,a}function ld(){an=4,Es||(De&4194176)!==De&&Di.current!==null||(Yr=!0),(ea&134217727)===0&&(Fa&134217727)===0||Ye===null||_s(Ye,De,Ui,!1)}function cd(a,r,u){var d=We;We|=2;var y=w0(),M=C0();(Ye!==a||De!==r)&&(Qc=null,wr(a,r)),r=!1;var L=an;t:do try{if(je!==0&&we!==null){var G=we,K=_i;switch(je){case 8:od(),L=6;break t;case 3:case 2:case 6:Di.current===null&&(r=!0);var ft=je;if(je=0,_i=null,Cr(a,G,K,ft),u&&Yr){L=0;break t}break;default:ft=je,je=0,_i=null,Cr(a,G,K,ft)}}fM(),L=an;break}catch(Ut){T0(a,Ut)}while(!0);return r&&a.shellSuspendCounter++,Ms=Ba=null,We=d,ge.H=y,ge.A=M,we===null&&(Ye=null,De=0,mt()),L}function fM(){for(;we!==null;)R0(we)}function dM(a,r){var u=We;We|=2;var d=w0(),y=C0();Ye!==a||De!==r?(Qc=null,dl=Hi()+500,wr(a,r)):Yr=D(a,r);t:do try{if(je!==0&&we!==null){r=we;var M=_i;e:switch(je){case 1:je=0,_i=null,Cr(a,r,M,1);break;case 2:if(zt(M)){je=0,_i=null,D0(r);break}r=function(){je===2&&Ye===a&&(je=7),wt(a)},M.then(r,r);break t;case 3:je=7;break t;case 4:je=5;break t;case 7:zt(M)?(je=0,_i=null,D0(r)):(je=0,_i=null,Cr(a,r,M,7));break;case 5:var L=null;switch(we.tag){case 26:L=we.memoizedState;case 5:case 27:var G=we,K=G.type,ft=G.pendingProps;if(L?mv(L):Q0(K,ft)){je=0,_i=null;var Ut=G.sibling;if(Ut!==null)we=Ut;else{var Ht=G.return;Ht!==null?(we=Ht,Rc(Ht)):we=null}break e}}je=0,_i=null,Cr(a,r,M,5);break;case 6:je=0,_i=null,Cr(a,r,M,6);break;case 8:od(),an=6;break t;default:throw Error(i(462))}}pM();break}catch(Gt){T0(a,Gt)}while(!0);return Ms=Ba=null,ge.H=d,ge.A=y,We=u,we!==null?0:(Ye=null,De=0,mt(),an)}function pM(){for(;we!==null&&!kb();)R0(we)}function R0(a){var r=Kg(a.alternate,a,Ts);a.memoizedProps=a.pendingProps,r===null?Rc(a):we=r}function D0(a){var r=a,u=r.alternate;switch(r.tag){case 15:case 0:r=Wg(u,r,r.pendingProps,r.type,void 0,De);break;case 11:r=Wg(u,r,r.pendingProps,r.type.render,r.ref,De);break;case 5:N(r);default:i0(u,r),r=we=O0(r,Ts),r=Kg(u,r,Ts)}a.memoizedProps=a.pendingProps,r===null?Rc(a):we=r}function Cr(a,r,u,d){Ms=Ba=null,N(r),Gr=null,cl=0;var y=r.return;try{if(aM(a,y,r,u,De)){an=1,Mc(a,ct(u,a.current)),we=null;return}}catch(M){if(y!==null)throw we=y,M;an=1,Mc(a,ct(u,a.current)),we=null;return}r.flags&32768?(Pe||d===1?a=!0:Yr||(De&536870912)!==0?a=!1:(Es=a=!0,(d===2||d===3||d===6)&&(d=Di.current,d!==null&&d.tag===13&&(d.flags|=16384))),U0(r,a)):Rc(r)}function Rc(a){var r=a;do{if((r.flags&32768)!==0){U0(r,Es);return}a=r.return;var u=oM(r.alternate,r,Ts);if(u!==null){we=u;return}if(r=r.sibling,r!==null){we=r;return}we=r=a}while(r!==null);an===0&&(an=5)}function U0(a,r){do{var u=lM(a.alternate,a);if(u!==null){u.flags&=32767,we=u;return}if(u=a.return,u!==null&&(u.flags|=32768,u.subtreeFlags=0,u.deletions=null),!r&&(a=a.sibling,a!==null)){we=a;return}we=a=u}while(a!==null);an=6,we=null}function N0(a,r,u,d,y,M,L,G,K,ft){var Ut=ge.T,Ht=Da();try{ni(2),ge.T=null,mM(a,r,u,d,Ht,y,M,L,G,K,ft)}finally{ge.T=Ut,ni(Ht)}}function mM(a,r,u,d,y,M,L,G){do Ca();while(Ha!==null);if((We&6)!==0)throw Error(i(327));var K=a.finishedWork;if(d=a.finishedLanes,K===null)return null;if(a.finishedWork=null,a.finishedLanes=0,K===a.current)throw Error(i(177));a.callbackNode=null,a.callbackPriority=0,a.cancelPendingCommit=null;var ft=K.lanes|K.childLanes;if(ft|=Nd,tt(a,d,ft,M,L,G),a===Ye&&(we=Ye=null,De=0),(K.subtreeFlags&10256)===0&&(K.flags&10256)===0||$c||($c=!0,qd=ft,Yd=u,yM(Dd,function(){return Ca(),null})),u=(K.flags&15990)!==0,(K.subtreeFlags&15990)!==0||u?(u=ge.T,ge.T=null,M=Da(),ni(2),L=We,We|=4,cM(a,K),d0(K,a),NM(a.containerInfo),a.current=K,u0(a,K.alternate,K),Wb(),We=L,ni(M),ge.T=u):a.current=K,$c?($c=!1,Ha=a,pl=d):L0(a,ft),ft=a.pendingLanes,ft===0&&(na=null),k(K.stateNode),wt(a),r!==null)for(y=a.onRecoverableError,K=0;K<r.length;K++)ft=r[K],y(ft.value,{componentStack:ft.stack});return(pl&3)!==0&&Ca(),ft=a.pendingLanes,(d&4194218)!==0&&(ft&42)!==0?a===jd?ml++:(ml=0,jd=a):ml=0,ce(0),null}function L0(a,r){(a.pooledCacheLanes&=r)===0&&(r=a.pooledCache,r!=null&&(a.pooledCache=null,Jo(r)))}function Ca(){if(Ha!==null){var a=Ha,r=qd;qd=0;var u=ot(pl),d=32>u?32:u;u=ge.T;var y=Da();try{if(ni(d),ge.T=null,Ha===null)var M=!1;else{d=Yd,Yd=null;var L=Ha,G=pl;if(Ha=null,pl=0,(We&6)!==0)throw Error(i(331));var K=We;if(We|=4,_0(L.current),m0(L,L.current,G,d),We=K,ce(0,!1),mi&&typeof mi.onPostCommitFiberRoot=="function")try{mi.onPostCommitFiberRoot(al,L)}catch{}M=!0}return M}finally{ni(y),ge.T=u,L0(a,r)}}return!1}function P0(a,r,u){r=ct(u,r),r=Pf(a.stateNode,r,2),a=Pt(a,r,2),a!==null&&(B(a,2),wt(a))}function He(a,r,u){if(a.tag===3)P0(a,a,u);else for(;r!==null;){if(r.tag===3){P0(r,a,u);break}else if(r.tag===1){var d=r.stateNode;if(typeof r.type.getDerivedStateFromError=="function"||typeof d.componentDidCatch=="function"&&(na===null||!na.has(d))){a=ct(u,a),u=Bg(2),d=Pt(r,u,2),d!==null&&(zg(u,d,r,a),B(d,2),wt(d));break}}r=r.return}}function ud(a,r,u){var d=a.pingCache;if(d===null){d=a.pingCache=new eE;var y=new Set;d.set(r,y)}else y=d.get(r),y===void 0&&(y=new Set,d.set(r,y));y.has(u)||(Gd=!0,y.add(u),a=gM.bind(null,a,r,u),r.then(a,a))}function gM(a,r,u){var d=a.pingCache;d!==null&&d.delete(r),a.pingedLanes|=a.suspendedLanes&u,a.warmLanes&=~u,Ye===a&&(De&u)===u&&(an===4||an===3&&(De&62914560)===De&&300>Hi()-Xd?(We&2)===0&&wr(a,0):kd|=u,jr===De&&(jr=0)),wt(a)}function I0(a,r){r===0&&(r=C()),a=ht(a,r),a!==null&&(B(a,r),wt(a))}function vM(a){var r=a.memoizedState,u=0;r!==null&&(u=r.retryLane),I0(a,u)}function _M(a,r){var u=0;switch(a.tag){case 13:var d=a.stateNode,y=a.memoizedState;y!==null&&(u=y.retryLane);break;case 19:d=a.stateNode;break;case 22:d=a.stateNode._retryCache;break;default:throw Error(i(314))}d!==null&&d.delete(r),I0(a,u)}function yM(a,r){return Oc(a,r)}function xM(a,r,u,d){this.tag=a,this.key=u,this.sibling=this.child=this.return=this.stateNode=this.type=this.elementType=null,this.index=0,this.refCleanup=this.ref=null,this.pendingProps=r,this.dependencies=this.memoizedState=this.updateQueue=this.memoizedProps=null,this.mode=d,this.subtreeFlags=this.flags=0,this.deletions=null,this.childLanes=this.lanes=0,this.alternate=null}function hd(a){return a=a.prototype,!(!a||!a.isReactComponent)}function Ys(a,r){var u=a.alternate;return u===null?(u=e(a.tag,r,a.key,a.mode),u.elementType=a.elementType,u.type=a.type,u.stateNode=a.stateNode,u.alternate=a,a.alternate=u):(u.pendingProps=r,u.type=a.type,u.flags=0,u.subtreeFlags=0,u.deletions=null),u.flags=a.flags&31457280,u.childLanes=a.childLanes,u.lanes=a.lanes,u.child=a.child,u.memoizedProps=a.memoizedProps,u.memoizedState=a.memoizedState,u.updateQueue=a.updateQueue,r=a.dependencies,u.dependencies=r===null?null:{lanes:r.lanes,firstContext:r.firstContext},u.sibling=a.sibling,u.index=a.index,u.ref=a.ref,u.refCleanup=a.refCleanup,u}function O0(a,r){a.flags&=31457282;var u=a.alternate;return u===null?(a.childLanes=0,a.lanes=r,a.child=null,a.subtreeFlags=0,a.memoizedProps=null,a.memoizedState=null,a.updateQueue=null,a.dependencies=null,a.stateNode=null):(a.childLanes=u.childLanes,a.lanes=u.lanes,a.child=u.child,a.subtreeFlags=0,a.deletions=null,a.memoizedProps=u.memoizedProps,a.memoizedState=u.memoizedState,a.updateQueue=u.updateQueue,a.type=u.type,r=u.dependencies,a.dependencies=r===null?null:{lanes:r.lanes,firstContext:r.firstContext}),a}function Dc(a,r,u,d,y,M){var L=0;if(d=a,typeof a=="function")hd(a)&&(L=1);else if(typeof a=="string")L=Ai&&Pn?cv(a,u,wn.current)?26:vv(a)?27:5:Ai?cv(a,u,wn.current)?26:5:Pn&&vv(a)?27:5;else t:switch(a){case Dr:return Ra(u.children,y,M,r);case k0:L=8,y|=24;break;case gd:return a=e(12,u,r,y|2),a.elementType=gd,a.lanes=M,a;case _d:return a=e(13,u,r,y),a.elementType=_d,a.lanes=M,a;case yd:return a=e(19,u,r,y),a.elementType=yd,a.lanes=M,a;case X0:return B0(u,y,M,r);default:if(typeof a=="object"&&a!==null)switch(a.$$typeof){case EM:case js:L=10;break t;case W0:L=9;break t;case vd:L=11;break t;case xd:L=14;break t;case Zs:L=16,d=null;break t}L=29,u=Error(i(130,a===null?"null":typeof a,"")),d=null}return r=e(L,u,r,y),r.elementType=a,r.type=d,r.lanes=M,r}function Ra(a,r,u,d){return a=e(7,a,d,r),a.lanes=u,a}function B0(a,r,u,d){a=e(22,a,d,r),a.elementType=X0,a.lanes=u;var y={_visibility:1,_pendingVisibility:1,_pendingMarkers:null,_retryCache:null,_transitions:null,_current:null,detach:function(){var M=y._current;if(M===null)throw Error(i(456));if((y._pendingVisibility&2)===0){var L=ht(M,2);L!==null&&(y._pendingVisibility|=2,qn(L,M,2))}},attach:function(){var M=y._current;if(M===null)throw Error(i(456));if((y._pendingVisibility&2)!==0){var L=ht(M,2);L!==null&&(y._pendingVisibility&=-3,qn(L,M,2))}}};return a.stateNode=y,a}function fd(a,r,u){return a=e(6,a,null,r),a.lanes=u,a}function dd(a,r,u){return r=e(4,a.children!==null?a.children:[],a.key,r),r.lanes=u,r.stateNode={containerInfo:a.containerInfo,pendingChildren:null,implementation:a.implementation},r}function SM(a,r,u,d,y,M,L,G){this.tag=1,this.containerInfo=a,this.finishedWork=this.pingCache=this.current=this.pendingChildren=null,this.timeoutHandle=Ed,this.callbackNode=this.next=this.pendingContext=this.context=this.cancelPendingCommit=null,this.callbackPriority=0,this.expirationTimes=w(-1),this.entangledLanes=this.shellSuspendCounter=this.errorRecoveryDisabledLanes=this.finishedLanes=this.expiredLanes=this.warmLanes=this.pingedLanes=this.suspendedLanes=this.pendingLanes=0,this.entanglements=w(0),this.hiddenUpdates=w(null),this.identifierPrefix=d,this.onUncaughtError=y,this.onCaughtError=M,this.onRecoverableError=L,this.pooledCache=null,this.pooledCacheLanes=0,this.formState=G,this.incompleteTransitions=new Map}function z0(a,r,u,d,y,M,L,G,K,ft,Ut,Ht){return a=new SM(a,r,u,L,G,K,ft,Ht),r=1,M===!0&&(r|=24),M=e(3,null,null,r),a.current=M,M.stateNode=a,r=Xf(),r.refCount++,a.pooledCache=r,r.refCount++,M.memoizedState={element:d,isDehydrated:u,cache:r},Xt(M),a}function F0(a){return a?(a=Lr,a):Lr}function H0(a){var r=a._reactInternals;if(r===void 0)throw typeof a.render=="function"?Error(i(188)):(a=Object.keys(a).join(","),Error(i(268,a)));return a=v(r),a=a!==null?x(a):null,a===null?null:nl(a.stateNode)}function V0(a,r,u,d,y,M){y=F0(y),d.context===null?d.context=y:d.pendingContext=y,d=Mt(r),d.payload={element:u},M=M===void 0?null:M,M!==null&&(d.callback=M),u=Pt(a,d,r),u!==null&&(qn(u,a,r),te(u,a,r))}function G0(a,r){if(a=a.memoizedState,a!==null&&a.dehydrated!==null){var u=a.retryLane;a.retryLane=u!==0&&u<r?u:r}}function pd(a,r){G0(a,r),(a=a.alternate)&&G0(a,r)}var Ae={},MM=Am(),di=OS(),md=Object.assign,bM=Symbol.for("react.element"),Uc=Symbol.for("react.transitional.element"),Rr=Symbol.for("react.portal"),Dr=Symbol.for("react.fragment"),k0=Symbol.for("react.strict_mode"),gd=Symbol.for("react.profiler"),EM=Symbol.for("react.provider"),W0=Symbol.for("react.consumer"),js=Symbol.for("react.context"),vd=Symbol.for("react.forward_ref"),_d=Symbol.for("react.suspense"),yd=Symbol.for("react.suspense_list"),xd=Symbol.for("react.memo"),Zs=Symbol.for("react.lazy"),X0=Symbol.for("react.offscreen"),TM=Symbol.for("react.memo_cache_sentinel"),q0=Symbol.iterator,AM=Symbol.for("react.client.reference"),ge=MM.__CLIENT_INTERNALS_DO_NOT_USE_OR_WARN_USERS_THEY_CANNOT_UPGRADE,Sd,Y0,Md=!1,Nc=Array.isArray,wM=t.rendererVersion,CM=t.rendererPackageName,j0=t.extraDevToolsConfig,nl=t.getPublicInstance,RM=t.getRootHostContext,DM=t.getChildHostContext,UM=t.prepareForCommit,NM=t.resetAfterCommit,LM=t.createInstance,bd=t.appendInitialChild,Z0=t.finalizeInitialChildren,Lc=t.shouldSetTextContent,K0=t.createTextInstance,PM=t.scheduleTimeout,IM=t.cancelTimeout,Ed=t.noTimeout,ys=t.isPrimaryRenderer;t.warnsIfNotActing;var Ln=t.supportsMutation,Ks=t.supportsPersistence,Ti=t.supportsHydration,J0=t.getInstanceFromNode;t.beforeActiveInstanceBlur,t.afterActiveInstanceBlur;var OM=t.preparePortalMount;t.prepareScopeUpdate,t.getInstanceFromScope;var ni=t.setCurrentUpdatePriority,Da=t.getCurrentUpdatePriority,BM=t.resolveUpdatePriority;t.resolveEventType,t.resolveEventTimeStamp;var zM=t.shouldAttemptEagerTransition,FM=t.detachDeletedInstance;t.requestPostPaintCallback;var HM=t.maySuspendCommit,Q0=t.preloadInstance,VM=t.startSuspendingCommit,$0=t.suspendInstance,GM=t.waitForCommitToBeReady,Ur=t.NotPendingTransition,Ua=t.HostTransitionContext,kM=t.resetFormInstance;t.bindToConsole;var WM=t.supportsMicrotasks,XM=t.scheduleMicrotask,il=t.supportsTestSelectors,qM=t.findFiberRoot,YM=t.getBoundingRect,jM=t.getTextContent,sl=t.isHiddenSubtree,ZM=t.matchAccessibilityRole,KM=t.setFocusIfFocusable,JM=t.setupIntersectionObserver,QM=t.appendChild,$M=t.appendChildToContainer,tb=t.commitTextUpdate,eb=t.commitMount,nb=t.commitUpdate,ib=t.insertBefore,sb=t.insertInContainerBefore,ab=t.removeChild,rb=t.removeChildFromContainer,tv=t.resetTextContent,ob=t.hideInstance,lb=t.hideTextInstance,cb=t.unhideInstance,ub=t.unhideTextInstance,hb=t.clearContainer,fb=t.cloneInstance,ev=t.createContainerChildSet,nv=t.appendChildToContainerChildSet,db=t.finalizeContainerChildren,iv=t.replaceContainerChildren,sv=t.cloneHiddenInstance,av=t.cloneHiddenTextInstance,Td=t.isSuspenseInstancePending,Ad=t.isSuspenseInstanceFallback,pb=t.getSuspenseInstanceFallbackErrorDetails,mb=t.registerSuspenseInstanceRetry,gb=t.canHydrateFormStateMarker,vb=t.isFormStateMarkerMatching,rv=t.getNextHydratableSibling,ov=t.getFirstHydratableChild,_b=t.getFirstHydratableChildWithinContainer,yb=t.getFirstHydratableChildWithinSuspenseInstance,xb=t.canHydrateInstance,Sb=t.canHydrateTextInstance,Mb=t.canHydrateSuspenseInstance,bb=t.hydrateInstance,Eb=t.hydrateTextInstance,Tb=t.hydrateSuspenseInstance,Ab=t.getNextHydratableInstanceAfterSuspenseInstance,wb=t.commitHydratedContainer,Cb=t.commitHydratedSuspenseInstance,Rb=t.clearSuspenseBoundary,Db=t.clearSuspenseBoundaryFromContainer,lv=t.shouldDeleteUnhydratedTailInstances;t.diffHydratedPropsForDevWarnings,t.diffHydratedTextForDevWarnings,t.describeHydratableInstanceForDevWarnings;var Ub=t.validateHydratableInstance,Nb=t.validateHydratableTextInstance,Ai=t.supportsResources,cv=t.isHostHoistableType,wd=t.getHoistableRoot,uv=t.getResource,hv=t.acquireResource,fv=t.releaseResource,Lb=t.hydrateHoistable,dv=t.mountHoistable,pv=t.unmountHoistable,Pb=t.createHoistableInstance,Ib=t.prepareToCommitHoistables,Ob=t.mayResourceSuspendCommit,mv=t.preloadResource,Bb=t.suspendResource,Pn=t.supportsSingletons,gv=t.resolveSingletonInstance,zb=t.clearSingleton,Fb=t.acquireSingletonInstance,Hb=t.releaseSingletonInstance,vv=t.isHostSingletonType,Cd=[],Nr=-1,Lr={},pi=Math.clz32?Math.clz32:A,Vb=Math.log,Gb=Math.LN2,Pc=128,Ic=4194304,Oc=di.unstable_scheduleCallback,Rd=di.unstable_cancelCallback,kb=di.unstable_shouldYield,Wb=di.unstable_requestPaint,Hi=di.unstable_now,_v=di.unstable_ImmediatePriority,Xb=di.unstable_UserBlockingPriority,Dd=di.unstable_NormalPriority,qb=di.unstable_IdlePriority,Yb=di.log,jb=di.unstable_setDisableYieldValue,al=null,mi=null,gi=typeof Object.is=="function"?Object.is:q,yv=new WeakMap,Pr=[],Ir=0,Bc=null,zc=0,wi=[],Ci=0,Na=null,xs=1,Ss="",wn=S(null),rl=S(null),Js=S(null),Fc=S(null),Yn=null,In=null,Pe=!1,Vi=null,Ji=!1,Ud=Error(i(519)),Ri=[],Or=0,Nd=0,Hc=null,Br=null,Ld=!1,Vc=!1,Pd=!1,zr=0,ol=null,Id=0,Fr=0,Hr=null,Qs=!1,Od=!1,Zb=Object.prototype.hasOwnProperty,ll=Error(i(460)),Bd=Error(i(474)),Gc={then:function(){}},Vr=null,Gr=null,cl=0,La=yn(!0),xv=yn(!1),kr=S(null),kc=S(0),Di=S(null),Qi=null,pn=S(0),$s=0,Ee=null,ke=null,un=null,Wc=!1,Wr=!1,Pa=!1,Xc=0,ul=0,Xr=null,Kb=0,zd=function(){return{lastEffect:null,events:null,stores:null,memoCache:null}},$i={readContext:Nn,use:Y,useCallback:Qe,useContext:Qe,useEffect:Qe,useImperativeHandle:Qe,useLayoutEffect:Qe,useInsertionEffect:Qe,useMemo:Qe,useReducer:Qe,useRef:Qe,useState:Qe,useDebugValue:Qe,useDeferredValue:Qe,useTransition:Qe,useSyncExternalStore:Qe,useId:Qe};$i.useCacheRefresh=Qe,$i.useMemoCache=Qe,$i.useHostTransitionStatus=Qe,$i.useFormState=Qe,$i.useActionState=Qe,$i.useOptimistic=Qe;var Ia={readContext:Nn,use:Y,useCallback:function(a,r){return W().memoizedState=[a,r===void 0?null:r],a},useContext:Nn,useEffect:yg,useImperativeHandle:function(a,r,u){u=u!=null?u.concat([a]):null,yc(4194308,4,Mg.bind(null,r,a),u)},useLayoutEffect:function(a,r){return yc(4194308,4,a,r)},useInsertionEffect:function(a,r){yc(4,2,a,r)},useMemo:function(a,r){var u=W();r=r===void 0?null:r;var d=a();if(Pa){et(!0);try{a()}finally{et(!1)}}return u.memoizedState=[d,r],d},useReducer:function(a,r,u){var d=W();if(u!==void 0){var y=u(r);if(Pa){et(!0);try{u(r)}finally{et(!1)}}}else y=r;return d.memoizedState=d.baseState=y,a={pending:null,lanes:0,dispatch:null,lastRenderedReducer:a,lastRenderedState:y},d.queue=a,a=a.dispatch=sM.bind(null,Ee,a),[d.memoizedState,a]},useRef:function(a){var r=W();return a={current:a},r.memoizedState=a},useState:function(a){a=Fe(a);var r=a.queue,u=Ug.bind(null,Ee,r);return r.dispatch=u,[a.memoizedState,u]},useDebugValue:Rf,useDeferredValue:function(a,r){var u=W();return Df(u,a,r)},useTransition:function(){var a=Fe(!1);return a=wg.bind(null,Ee,a.queue,!0,!1),W().memoizedState=a,[!1,a]},useSyncExternalStore:function(a,r,u){var d=Ee,y=W();if(Pe){if(u===void 0)throw Error(i(407));u=u()}else{if(u=r(),Ye===null)throw Error(i(349));(De&60)!==0||ie(d,r,u)}y.memoizedState=u;var M={value:u,getSnapshot:r};return y.queue=M,yg(ze.bind(null,d,M,a),[a]),d.flags|=2048,ti(9,be.bind(null,d,M,u,r),{destroy:void 0},null),u},useId:function(){var a=W(),r=Ye.identifierPrefix;if(Pe){var u=Ss,d=xs;u=(d&~(1<<32-pi(d)-1)).toString(32)+u,r=":"+r+"R"+u,u=Xc++,0<u&&(r+="H"+u.toString(32)),r+=":"}else u=Kb++,r=":"+r+"r"+u.toString(32)+":";return a.memoizedState=r},useCacheRefresh:function(){return W().memoizedState=iM.bind(null,Ee)}};Ia.useMemoCache=At,Ia.useHostTransitionStatus=Uf,Ia.useFormState=Wn,Ia.useActionState=Wn,Ia.useOptimistic=function(a){var r=W();r.memoizedState=r.baseState=a;var u={pending:null,lanes:0,dispatch:null,lastRenderedReducer:null,lastRenderedState:null};return r.queue=u,r=Nf.bind(null,Ee,!0,u),u.dispatch=r,[a,r]};var ta={readContext:Nn,use:Y,useCallback:Eg,useContext:Nn,useEffect:Cf,useImperativeHandle:bg,useInsertionEffect:xg,useLayoutEffect:Sg,useMemo:Tg,useReducer:Yt,useRef:_g,useState:function(){return Yt(It)},useDebugValue:Rf,useDeferredValue:function(a,r){var u=Q();return Ag(u,ke.memoizedState,a,r)},useTransition:function(){var a=Yt(It)[0],r=Q().memoizedState;return[typeof a=="boolean"?a:it(a),r]},useSyncExternalStore:fe,useId:Rg};ta.useCacheRefresh=Dg,ta.useMemoCache=At,ta.useHostTransitionStatus=Uf,ta.useFormState=Xn,ta.useActionState=Xn,ta.useOptimistic=function(a,r){var u=Q();return ae(u,ke,a,r)};var Oa={readContext:Nn,use:Y,useCallback:Eg,useContext:Nn,useEffect:Cf,useImperativeHandle:bg,useInsertionEffect:xg,useLayoutEffect:Sg,useMemo:Tg,useReducer:oe,useRef:_g,useState:function(){return oe(It)},useDebugValue:Rf,useDeferredValue:function(a,r){var u=Q();return ke===null?Df(u,a,r):Ag(u,ke.memoizedState,a,r)},useTransition:function(){var a=oe(It)[0],r=Q().memoizedState;return[typeof a=="boolean"?a:it(a),r]},useSyncExternalStore:fe,useId:Rg};Oa.useCacheRefresh=Dg,Oa.useMemoCache=At,Oa.useHostTransitionStatus=Uf,Oa.useFormState=Er,Oa.useActionState=Er,Oa.useOptimistic=function(a,r){var u=Q();return ke!==null?ae(u,ke,a,r):(u.baseState=a,[a,u.queue.dispatch])};var Fd={isMounted:function(a){return(a=a._reactInternals)?m(a)===a:!1},enqueueSetState:function(a,r,u){a=a._reactInternals;var d=fi(),y=Mt(d);y.payload=r,u!=null&&(y.callback=u),r=Pt(a,y,d),r!==null&&(qn(r,a,d),te(r,a,d))},enqueueReplaceState:function(a,r,u){a=a._reactInternals;var d=fi(),y=Mt(d);y.tag=1,y.payload=r,u!=null&&(y.callback=u),r=Pt(a,y,d),r!==null&&(qn(r,a,d),te(r,a,d))},enqueueForceUpdate:function(a,r){a=a._reactInternals;var u=fi(),d=Mt(u);d.tag=2,r!=null&&(d.callback=r),r=Pt(a,d,u),r!==null&&(qn(r,a,u),te(r,a,u))}},Sv=typeof reportError=="function"?reportError:function(a){if(typeof window=="object"&&typeof window.ErrorEvent=="function"){var r=new window.ErrorEvent("error",{bubbles:!0,cancelable:!0,message:typeof a=="object"&&a!==null&&typeof a.message=="string"?String(a.message):String(a),error:a});if(!window.dispatchEvent(r))return}else if(typeof process=="object"&&typeof process.emit=="function"){process.emit("uncaughtException",a);return}console.error(a)},Mv=Error(i(461)),Sn=!1,Hd={dehydrated:null,treeContext:null,retryLane:0},qc=S(null),Ba=null,Ms=null,Jb=typeof AbortController<"u"?AbortController:function(){var a=[],r=this.signal={aborted:!1,addEventListener:function(u,d){a.push(d)}};this.abort=function(){r.aborted=!0,a.forEach(function(u){return u()})}},Qb=di.unstable_scheduleCallback,$b=di.unstable_NormalPriority,nn={$$typeof:js,Consumer:null,Provider:null,_currentValue:null,_currentValue2:null,_threadCount:0},bv=ge.S;ge.S=function(a,r){typeof r=="object"&&r!==null&&typeof r.then=="function"&&lt(a,r),bv!==null&&bv(a,r)};var za=S(null),bs=!1,sn=!1,Vd=!1,Ev=typeof WeakSet=="function"?WeakSet:Set,Mn=null,Tv=!1,hn=null,vi=!1,Gi=null,qr=8192,tE={getCacheForType:function(a){var r=Nn(nn),u=r.data.get(a);return u===void 0&&(u=a(),r.data.set(a,u)),u}},Yc=0,jc=1,Zc=2,Kc=3,Jc=4;if(typeof Symbol=="function"&&Symbol.for){var hl=Symbol.for;Yc=hl("selector.component"),jc=hl("selector.has_pseudo_class"),Zc=hl("selector.role"),Kc=hl("selector.test_id"),Jc=hl("selector.text")}var eE=typeof WeakMap=="function"?WeakMap:Map,We=0,Ye=null,we=null,De=0,je=0,_i=null,Es=!1,Yr=!1,Gd=!1,Ts=0,an=0,ea=0,Fa=0,kd=0,Ui=0,jr=0,fl=null,ts=null,Wd=!1,Xd=0,dl=1/0,Qc=null,na=null,$c=!1,Ha=null,pl=0,qd=0,Yd=null,ml=0,jd=null;return Ae.attemptContinuousHydration=function(a){if(a.tag===13){var r=ht(a,67108864);r!==null&&qn(r,a,67108864),pd(a,67108864)}},Ae.attemptHydrationAtCurrentPriority=function(a){if(a.tag===13){var r=fi(),u=ht(a,r);u!==null&&qn(u,a,r),pd(a,r)}},Ae.attemptSynchronousHydration=function(a){switch(a.tag){case 3:if(a=a.stateNode,a.current.memoizedState.isDehydrated){var r=T(a.pendingLanes);if(r!==0){for(a.pendingLanes|=2,a.entangledLanes|=2;r;){var u=1<<31-pi(r);a.entanglements[1]|=u,r&=~u}wt(a),(We&6)===0&&(dl=Hi()+500,ce(0))}}break;case 13:r=ht(a,2),r!==null&&qn(r,a,2),E0(),pd(a,2)}},Ae.batchedUpdates=function(a,r){return a(r)},Ae.createComponentSelector=function(a){return{$$typeof:Yc,value:a}},Ae.createContainer=function(a,r,u,d,y,M,L,G,K,ft){return z0(a,r,!1,null,u,d,M,L,G,K,ft,null)},Ae.createHasPseudoClassSelector=function(a){return{$$typeof:jc,value:a}},Ae.createHydrationContainer=function(a,r,u,d,y,M,L,G,K,ft,Ut,Ht,Gt){return a=z0(u,d,!0,a,y,M,G,K,ft,Ut,Ht,Gt),a.context=F0(null),u=a.current,d=fi(),y=Mt(d),y.callback=r??null,Pt(u,y,d),a.current.lanes=d,B(a,d),wt(a),a},Ae.createPortal=function(a,r,u){var d=3<arguments.length&&arguments[3]!==void 0?arguments[3]:null;return{$$typeof:Rr,key:d==null?null:""+d,children:a,containerInfo:r,implementation:u}},Ae.createRoleSelector=function(a){return{$$typeof:Zc,value:a}},Ae.createTestNameSelector=function(a){return{$$typeof:Kc,value:a}},Ae.createTextSelector=function(a){return{$$typeof:Jc,value:a}},Ae.defaultOnCaughtError=function(a){console.error(a)},Ae.defaultOnRecoverableError=function(a){Sv(a)},Ae.defaultOnUncaughtError=function(a){Sv(a)},Ae.deferredUpdates=function(a){var r=ge.T,u=Da();try{return ni(32),ge.T=null,a()}finally{ni(u),ge.T=r}},Ae.discreteUpdates=function(a,r,u,d,y){var M=ge.T,L=Da();try{return ni(2),ge.T=null,a(r,u,d,y)}finally{ni(L),ge.T=M,We===0&&(dl=Hi()+500)}},Ae.findAllNodes=ad,Ae.findBoundingRects=function(a,r){if(!il)throw Error(i(363));r=ad(a,r),a=[];for(var u=0;u<r.length;u++)a.push(YM(r[u]));for(r=a.length-1;0<r;r--){u=a[r];for(var d=u.x,y=d+u.width,M=u.y,L=M+u.height,G=r-1;0<=G;G--)if(r!==G){var K=a[G],ft=K.x,Ut=ft+K.width,Ht=K.y,Gt=Ht+K.height;if(d>=ft&&M>=Ht&&y<=Ut&&L<=Gt){a.splice(r,1);break}else if(d!==ft||u.width!==K.width||Gt<M||Ht>L){if(!(M!==Ht||u.height!==K.height||Ut<d||ft>y)){ft>d&&(K.width+=ft-d,K.x=d),Ut<y&&(K.width=y-ft),a.splice(r,1);break}}else{Ht>M&&(K.height+=Ht-M,K.y=M),Gt<L&&(K.height=L-Ht),a.splice(r,1);break}}}return a},Ae.findHostInstance=H0,Ae.findHostInstanceWithNoPortals=function(a){return a=v(a),a=a!==null?b(a):null,a===null?null:nl(a.stateNode)},Ae.findHostInstanceWithWarning=function(a){return H0(a)},Ae.flushPassiveEffects=Ca,Ae.flushSyncFromReconciler=function(a){var r=We;We|=1;var u=ge.T,d=Da();try{if(ni(2),ge.T=null,a)return a()}finally{ni(d),ge.T=u,We=r,(We&6)===0&&ce(0)}},Ae.flushSyncWork=E0,Ae.focusWithin=function(a,r){if(!il)throw Error(i(363));for(a=nd(a),r=x0(a,r),r=Array.from(r),a=0;a<r.length;){var u=r[a++],d=u.tag;if(!sl(u)){if((d===5||d===26||d===27)&&KM(u.stateNode))return!0;for(u=u.child;u!==null;)r.push(u),u=u.sibling}}return!1},Ae.getFindAllNodesFailureDescription=function(a,r){if(!il)throw Error(i(363));var u=0,d=[];a=[nd(a),0];for(var y=0;y<a.length;){var M=a[y++],L=M.tag,G=a[y++],K=r[G];if((L!==5&&L!==26&&L!==27||!sl(M))&&(id(M,K)&&(d.push(sd(K)),G++,G>u&&(u=G)),G<r.length))for(M=M.child;M!==null;)a.push(M,G),M=M.sibling}if(u<r.length){for(a=[];u<r.length;u++)a.push(sd(r[u]));return`findAllNodes was able to match part of the selector:
  `+(d.join(" > ")+`

No matching component was found for:
  `)+a.join(" > ")}return null},Ae.getPublicRootInstance=function(a){if(a=a.current,!a.child)return null;switch(a.child.tag){case 27:case 5:return nl(a.child.stateNode);default:return a.child.stateNode}},Ae.injectIntoDevTools=function(){var a={bundleType:0,version:wM,rendererPackageName:CM,currentDispatcherRef:ge,findFiberByHostInstance:J0,reconcilerVersion:"19.0.0"};if(j0!==null&&(a.rendererConfig=j0),typeof __REACT_DEVTOOLS_GLOBAL_HOOK__>"u")a=!1;else{var r=__REACT_DEVTOOLS_GLOBAL_HOOK__;if(r.isDisabled||!r.supportsFiber)a=!0;else{try{al=r.inject(a),mi=r}catch{}a=!!r.checkDCE}}return a},Ae.isAlreadyRendering=function(){return!1},Ae.observeVisibleRects=function(a,r,u,d){if(!il)throw Error(i(363));a=ad(a,r);var y=JM(a,u,d).disconnect;return{disconnect:function(){y()}}},Ae.shouldError=function(){return null},Ae.shouldSuspend=function(){return!1},Ae.startHostTransition=function(a,r,u,d){if(a.tag!==5)throw Error(i(476));var y=Cg(a).queue;wg(a,y,r,Ur,u===null?n:function(){var M=Cg(a).next.queue;return jo(a,M,{},fi()),u(d)})},Ae.updateContainer=function(a,r,u,d){var y=r.current,M=fi();return V0(y,M,a,r,u,d),M},Ae.updateContainerSync=function(a,r,u,d){return r.tag===0&&Ca(),V0(r.current,2,a,r,u,d),2},Ae},s.exports.default=s.exports,Object.defineProperty(s.exports,"__esModule",{value:!0})})(Xp)),Xp.exports}var my;function Q3(){return my||(my=1,Wp.exports=J3()),Wp.exports}var $3=Q3();const tD=Cy($3);var gy=OS();function pg(s,t,e){if(!s)return;if(e(s)===!0)return s;let n=t?s.return:s.child;for(;n;){const i=pg(n,t,e);if(i)return i;n=t?null:n.sibling}}function BS(s){try{return Object.defineProperties(s,{_currentRenderer:{get(){return null},set(){}},_currentRenderer2:{get(){return null},set(){}}})}catch{return s}}const mg=BS($t.createContext(null));class zS extends $t.Component{render(){return $t.createElement(mg.Provider,{value:this._reactInternals},this.props.children)}}function FS(){const s=$t.useContext(mg);if(s===null)throw new Error("its-fine: useFiber must be called within a <FiberProvider />!");const t=$t.useId();return $t.useMemo(()=>{for(const e of[s,s?.alternate]){if(!e)continue;const n=pg(e,!1,i=>{let o=i.memoizedState;for(;o;){if(o.memoizedState===t)return!0;o=o.next}});if(n)return n}},[s,t])}const eD=Symbol.for("react.context"),nD=s=>s!==null&&typeof s=="object"&&"$$typeof"in s&&s.$$typeof===eD;function iD(){const s=FS(),[t]=$t.useState(()=>new Map);t.clear();let e=s;for(;e;){const n=e.type;nD(n)&&n!==mg&&!t.has(n)&&t.set(n,$t.use(BS(n))),e=e.return}return t}function sD(){const s=iD();return $t.useMemo(()=>Array.from(s.keys()).reduce((t,e)=>n=>$t.createElement(t,null,$t.createElement(e.Provider,{...n,value:s.get(e)})),t=>$t.createElement(zS,{...t})),[s])}function HS(s){let t=s.root;for(;t.getState().previousRoot;)t=t.getState().previousRoot;return t}const VS=s=>s&&s.isOrthographicCamera,aD=s=>s&&s.hasOwnProperty("current"),rD=s=>s!=null&&(typeof s=="string"||typeof s=="number"||s.isColor),gc=((s,t)=>typeof window<"u"&&(((s=window.document)==null?void 0:s.createElement)||((t=window.navigator)==null?void 0:t.product)==="ReactNative"))()?$t.useLayoutEffect:$t.useEffect;function GS(s){const t=$t.useRef(s);return gc(()=>void(t.current=s),[s]),t}function oD(){const s=FS(),t=sD();return $t.useMemo(()=>({children:e})=>{const i=!!pg(s,!0,o=>o.type===$t.StrictMode)?$t.StrictMode:$t.Fragment;return Vt.jsx(i,{children:Vt.jsx(t,{children:e})})},[s,t])}function lD({set:s}){return gc(()=>(s(new Promise(()=>null)),()=>s(!1)),[s]),null}const cD=(s=>(s=class extends $t.Component{constructor(...e){super(...e),this.state={error:!1}}componentDidCatch(e){this.props.set(e)}render(){return this.state.error?null:this.props.children}},s.getDerivedStateFromError=()=>({error:!0}),s))();function kS(s){var t;const e=typeof window<"u"?(t=window.devicePixelRatio)!=null?t:2:1;return Array.isArray(s)?Math.min(Math.max(s[0],e),s[1]):s}function vo(s){var t;return(t=s.__r3f)==null?void 0:t.root.getState()}const $e={obj:s=>s===Object(s)&&!$e.arr(s)&&typeof s!="function",fun:s=>typeof s=="function",str:s=>typeof s=="string",num:s=>typeof s=="number",boo:s=>typeof s=="boolean",und:s=>s===void 0,nul:s=>s===null,arr:s=>Array.isArray(s),equ(s,t,{arrays:e="shallow",objects:n="reference",strict:i=!0}={}){if(typeof s!=typeof t||!!s!=!!t)return!1;if($e.str(s)||$e.num(s)||$e.boo(s))return s===t;const o=$e.obj(s);if(o&&n==="reference")return s===t;const l=$e.arr(s);if(l&&e==="reference")return s===t;if((l||o)&&s===t)return!0;let c;for(c in s)if(!(c in t))return!1;if(o&&e==="shallow"&&n==="shallow"){for(c in i?t:s)if(!$e.equ(s[c],t[c],{strict:i,objects:"reference"}))return!1}else for(c in i?t:s)if(s[c]!==t[c])return!1;if($e.und(c)){if(l&&s.length===0&&t.length===0||o&&Object.keys(s).length===0&&Object.keys(t).length===0)return!0;if(s!==t)return!1}return!0}};function uD(s){const t={nodes:{},materials:{},meshes:{}};return s&&s.traverse(e=>{e.name&&(t.nodes[e.name]=e),e.material&&!t.materials[e.material.name]&&(t.materials[e.material.name]=e.material),e.isMesh&&!t.meshes[e.name]&&(t.meshes[e.name]=e)}),t}function hD(s){s.type!=="Scene"&&(s.dispose==null||s.dispose());for(const t in s){const e=s[t];e?.type!=="Scene"&&(e==null||e.dispose==null||e.dispose())}}const WS=["children","key","ref"];function fD(s){const t={};for(const e in s)WS.includes(e)||(t[e]=s[e]);return t}function Vh(s,t,e,n){const i=s;let o=i?.__r3f;return o||(o={root:t,type:e,parent:null,children:[],props:fD(n),object:i,eventCount:0,handlers:{},isHidden:!1},i&&(i.__r3f=o)),o}function ac(s,t){let e=s[t];if(!t.includes("-"))return{root:s,key:t,target:e};e=s;for(const i of t.split("-")){var n;t=i,s=e,e=(n=e)==null?void 0:n[t]}return{root:s,key:t,target:e}}const vy=/-\d+$/;function Gh(s,t){if($e.str(t.props.attach)){if(vy.test(t.props.attach)){const i=t.props.attach.replace(vy,""),{root:o,key:l}=ac(s.object,i);Array.isArray(o[l])||(o[l]=[])}const{root:e,key:n}=ac(s.object,t.props.attach);t.previousAttach=e[n],e[n]=t.object}else $e.fun(t.props.attach)&&(t.previousAttach=t.props.attach(s.object,t.object))}function kh(s,t){if($e.str(t.props.attach)){const{root:e,key:n}=ac(s.object,t.props.attach),i=t.previousAttach;i===void 0?delete e[n]:e[n]=i}else t.previousAttach==null||t.previousAttach(s.object,t.object);delete t.previousAttach}const xm=[...WS,"args","dispose","attach","object","onUpdate","dispose"],_y=new Map;function dD(s){let t=_y.get(s.constructor);try{t||(t=new s.constructor,_y.set(s.constructor,t))}catch{}return t}function pD(s,t){const e={};for(const n in t)if(!xm.includes(n)&&!$e.equ(t[n],s.props[n])){e[n]=t[n];for(const i in t)i.startsWith(`${n}-`)&&(e[i]=t[i])}for(const n in s.props){if(xm.includes(n)||t.hasOwnProperty(n))continue;const{root:i,key:o}=ac(s.object,n);if(i.constructor&&i.constructor.length===0){const l=dD(i);$e.und(l)||(e[o]=l[o])}else e[o]=0}return e}const mD=["map","emissiveMap","sheenColorMap","specularColorMap","envMap"],gD=/^on(Pointer|Click|DoubleClick|ContextMenu|Wheel)/;function da(s,t){var e;const n=s.__r3f,i=n&&HS(n).getState(),o=n?.eventCount;for(const c in t){let h=t[c];if(xm.includes(c))continue;if(n&&gD.test(c)){typeof h=="function"?n.handlers[c]=h:delete n.handlers[c],n.eventCount=Object.keys(n.handlers).length;continue}if(h===void 0)continue;let{root:f,key:p,target:m}=ac(s,c);if(m instanceof No&&h instanceof No)m.mask=h.mask;else if(m instanceof kt&&rD(h))m.set(h);else if(m!==null&&typeof m=="object"&&typeof m.set=="function"&&typeof m.copy=="function"&&h!=null&&h.constructor&&m.constructor===h.constructor)m.copy(h);else if(m!==null&&typeof m=="object"&&typeof m.set=="function"&&Array.isArray(h))typeof m.fromArray=="function"?m.fromArray(h):m.set(...h);else if(m!==null&&typeof m=="object"&&typeof m.set=="function"&&typeof h=="number")typeof m.setScalar=="function"?m.setScalar(h):m.set(h);else{var l;f[p]=h,i&&!i.linear&&mD.includes(p)&&(l=f[p])!=null&&l.isTexture&&f[p].format===Hn&&f[p].type===Ii&&(f[p].colorSpace=Fn)}}if(n!=null&&n.parent&&i!=null&&i.internal&&(e=n.object)!=null&&e.isObject3D&&o!==n.eventCount){const c=n.object,h=i.internal.interaction.indexOf(c);h>-1&&i.internal.interaction.splice(h,1),n.eventCount&&c.raycast!==null&&i.internal.interaction.push(c)}return n&&n.props.attach===void 0&&(n.object.isBufferGeometry?n.props.attach="geometry":n.object.isMaterial&&(n.props.attach="material")),n&&Go(n),s}function Go(s){var t;if(!s.parent)return;s.props.onUpdate==null||s.props.onUpdate(s.object);const e=(t=s.root)==null||t.getState==null?void 0:t.getState();e&&e.internal.frames===0&&e.invalidate()}function vD(s,t){s.manual||(VS(s)?(s.left=t.width/-2,s.right=t.width/2,s.top=t.height/2,s.bottom=t.height/-2):s.aspect=t.width/t.height,s.updateProjectionMatrix())}const Kn=s=>s?.isObject3D;function Xu(s){return(s.eventObject||s.object).uuid+"/"+s.index+s.instanceId}function XS(s,t,e,n){const i=e.get(t);i&&(e.delete(t),e.size===0&&(s.delete(n),i.target.releasePointerCapture(n)))}function _D(s,t){const{internal:e}=s.getState();e.interaction=e.interaction.filter(n=>n!==t),e.initialHits=e.initialHits.filter(n=>n!==t),e.hovered.forEach((n,i)=>{(n.eventObject===t||n.object===t)&&e.hovered.delete(i)}),e.capturedMap.forEach((n,i)=>{XS(e.capturedMap,t,n,i)})}function yD(s){function t(h){const{internal:f}=s.getState(),p=h.offsetX-f.initialClick[0],m=h.offsetY-f.initialClick[1];return Math.round(Math.sqrt(p*p+m*m))}function e(h){return h.filter(f=>["Move","Over","Enter","Out","Leave"].some(p=>{var m;return(m=f.__r3f)==null?void 0:m.handlers["onPointer"+p]}))}function n(h,f){const p=s.getState(),m=new Set,g=[],v=f?f(p.internal.interaction):p.internal.interaction;for(let _=0;_<v.length;_++){const E=vo(v[_]);E&&(E.raycaster.camera=void 0)}p.previousRoot||p.events.compute==null||p.events.compute(h,p);function x(_){const E=vo(_);if(!E||!E.events.enabled||E.raycaster.camera===null)return[];if(E.raycaster.camera===void 0){var A;E.events.compute==null||E.events.compute(h,E,(A=E.previousRoot)==null?void 0:A.getState()),E.raycaster.camera===void 0&&(E.raycaster.camera=null)}return E.raycaster.camera?E.raycaster.intersectObject(_,!0):[]}let b=v.flatMap(x).sort((_,E)=>{const A=vo(_.object),T=vo(E.object);return!A||!T?_.distance-E.distance:T.events.priority-A.events.priority||_.distance-E.distance}).filter(_=>{const E=Xu(_);return m.has(E)?!1:(m.add(E),!0)});p.events.filter&&(b=p.events.filter(b,p));for(const _ of b){let E=_.object;for(;E;){var S;(S=E.__r3f)!=null&&S.eventCount&&g.push({..._,eventObject:E}),E=E.parent}}if("pointerId"in h&&p.internal.capturedMap.has(h.pointerId))for(let _ of p.internal.capturedMap.get(h.pointerId).values())m.has(Xu(_.intersection))||g.push(_.intersection);return g}function i(h,f,p,m){if(h.length){const g={stopped:!1};for(const v of h){let x=vo(v.object);if(x||v.object.traverseAncestors(b=>{const S=vo(b);if(S)return x=S,!1}),x){const{raycaster:b,pointer:S,camera:_,internal:E}=x,A=new I(S.x,S.y,0).unproject(_),T=C=>{var w,B;return(w=(B=E.capturedMap.get(C))==null?void 0:B.has(v.eventObject))!=null?w:!1},U=C=>{const w={intersection:v,target:f.target};E.capturedMap.has(C)?E.capturedMap.get(C).set(v.eventObject,w):E.capturedMap.set(C,new Map([[v.eventObject,w]])),f.target.setPointerCapture(C)},D=C=>{const w=E.capturedMap.get(C);w&&XS(E.capturedMap,v.eventObject,w,C)};let P={};for(let C in f){let w=f[C];typeof w!="function"&&(P[C]=w)}let O={...v,...P,pointer:S,intersections:h,stopped:g.stopped,delta:p,unprojectedPoint:A,ray:b.ray,camera:_,stopPropagation(){const C="pointerId"in f&&E.capturedMap.get(f.pointerId);if((!C||C.has(v.eventObject))&&(O.stopped=g.stopped=!0,E.hovered.size&&Array.from(E.hovered.values()).find(w=>w.eventObject===v.eventObject))){const w=h.slice(0,h.indexOf(v));o([...w,v])}},target:{hasPointerCapture:T,setPointerCapture:U,releasePointerCapture:D},currentTarget:{hasPointerCapture:T,setPointerCapture:U,releasePointerCapture:D},nativeEvent:f};if(m(O),g.stopped===!0)break}}}return h}function o(h){const{internal:f}=s.getState();for(const p of f.hovered.values())if(!h.length||!h.find(m=>m.object===p.object&&m.index===p.index&&m.instanceId===p.instanceId)){const g=p.eventObject.__r3f;if(f.hovered.delete(Xu(p)),g!=null&&g.eventCount){const v=g.handlers,x={...p,intersections:h};v.onPointerOut==null||v.onPointerOut(x),v.onPointerLeave==null||v.onPointerLeave(x)}}}function l(h,f){for(let p=0;p<f.length;p++){const m=f[p].__r3f;m==null||m.handlers.onPointerMissed==null||m.handlers.onPointerMissed(h)}}function c(h){switch(h){case"onPointerLeave":case"onPointerCancel":return()=>o([]);case"onLostPointerCapture":return f=>{const{internal:p}=s.getState();"pointerId"in f&&p.capturedMap.has(f.pointerId)&&requestAnimationFrame(()=>{p.capturedMap.has(f.pointerId)&&(p.capturedMap.delete(f.pointerId),o([]))})}}return function(p){const{onPointerMissed:m,internal:g}=s.getState();g.lastEvent.current=p;const v=h==="onPointerMove",x=h==="onClick"||h==="onContextMenu"||h==="onDoubleClick",S=n(p,v?e:void 0),_=x?t(p):0;h==="onPointerDown"&&(g.initialClick=[p.offsetX,p.offsetY],g.initialHits=S.map(A=>A.eventObject)),x&&!S.length&&_<=2&&(l(p,g.interaction),m&&m(p)),v&&o(S);function E(A){const T=A.eventObject,U=T.__r3f;if(!(U!=null&&U.eventCount))return;const D=U.handlers;if(v){if(D.onPointerOver||D.onPointerEnter||D.onPointerOut||D.onPointerLeave){const P=Xu(A),O=g.hovered.get(P);O?O.stopped&&A.stopPropagation():(g.hovered.set(P,A),D.onPointerOver==null||D.onPointerOver(A),D.onPointerEnter==null||D.onPointerEnter(A))}D.onPointerMove==null||D.onPointerMove(A)}else{const P=D[h];P?(!x||g.initialHits.includes(T))&&(l(p,g.interaction.filter(O=>!g.initialHits.includes(O))),P(A)):x&&g.initialHits.includes(T)&&l(p,g.interaction.filter(O=>!g.initialHits.includes(O)))}}i(S,p,_,E)}}return{handlePointer:c}}const yy=s=>!!(s!=null&&s.render),qS=$t.createContext(null),xD=(s,t)=>{const e=X3((c,h)=>{const f=new I,p=new I,m=new I;function g(_=h().camera,E=p,A=h().size){const{width:T,height:U,top:D,left:P}=A,O=T/U;E.isVector3?m.copy(E):m.set(...E);const C=_.getWorldPosition(f).distanceTo(m);if(VS(_))return{width:T/_.zoom,height:U/_.zoom,top:D,left:P,factor:1,distance:C,aspect:O};{const w=_.fov*Math.PI/180,B=2*Math.tan(w/2)*C,tt=B*(T/U);return{width:tt,height:B,top:D,left:P,factor:T/tt,distance:C,aspect:O}}}let v;const x=_=>c(E=>({performance:{...E.performance,current:_}})),b=new dt;return{set:c,get:h,gl:null,camera:null,raycaster:null,events:{priority:1,enabled:!0,connected:!1},scene:null,xr:null,invalidate:(_=1)=>s(h(),_),advance:(_,E)=>t(_,E,h()),legacy:!1,linear:!1,flat:!1,controls:null,clock:new lg,pointer:b,mouse:b,frameloop:"always",onPointerMissed:void 0,performance:{current:1,min:.5,max:1,debounce:200,regress:()=>{const _=h();v&&clearTimeout(v),_.performance.current!==_.performance.min&&x(_.performance.min),v=setTimeout(()=>x(h().performance.max),_.performance.debounce)}},size:{width:0,height:0,top:0,left:0},viewport:{initialDpr:0,dpr:0,width:0,height:0,top:0,left:0,aspect:0,distance:0,factor:0,getCurrentViewport:g},setEvents:_=>c(E=>({...E,events:{...E.events,..._}})),setSize:(_,E,A=0,T=0)=>{const U=h().camera,D={width:_,height:E,top:A,left:T};c(P=>({size:D,viewport:{...P.viewport,...g(U,p,D)}}))},setDpr:_=>c(E=>{const A=kS(_);return{viewport:{...E.viewport,dpr:A,initialDpr:E.viewport.initialDpr||A}}}),setFrameloop:(_="always")=>{const E=h().clock;E.stop(),E.elapsedTime=0,_!=="never"&&(E.start(),E.elapsedTime=0),c(()=>({frameloop:_}))},previousRoot:void 0,internal:{interaction:[],hovered:new Map,subscribers:[],initialClick:[0,0],initialHits:[],capturedMap:new Map,lastEvent:$t.createRef(),active:!1,frames:0,priority:0,subscribe:(_,E,A)=>{const T=h().internal;return T.priority=T.priority+(E>0?1:0),T.subscribers.push({ref:_,priority:E,store:A}),T.subscribers=T.subscribers.sort((U,D)=>U.priority-D.priority),()=>{const U=h().internal;U!=null&&U.subscribers&&(U.priority=U.priority-(E>0?1:0),U.subscribers=U.subscribers.filter(D=>D.ref!==_))}}}}}),n=e.getState();let i=n.size,o=n.viewport.dpr,l=n.camera;return e.subscribe(()=>{const{camera:c,size:h,viewport:f,gl:p,set:m}=e.getState();if(h.width!==i.width||h.height!==i.height||f.dpr!==o){i=h,o=f.dpr,vD(c,h),f.dpr>0&&p.setPixelRatio(f.dpr);const g=typeof HTMLCanvasElement<"u"&&p.domElement instanceof HTMLCanvasElement;p.setSize(h.width,h.height,g)}c!==l&&(l=c,m(g=>({viewport:{...g.viewport,...g.viewport.getCurrentViewport(c)}})))}),e.subscribe(c=>s(c)),e};function YS(){const s=$t.useContext(qS);if(!s)throw new Error("R3F: Hooks can only be used within the Canvas component!");return s}function ha(s=e=>e,t){return YS()(s,t)}function jS(s,t=0){const e=YS(),n=e.getState().internal.subscribe,i=GS(s);return gc(()=>n(i,t,e),[t,n,e]),null}const xy=new WeakMap,SD=s=>{var t;return typeof s=="function"&&(s==null||(t=s.prototype)==null?void 0:t.constructor)===s};function ZS(s,t){return function(e,...n){let i;return SD(e)?(i=xy.get(e),i||(i=new e,xy.set(e,i))):i=e,s&&s(i),Promise.all(n.map(o=>new Promise((l,c)=>i.load(o,h=>{Kn(h?.scene)&&Object.assign(h,uD(h.scene)),l(h)},t,h=>c(new Error(`Could not load ${o}: ${h?.message}`))))))}}function gg(s,t,e,n){const i=Array.isArray(t)?t:[t],o=Y3(ZS(e,n),[s,...i],{equal:$e.equ});return Array.isArray(t)?o:o[0]}gg.preload=function(s,t,e){const n=Array.isArray(t)?t:[t];return j3(ZS(e),[s,...n])};gg.clear=function(s,t){const e=Array.isArray(t)?t:[t];return Z3([s,...e])};function MD(s){const t=tD(s);return t.injectIntoDevTools({bundleType:0,rendererPackageName:"@react-three/fiber",version:$t.version}),t}const KS=0,Oo={},bD=/^three(?=[A-Z])/,Af=s=>`${s[0].toUpperCase()}${s.slice(1)}`;let ED=0;const TD=s=>typeof s=="function";function AD(s){if(TD(s)){const t=`${ED++}`;return Oo[t]=s,t}else Object.assign(Oo,s)}function JS(s,t){const e=Af(s),n=Oo[e];if(s!=="primitive"&&!n)throw new Error(`R3F: ${e} is not part of the THREE namespace! Did you forget to extend? See: https://docs.pmnd.rs/react-three-fiber/api/objects#using-3rd-party-objects-declaratively`);if(s==="primitive"&&!t.object)throw new Error("R3F: Primitives without 'object' are invalid!");if(t.args!==void 0&&!Array.isArray(t.args))throw new Error("R3F: The args prop must be an array!")}function wD(s,t,e){var n;return s=Af(s)in Oo?s:s.replace(bD,""),JS(s,t),s==="primitive"&&(n=t.object)!=null&&n.__r3f&&delete t.object.__r3f,Vh(t.object,e,s,t)}function CD(s){if(!s.isHidden){var t;s.props.attach&&(t=s.parent)!=null&&t.object?kh(s.parent,s):Kn(s.object)&&(s.object.visible=!1),s.isHidden=!0,Go(s)}}function QS(s){if(s.isHidden){var t;s.props.attach&&(t=s.parent)!=null&&t.object?Gh(s.parent,s):Kn(s.object)&&s.props.visible!==!1&&(s.object.visible=!0),s.isHidden=!1,Go(s)}}function vg(s,t,e){const n=t.root.getState();if(!(!s.parent&&s.object!==n.scene)){if(!t.object){var i,o;const l=Oo[Af(t.type)];t.object=(i=t.props.object)!=null?i:new l(...(o=t.props.args)!=null?o:[]),t.object.__r3f=t}if(da(t.object,t.props),t.props.attach)Gh(s,t);else if(Kn(t.object)&&Kn(s.object)){const l=s.object.children.indexOf(e?.object);if(e&&l!==-1){const c=s.object.children.indexOf(t.object);if(c!==-1){s.object.children.splice(c,1);const h=c<l?l-1:l;s.object.children.splice(h,0,t.object)}else t.object.parent=s.object,s.object.children.splice(l,0,t.object),t.object.dispatchEvent({type:"added"}),s.object.dispatchEvent({type:"childadded",child:t.object})}else s.object.add(t.object)}for(const l of t.children)vg(t,l);Go(t)}}function jp(s,t){t&&(t.parent=s,s.children.push(t),vg(s,t))}function Sy(s,t,e){if(!t||!e)return;t.parent=s;const n=s.children.indexOf(e);n!==-1?s.children.splice(n,0,t):s.children.push(t),vg(s,t,e)}function $S(s){if(typeof s.dispose=="function"){const t=()=>{try{s.dispose()}catch{}};typeof IS_REACT_ACT_ENVIRONMENT<"u"?t():gy.unstable_scheduleCallback(gy.unstable_IdlePriority,t)}}function Sm(s,t,e){if(!t)return;t.parent=null;const n=s.children.indexOf(t);n!==-1&&s.children.splice(n,1),t.props.attach?kh(s,t):Kn(t.object)&&Kn(s.object)&&(s.object.remove(t.object),_D(HS(t),t.object));const i=t.props.dispose!==null&&e!==!1;for(let o=t.children.length-1;o>=0;o--){const l=t.children[o];Sm(t,l,i)}t.children.length=0,delete t.object.__r3f,i&&t.type!=="primitive"&&t.object.type!=="Scene"&&$S(t.object),e===void 0&&Go(t)}function RD(s,t){for(const e of[s,s.alternate])if(e!==null)if(typeof e.ref=="function"){e.refCleanup==null||e.refCleanup();const n=e.ref(t);typeof n=="function"&&(e.refCleanup=n)}else e.ref&&(e.ref.current=t)}const th=[];function DD(){for(const[e]of th){const n=e.parent;if(n){e.props.attach?kh(n,e):Kn(e.object)&&Kn(n.object)&&n.object.remove(e.object);for(const i of e.children)i.props.attach?kh(e,i):Kn(i.object)&&Kn(e.object)&&e.object.remove(i.object)}e.isHidden&&QS(e),e.object.__r3f&&delete e.object.__r3f,e.type!=="primitive"&&$S(e.object)}for(const[e,n,i]of th){e.props=n;const o=e.parent;if(o){var s,t;const l=Oo[Af(e.type)];e.object=(s=e.props.object)!=null?s:new l(...(t=e.props.args)!=null?t:[]),e.object.__r3f=e,RD(i,e.object),da(e.object,e.props),e.props.attach?Gh(o,e):Kn(e.object)&&Kn(o.object)&&o.object.add(e.object);for(const c of e.children)c.props.attach?Gh(e,c):Kn(c.object)&&Kn(e.object)&&e.object.add(c.object);Go(e)}}th.length=0}const Zp=()=>{},My={};let qu=KS;const UD=0,ND=4,Mm=MD({isPrimaryRenderer:!1,warnsIfNotActing:!1,supportsMutation:!0,supportsPersistence:!1,supportsHydration:!1,createInstance:wD,removeChild:Sm,appendChild:jp,appendInitialChild:jp,insertBefore:Sy,appendChildToContainer(s,t){const e=s.getState().scene.__r3f;!t||!e||jp(e,t)},removeChildFromContainer(s,t){const e=s.getState().scene.__r3f;!t||!e||Sm(e,t)},insertInContainerBefore(s,t,e){const n=s.getState().scene.__r3f;!t||!e||!n||Sy(n,t,e)},getRootHostContext:()=>My,getChildHostContext:()=>My,commitUpdate(s,t,e,n,i){var o,l,c;JS(t,n);let h=!1;if((s.type==="primitive"&&e.object!==n.object||((o=n.args)==null?void 0:o.length)!==((l=e.args)==null?void 0:l.length)||(c=n.args)!=null&&c.some((p,m)=>{var g;return p!==((g=e.args)==null?void 0:g[m])}))&&(h=!0),h)th.push([s,{...n},i]);else{const p=pD(s,n);Object.keys(p).length&&(Object.assign(s.props,p),da(s.object,p))}(i.sibling===null||(i.flags&ND)===UD)&&DD()},finalizeInitialChildren:()=>!1,commitMount(){},getPublicInstance:s=>s?.object,prepareForCommit:()=>null,preparePortalMount:s=>Vh(s.getState().scene,s,"",{}),resetAfterCommit:()=>{},shouldSetTextContent:()=>!1,clearContainer:()=>!1,hideInstance:CD,unhideInstance:QS,createTextInstance:Zp,hideTextInstance:Zp,unhideTextInstance:Zp,scheduleTimeout:typeof setTimeout=="function"?setTimeout:void 0,cancelTimeout:typeof clearTimeout=="function"?clearTimeout:void 0,noTimeout:-1,getInstanceFromNode:()=>null,beforeActiveInstanceBlur(){},afterActiveInstanceBlur(){},detachDeletedInstance(){},prepareScopeUpdate(){},getInstanceFromScope:()=>null,shouldAttemptEagerTransition:()=>!1,trackSchedulerEvent:()=>{},resolveEventType:()=>null,resolveEventTimeStamp:()=>-1.1,requestPostPaintCallback(){},maySuspendCommit:()=>!1,preloadInstance:()=>!0,startSuspendingCommit(){},suspendInstance(){},waitForCommitToBeReady:()=>null,NotPendingTransition:null,HostTransitionContext:$t.createContext(null),setCurrentUpdatePriority(s){qu=s},getCurrentUpdatePriority(){return qu},resolveUpdatePriority(){var s;if(qu!==KS)return qu;switch(typeof window<"u"&&((s=window.event)==null?void 0:s.type)){case"click":case"contextmenu":case"dblclick":case"pointercancel":case"pointerdown":case"pointerup":return Ku.DiscreteEventPriority;case"pointermove":case"pointerout":case"pointerover":case"pointerenter":case"pointerleave":case"wheel":return Ku.ContinuousEventPriority;default:return Ku.DefaultEventPriority}},resetFormInstance(){}}),_r=new Map,_o={objects:"shallow",strict:!1};function LD(s,t){if(!t&&typeof HTMLCanvasElement<"u"&&s instanceof HTMLCanvasElement&&s.parentElement){const{width:e,height:n,top:i,left:o}=s.parentElement.getBoundingClientRect();return{width:e,height:n,top:i,left:o}}else if(!t&&typeof OffscreenCanvas<"u"&&s instanceof OffscreenCanvas)return{width:s.width,height:s.height,top:0,left:0};return{width:0,height:0,top:0,left:0,...t}}function PD(s){const t=_r.get(s),e=t?.fiber,n=t?.store;t&&console.warn("R3F.createRoot should only be called once!");const i=typeof reportError=="function"?reportError:console.error,o=n||xD(Tm,Ey),l=e||Mm.createContainer(o,Ku.ConcurrentRoot,null,!1,null,"",i,i,i,null);t||_r.set(s,{fiber:l,store:o});let c,h,f=!1,p=null;return{async configure(m={}){let g;p=new Promise(xt=>g=xt);let{gl:v,size:x,scene:b,events:S,onCreated:_,shadows:E=!1,linear:A=!1,flat:T=!1,legacy:U=!1,orthographic:D=!1,frameloop:P="always",dpr:O=[1,2],performance:C,raycaster:w,camera:B,onPointerMissed:tt}=m,X=o.getState(),Z=X.gl;if(!X.gl){const xt={canvas:s,powerPreference:"high-performance",antialias:!0,alpha:!0},Ot=typeof v=="function"?await v(xt):v;yy(Ot)?Z=Ot:Z=new LS({...xt,...v}),X.set({gl:Z})}let ot=X.raycaster;ot||X.set({raycaster:ot=new ES});const{params:k,...et}=w||{};if($e.equ(et,ot,_o)||da(ot,{...et}),$e.equ(k,ot.params,_o)||da(ot,{params:{...ot.params,...k}}),!X.camera||X.camera===h&&!$e.equ(h,B,_o)){h=B;const xt=B?.isCamera,Ot=xt?B:D?new ma(0,0,0,0,.1,1e3):new cn(75,0,.1,1e3);xt||(Ot.position.z=5,B&&(da(Ot,B),Ot.manual||("aspect"in B||"left"in B||"right"in B||"bottom"in B||"top"in B)&&(Ot.manual=!0,Ot.updateProjectionMatrix())),!X.camera&&!(B!=null&&B.rotation)&&Ot.lookAt(0,0,0)),X.set({camera:Ot}),ot.camera=Ot}if(!X.scene){let xt;b!=null&&b.isScene?(xt=b,Vh(xt,o,"",{})):(xt=new Gm,Vh(xt,o,"",{}),b&&da(xt,b)),X.set({scene:xt})}S&&!X.events.handlers&&X.set({events:S(o)});const q=LD(s,x);if($e.equ(q,X.size,_o)||X.setSize(q.width,q.height,q.top,q.left),O&&X.viewport.dpr!==kS(O)&&X.setDpr(O),X.frameloop!==P&&X.setFrameloop(P),X.onPointerMissed||X.set({onPointerMissed:tt}),C&&!$e.equ(C,X.performance,_o)&&X.set(xt=>({performance:{...xt.performance,...C}})),!X.xr){var ct;const xt=(jt,at)=>{const Lt=o.getState();Lt.frameloop!=="never"&&Ey(jt,!0,Lt,at)},Ot=()=>{const jt=o.getState();jt.gl.xr.enabled=jt.gl.xr.isPresenting,jt.gl.xr.setAnimationLoop(jt.gl.xr.isPresenting?xt:null),jt.gl.xr.isPresenting||Tm(jt)},ne={connect(){const jt=o.getState().gl;jt.xr.addEventListener("sessionstart",Ot),jt.xr.addEventListener("sessionend",Ot)},disconnect(){const jt=o.getState().gl;jt.xr.removeEventListener("sessionstart",Ot),jt.xr.removeEventListener("sessionend",Ot)}};typeof((ct=Z.xr)==null?void 0:ct.addEventListener)=="function"&&ne.connect(),X.set({xr:ne})}if(Z.shadowMap){const xt=Z.shadowMap.enabled,Ot=Z.shadowMap.type;if(Z.shadowMap.enabled=!!E,$e.boo(E))Z.shadowMap.type=Nl;else if($e.str(E)){var vt;const ne={basic:Ly,percentage:qh,soft:Nl,variance:qi};Z.shadowMap.type=(vt=ne[E])!=null?vt:Nl}else $e.obj(E)&&Object.assign(Z.shadowMap,E);(xt!==Z.shadowMap.enabled||Ot!==Z.shadowMap.type)&&(Z.shadowMap.needsUpdate=!0)}return Re.enabled=!U,f||(Z.outputColorSpace=A?va:Fn,Z.toneMapping=T?ls:wm),X.legacy!==U&&X.set(()=>({legacy:U})),X.linear!==A&&X.set(()=>({linear:A})),X.flat!==T&&X.set(()=>({flat:T})),v&&!$e.fun(v)&&!yy(v)&&!$e.equ(v,Z,_o)&&da(Z,v),c=_,f=!0,g(),this},render(m){return!f&&!p&&this.configure(),p.then(()=>{Mm.updateContainer(Vt.jsx(ID,{store:o,children:m,onCreated:c,rootElement:s}),l,null,()=>{})}),o},unmount(){tM(s)}}}function ID({store:s,children:t,onCreated:e,rootElement:n}){return gc(()=>{const i=s.getState();i.set(o=>({internal:{...o.internal,active:!0}})),e&&e(i),s.getState().events.connected||i.events.connect==null||i.events.connect(n)},[]),Vt.jsx(qS.Provider,{value:s,children:t})}function tM(s,t){const e=_r.get(s),n=e?.fiber;if(n){const i=e?.store.getState();i&&(i.internal.active=!1),Mm.updateContainer(null,n,null,()=>{i&&setTimeout(()=>{try{var o,l,c,h;i.events.disconnect==null||i.events.disconnect(),(o=i.gl)==null||(l=o.renderLists)==null||l.dispose==null||l.dispose(),(c=i.gl)==null||c.forceContextLoss==null||c.forceContextLoss(),(h=i.gl)!=null&&h.xr&&i.xr.disconnect(),hD(i.scene),_r.delete(s)}catch{}},500)})}}const OD=new Set,BD=new Set,zD=new Set;function Kp(s,t){if(s.size)for(const{callback:e}of s.values())e(t)}function Gl(s,t){switch(s){case"before":return Kp(OD,t);case"after":return Kp(BD,t);case"tail":return Kp(zD,t)}}let Jp,Qp;function bm(s,t,e){let n=t.clock.getDelta();t.frameloop==="never"&&typeof s=="number"&&(n=s-t.clock.elapsedTime,t.clock.oldTime=t.clock.elapsedTime,t.clock.elapsedTime=s),Jp=t.internal.subscribers;for(let i=0;i<Jp.length;i++)Qp=Jp[i],Qp.ref.current(Qp.store.getState(),n,e);return!t.internal.priority&&t.gl.render&&t.gl.render(t.scene,t.camera),t.internal.frames=Math.max(0,t.internal.frames-1),t.frameloop==="always"?1:t.internal.frames}let Wh=!1,Em=!1,$p,by,yo;function eM(s){by=requestAnimationFrame(eM),Wh=!0,$p=0,Gl("before",s),Em=!0;for(const e of _r.values()){var t;yo=e.store.getState(),yo.internal.active&&(yo.frameloop==="always"||yo.internal.frames>0)&&!((t=yo.gl.xr)!=null&&t.isPresenting)&&($p+=bm(s,yo))}if(Em=!1,Gl("after",s),$p===0)return Gl("tail",s),Wh=!1,cancelAnimationFrame(by)}function Tm(s,t=1){var e;if(!s)return _r.forEach(n=>Tm(n.store.getState(),t));(e=s.gl.xr)!=null&&e.isPresenting||!s.internal.active||s.frameloop==="never"||(t>1?s.internal.frames=Math.min(60,s.internal.frames+t):Em?s.internal.frames=2:s.internal.frames=1,Wh||(Wh=!0,requestAnimationFrame(eM)))}function Ey(s,t=!0,e,n){if(t&&Gl("before",s),e)bm(s,e,n);else for(const i of _r.values())bm(s,i.store.getState());t&&Gl("after",s)}const tm={onClick:["click",!1],onContextMenu:["contextmenu",!1],onDoubleClick:["dblclick",!1],onWheel:["wheel",!0],onPointerDown:["pointerdown",!0],onPointerUp:["pointerup",!0],onPointerLeave:["pointerleave",!0],onPointerMove:["pointermove",!0],onPointerCancel:["pointercancel",!0],onLostPointerCapture:["lostpointercapture",!0]};function FD(s){const{handlePointer:t}=yD(s);return{priority:1,enabled:!0,compute(e,n,i){n.pointer.set(e.offsetX/n.size.width*2-1,-(e.offsetY/n.size.height)*2+1),n.raycaster.setFromCamera(n.pointer,n.camera)},connected:void 0,handlers:Object.keys(tm).reduce((e,n)=>({...e,[n]:t(n)}),{}),update:()=>{var e;const{events:n,internal:i}=s.getState();(e=i.lastEvent)!=null&&e.current&&n.handlers&&n.handlers.onPointerMove(i.lastEvent.current)},connect:e=>{const{set:n,events:i}=s.getState();if(i.disconnect==null||i.disconnect(),n(o=>({events:{...o.events,connected:e}})),i.handlers)for(const o in i.handlers){const l=i.handlers[o],[c,h]=tm[o];e.addEventListener(c,l,{passive:h})}},disconnect:()=>{const{set:e,events:n}=s.getState();if(n.connected){if(n.handlers)for(const i in n.handlers){const o=n.handlers[i],[l]=tm[i];n.connected.removeEventListener(l,o)}e(i=>({events:{...i.events,connected:void 0}}))}}}}function Ty(s,t){let e;return(...n)=>{window.clearTimeout(e),e=window.setTimeout(()=>s(...n),t)}}function HD({debounce:s,scroll:t,polyfill:e,offsetSize:n}={debounce:0,scroll:!1,offsetSize:!1}){const i=e||(typeof window>"u"?class{}:window.ResizeObserver);if(!i)throw new Error("This browser does not support ResizeObserver out of the box. See: https://github.com/react-spring/react-use-measure/#resize-observer-polyfills");const[o,l]=$t.useState({left:0,top:0,width:0,height:0,bottom:0,right:0,x:0,y:0}),c=$t.useRef({element:null,scrollContainers:null,resizeObserver:null,lastBounds:o,orientationHandler:null}),h=s?typeof s=="number"?s:s.scroll:null,f=s?typeof s=="number"?s:s.resize:null,p=$t.useRef(!1);$t.useEffect(()=>(p.current=!0,()=>void(p.current=!1)));const[m,g,v]=$t.useMemo(()=>{const _=()=>{if(!c.current.element)return;const{left:E,top:A,width:T,height:U,bottom:D,right:P,x:O,y:C}=c.current.element.getBoundingClientRect(),w={left:E,top:A,width:T,height:U,bottom:D,right:P,x:O,y:C};c.current.element instanceof HTMLElement&&n&&(w.height=c.current.element.offsetHeight,w.width=c.current.element.offsetWidth),Object.freeze(w),p.current&&!WD(c.current.lastBounds,w)&&l(c.current.lastBounds=w)};return[_,f?Ty(_,f):_,h?Ty(_,h):_]},[l,n,h,f]);function x(){c.current.scrollContainers&&(c.current.scrollContainers.forEach(_=>_.removeEventListener("scroll",v,!0)),c.current.scrollContainers=null),c.current.resizeObserver&&(c.current.resizeObserver.disconnect(),c.current.resizeObserver=null),c.current.orientationHandler&&("orientation"in screen&&"removeEventListener"in screen.orientation?screen.orientation.removeEventListener("change",c.current.orientationHandler):"onorientationchange"in window&&window.removeEventListener("orientationchange",c.current.orientationHandler))}function b(){c.current.element&&(c.current.resizeObserver=new i(v),c.current.resizeObserver.observe(c.current.element),t&&c.current.scrollContainers&&c.current.scrollContainers.forEach(_=>_.addEventListener("scroll",v,{capture:!0,passive:!0})),c.current.orientationHandler=()=>{v()},"orientation"in screen&&"addEventListener"in screen.orientation?screen.orientation.addEventListener("change",c.current.orientationHandler):"onorientationchange"in window&&window.addEventListener("orientationchange",c.current.orientationHandler))}const S=_=>{!_||_===c.current.element||(x(),c.current.element=_,c.current.scrollContainers=nM(_),b())};return GD(v,!!t),VD(g),$t.useEffect(()=>{x(),b()},[t,v,g]),$t.useEffect(()=>x,[]),[S,o,m]}function VD(s){$t.useEffect(()=>{const t=s;return window.addEventListener("resize",t),()=>void window.removeEventListener("resize",t)},[s])}function GD(s,t){$t.useEffect(()=>{if(t){const e=s;return window.addEventListener("scroll",e,{capture:!0,passive:!0}),()=>void window.removeEventListener("scroll",e,!0)}},[s,t])}function nM(s){const t=[];if(!s||s===document.body)return t;const{overflow:e,overflowX:n,overflowY:i}=window.getComputedStyle(s);return[e,n,i].some(o=>o==="auto"||o==="scroll")&&t.push(s),[...t,...nM(s.parentElement)]}const kD=["x","y","top","bottom","left","right","width","height"],WD=(s,t)=>kD.every(e=>s[e]===t[e]);function XD({ref:s,children:t,fallback:e,resize:n,style:i,gl:o,events:l=FD,eventSource:c,eventPrefix:h,shadows:f,linear:p,flat:m,legacy:g,orthographic:v,frameloop:x,dpr:b,performance:S,raycaster:_,camera:E,scene:A,onPointerMissed:T,onCreated:U,...D}){$t.useMemo(()=>AD(P3),[]);const P=oD(),[O,C]=HD({scroll:!0,debounce:{scroll:50,resize:0},...n}),w=$t.useRef(null),B=$t.useRef(null);$t.useImperativeHandle(s,()=>w.current);const tt=GS(T),[X,Z]=$t.useState(!1),[ot,k]=$t.useState(!1);if(X)throw X;if(ot)throw ot;const et=$t.useRef(null);gc(()=>{const ct=w.current;if(C.width>0&&C.height>0&&ct){et.current||(et.current=PD(ct));async function vt(){await et.current.configure({gl:o,scene:A,events:l,shadows:f,linear:p,flat:m,legacy:g,orthographic:v,frameloop:x,dpr:b,performance:S,raycaster:_,camera:E,size:C,onPointerMissed:(...xt)=>tt.current==null?void 0:tt.current(...xt),onCreated:xt=>{xt.events.connect==null||xt.events.connect(c?aD(c)?c.current:c:B.current),h&&xt.setEvents({compute:(Ot,ne)=>{const jt=Ot[h+"X"],at=Ot[h+"Y"];ne.pointer.set(jt/ne.size.width*2-1,-(at/ne.size.height)*2+1),ne.raycaster.setFromCamera(ne.pointer,ne.camera)}}),U?.(xt)}}),et.current.render(Vt.jsx(P,{children:Vt.jsx(cD,{set:k,children:Vt.jsx($t.Suspense,{fallback:Vt.jsx(lD,{set:Z}),children:t??null})})}))}vt()}}),$t.useEffect(()=>{const ct=w.current;if(ct)return()=>tM(ct)},[]);const q=c?"none":"auto";return Vt.jsx("div",{ref:B,style:{position:"relative",width:"100%",height:"100%",overflow:"hidden",pointerEvents:q,...i},...D,children:Vt.jsx("div",{ref:O,style:{width:"100%",height:"100%"},children:Vt.jsx("canvas",{ref:w,style:{display:"block"},children:e})})})}function qD(s){return Vt.jsx(zS,{children:Vt.jsx(XD,{...s})})}var YD=Object.defineProperty,jD=(s,t,e)=>t in s?YD(s,t,{enumerable:!0,configurable:!0,writable:!0,value:e}):s[t]=e,ZD=(s,t,e)=>(jD(s,t+"",e),e);class KD{constructor(){ZD(this,"_listeners")}addEventListener(t,e){this._listeners===void 0&&(this._listeners={});const n=this._listeners;n[t]===void 0&&(n[t]=[]),n[t].indexOf(e)===-1&&n[t].push(e)}hasEventListener(t,e){if(this._listeners===void 0)return!1;const n=this._listeners;return n[t]!==void 0&&n[t].indexOf(e)!==-1}removeEventListener(t,e){if(this._listeners===void 0)return;const i=this._listeners[t];if(i!==void 0){const o=i.indexOf(e);o!==-1&&i.splice(o,1)}}dispatchEvent(t){if(this._listeners===void 0)return;const n=this._listeners[t.type];if(n!==void 0){t.target=this;const i=n.slice(0);for(let o=0,l=i.length;o<l;o++)i[o].call(this,t);t.target=null}}}var JD=Object.defineProperty,QD=(s,t,e)=>t in s?JD(s,t,{enumerable:!0,configurable:!0,writable:!0,value:e}):s[t]=e,ue=(s,t,e)=>(QD(s,typeof t!="symbol"?t+"":t,e),e);const Yu=new yr,Ay=new Ls,$D=Math.cos(70*(Math.PI/180)),wy=(s,t)=>(s%t+t)%t;let tU=class extends KD{constructor(t,e){super(),ue(this,"object"),ue(this,"domElement"),ue(this,"enabled",!0),ue(this,"target",new I),ue(this,"minDistance",0),ue(this,"maxDistance",1/0),ue(this,"minZoom",0),ue(this,"maxZoom",1/0),ue(this,"minPolarAngle",0),ue(this,"maxPolarAngle",Math.PI),ue(this,"minAzimuthAngle",-1/0),ue(this,"maxAzimuthAngle",1/0),ue(this,"enableDamping",!1),ue(this,"dampingFactor",.05),ue(this,"enableZoom",!0),ue(this,"zoomSpeed",1),ue(this,"enableRotate",!0),ue(this,"rotateSpeed",1),ue(this,"enablePan",!0),ue(this,"panSpeed",1),ue(this,"screenSpacePanning",!0),ue(this,"keyPanSpeed",7),ue(this,"zoomToCursor",!1),ue(this,"autoRotate",!1),ue(this,"autoRotateSpeed",2),ue(this,"reverseOrbit",!1),ue(this,"reverseHorizontalOrbit",!1),ue(this,"reverseVerticalOrbit",!1),ue(this,"keys",{LEFT:"ArrowLeft",UP:"ArrowUp",RIGHT:"ArrowRight",BOTTOM:"ArrowDown"}),ue(this,"mouseButtons",{LEFT:nr.ROTATE,MIDDLE:nr.DOLLY,RIGHT:nr.PAN}),ue(this,"touches",{ONE:ir.ROTATE,TWO:ir.DOLLY_PAN}),ue(this,"target0"),ue(this,"position0"),ue(this,"zoom0"),ue(this,"_domElementKeyEvents",null),ue(this,"getPolarAngle"),ue(this,"getAzimuthalAngle"),ue(this,"setPolarAngle"),ue(this,"setAzimuthalAngle"),ue(this,"getDistance"),ue(this,"getZoomScale"),ue(this,"listenToKeyEvents"),ue(this,"stopListenToKeyEvents"),ue(this,"saveState"),ue(this,"reset"),ue(this,"update"),ue(this,"connect"),ue(this,"dispose"),ue(this,"dollyIn"),ue(this,"dollyOut"),ue(this,"getScale"),ue(this,"setScale"),this.object=t,this.domElement=e,this.target0=this.target.clone(),this.position0=this.object.position.clone(),this.zoom0=this.object.zoom,this.getPolarAngle=()=>p.phi,this.getAzimuthalAngle=()=>p.theta,this.setPolarAngle=F=>{let $=wy(F,2*Math.PI),Et=p.phi;Et<0&&(Et+=2*Math.PI),$<0&&($+=2*Math.PI);let V=Math.abs($-Et);2*Math.PI-V<V&&($<Et?$+=2*Math.PI:Et+=2*Math.PI),m.phi=$-Et,n.update()},this.setAzimuthalAngle=F=>{let $=wy(F,2*Math.PI),Et=p.theta;Et<0&&(Et+=2*Math.PI),$<0&&($+=2*Math.PI);let V=Math.abs($-Et);2*Math.PI-V<V&&($<Et?$+=2*Math.PI:Et+=2*Math.PI),m.theta=$-Et,n.update()},this.getDistance=()=>n.object.position.distanceTo(n.target),this.listenToKeyEvents=F=>{F.addEventListener("keydown",lt),this._domElementKeyEvents=F},this.stopListenToKeyEvents=()=>{this._domElementKeyEvents.removeEventListener("keydown",lt),this._domElementKeyEvents=null},this.saveState=()=>{n.target0.copy(n.target),n.position0.copy(n.object.position),n.zoom0=n.object.zoom},this.reset=()=>{n.target.copy(n.target0),n.object.position.copy(n.position0),n.object.zoom=n.zoom0,n.object.updateProjectionMatrix(),n.dispatchEvent(i),n.update(),h=c.NONE},this.update=(()=>{const F=new I,$=new I(0,1,0),Et=new Vn().setFromUnitVectors(t.up,$),V=Et.clone().invert(),gt=new I,Tt=new Vn,zt=2*Math.PI;return function(){const pt=n.object.position;Et.setFromUnitVectors(t.up,$),V.copy(Et).invert(),F.copy(pt).sub(n.target),F.applyQuaternion(Et),p.setFromVector3(F),n.autoRotate&&h===c.NONE&&Z(tt()),n.enableDamping?(p.theta+=m.theta*n.dampingFactor,p.phi+=m.phi*n.dampingFactor):(p.theta+=m.theta,p.phi+=m.phi);let Ft=n.minAzimuthAngle,ee=n.maxAzimuthAngle;isFinite(Ft)&&isFinite(ee)&&(Ft<-Math.PI?Ft+=zt:Ft>Math.PI&&(Ft-=zt),ee<-Math.PI?ee+=zt:ee>Math.PI&&(ee-=zt),Ft<=ee?p.theta=Math.max(Ft,Math.min(ee,p.theta)):p.theta=p.theta>(Ft+ee)/2?Math.max(Ft,p.theta):Math.min(ee,p.theta)),p.phi=Math.max(n.minPolarAngle,Math.min(n.maxPolarAngle,p.phi)),p.makeSafe(),n.enableDamping===!0?n.target.addScaledVector(v,n.dampingFactor):n.target.add(v),n.zoomToCursor&&C||n.object.isOrthographicCamera?p.radius=ne(p.radius):p.radius=ne(p.radius*g),F.setFromSpherical(p),F.applyQuaternion(V),pt.copy(n.target).add(F),n.object.matrixAutoUpdate||n.object.updateMatrix(),n.object.lookAt(n.target),n.enableDamping===!0?(m.theta*=1-n.dampingFactor,m.phi*=1-n.dampingFactor,v.multiplyScalar(1-n.dampingFactor)):(m.set(0,0,0),v.set(0,0,0));let Te=!1;if(n.zoomToCursor&&C){let Se=null;if(n.object instanceof cn&&n.object.isPerspectiveCamera){const _n=F.length();Se=ne(_n*g);const yn=_n-Se;n.object.position.addScaledVector(P,yn),n.object.updateMatrixWorld()}else if(n.object.isOrthographicCamera){const _n=new I(O.x,O.y,0);_n.unproject(n.object),n.object.zoom=Math.max(n.minZoom,Math.min(n.maxZoom,n.object.zoom/g)),n.object.updateProjectionMatrix(),Te=!0;const yn=new I(O.x,O.y,0);yn.unproject(n.object),n.object.position.sub(yn).add(_n),n.object.updateMatrixWorld(),Se=F.length()}else console.warn("WARNING: OrbitControls.js encountered an unknown camera type - zoom to cursor disabled."),n.zoomToCursor=!1;Se!==null&&(n.screenSpacePanning?n.target.set(0,0,-1).transformDirection(n.object.matrix).multiplyScalar(Se).add(n.object.position):(Yu.origin.copy(n.object.position),Yu.direction.set(0,0,-1).transformDirection(n.object.matrix),Math.abs(n.object.up.dot(Yu.direction))<$D?t.lookAt(n.target):(Ay.setFromNormalAndCoplanarPoint(n.object.up,n.target),Yu.intersectPlane(Ay,n.target))))}else n.object instanceof ma&&n.object.isOrthographicCamera&&(Te=g!==1,Te&&(n.object.zoom=Math.max(n.minZoom,Math.min(n.maxZoom,n.object.zoom/g)),n.object.updateProjectionMatrix()));return g=1,C=!1,Te||gt.distanceToSquared(n.object.position)>f||8*(1-Tt.dot(n.object.quaternion))>f?(n.dispatchEvent(i),gt.copy(n.object.position),Tt.copy(n.object.quaternion),Te=!1,!0):!1}})(),this.connect=F=>{n.domElement=F,n.domElement.style.touchAction="none",n.domElement.addEventListener("contextmenu",Xt),n.domElement.addEventListener("pointerdown",he),n.domElement.addEventListener("pointercancel",R),n.domElement.addEventListener("wheel",_t)},this.dispose=()=>{var F,$,Et,V,gt,Tt;n.domElement&&(n.domElement.style.touchAction="auto"),(F=n.domElement)==null||F.removeEventListener("contextmenu",Xt),($=n.domElement)==null||$.removeEventListener("pointerdown",he),(Et=n.domElement)==null||Et.removeEventListener("pointercancel",R),(V=n.domElement)==null||V.removeEventListener("wheel",_t),(gt=n.domElement)==null||gt.ownerDocument.removeEventListener("pointermove",z),(Tt=n.domElement)==null||Tt.ownerDocument.removeEventListener("pointerup",R),n._domElementKeyEvents!==null&&n._domElementKeyEvents.removeEventListener("keydown",lt)};const n=this,i={type:"change"},o={type:"start"},l={type:"end"},c={NONE:-1,ROTATE:0,DOLLY:1,PAN:2,TOUCH_ROTATE:3,TOUCH_PAN:4,TOUCH_DOLLY_PAN:5,TOUCH_DOLLY_ROTATE:6};let h=c.NONE;const f=1e-6,p=new gm,m=new gm;let g=1;const v=new I,x=new dt,b=new dt,S=new dt,_=new dt,E=new dt,A=new dt,T=new dt,U=new dt,D=new dt,P=new I,O=new dt;let C=!1;const w=[],B={};function tt(){return 2*Math.PI/60/60*n.autoRotateSpeed}function X(){return Math.pow(.95,n.zoomSpeed)}function Z(F){n.reverseOrbit||n.reverseHorizontalOrbit?m.theta+=F:m.theta-=F}function ot(F){n.reverseOrbit||n.reverseVerticalOrbit?m.phi+=F:m.phi-=F}const k=(()=>{const F=new I;return function(Et,V){F.setFromMatrixColumn(V,0),F.multiplyScalar(-Et),v.add(F)}})(),et=(()=>{const F=new I;return function(Et,V){n.screenSpacePanning===!0?F.setFromMatrixColumn(V,1):(F.setFromMatrixColumn(V,0),F.crossVectors(n.object.up,F)),F.multiplyScalar(Et),v.add(F)}})(),q=(()=>{const F=new I;return function(Et,V){const gt=n.domElement;if(gt&&n.object instanceof cn&&n.object.isPerspectiveCamera){const Tt=n.object.position;F.copy(Tt).sub(n.target);let zt=F.length();zt*=Math.tan(n.object.fov/2*Math.PI/180),k(2*Et*zt/gt.clientHeight,n.object.matrix),et(2*V*zt/gt.clientHeight,n.object.matrix)}else gt&&n.object instanceof ma&&n.object.isOrthographicCamera?(k(Et*(n.object.right-n.object.left)/n.object.zoom/gt.clientWidth,n.object.matrix),et(V*(n.object.top-n.object.bottom)/n.object.zoom/gt.clientHeight,n.object.matrix)):(console.warn("WARNING: OrbitControls.js encountered an unknown camera type - pan disabled."),n.enablePan=!1)}})();function ct(F){n.object instanceof cn&&n.object.isPerspectiveCamera||n.object instanceof ma&&n.object.isOrthographicCamera?g=F:(console.warn("WARNING: OrbitControls.js encountered an unknown camera type - dolly/zoom disabled."),n.enableZoom=!1)}function vt(F){ct(g/F)}function xt(F){ct(g*F)}function Ot(F){if(!n.zoomToCursor||!n.domElement)return;C=!0;const $=n.domElement.getBoundingClientRect(),Et=F.clientX-$.left,V=F.clientY-$.top,gt=$.width,Tt=$.height;O.x=Et/gt*2-1,O.y=-(V/Tt)*2+1,P.set(O.x,O.y,1).unproject(n.object).sub(n.object.position).normalize()}function ne(F){return Math.max(n.minDistance,Math.min(n.maxDistance,F))}function jt(F){x.set(F.clientX,F.clientY)}function at(F){Ot(F),T.set(F.clientX,F.clientY)}function Lt(F){_.set(F.clientX,F.clientY)}function Rt(F){b.set(F.clientX,F.clientY),S.subVectors(b,x).multiplyScalar(n.rotateSpeed);const $=n.domElement;$&&(Z(2*Math.PI*S.x/$.clientHeight),ot(2*Math.PI*S.y/$.clientHeight)),x.copy(b),n.update()}function Qt(F){U.set(F.clientX,F.clientY),D.subVectors(U,T),D.y>0?vt(X()):D.y<0&&xt(X()),T.copy(U),n.update()}function Zt(F){E.set(F.clientX,F.clientY),A.subVectors(E,_).multiplyScalar(n.panSpeed),q(A.x,A.y),_.copy(E),n.update()}function re(F){Ot(F),F.deltaY<0?xt(X()):F.deltaY>0&&vt(X()),n.update()}function Be(F){let $=!1;switch(F.code){case n.keys.UP:q(0,n.keyPanSpeed),$=!0;break;case n.keys.BOTTOM:q(0,-n.keyPanSpeed),$=!0;break;case n.keys.LEFT:q(n.keyPanSpeed,0),$=!0;break;case n.keys.RIGHT:q(-n.keyPanSpeed,0),$=!0;break}$&&(F.preventDefault(),n.update())}function le(){if(w.length==1)x.set(w[0].pageX,w[0].pageY);else{const F=.5*(w[0].pageX+w[1].pageX),$=.5*(w[0].pageY+w[1].pageY);x.set(F,$)}}function H(){if(w.length==1)_.set(w[0].pageX,w[0].pageY);else{const F=.5*(w[0].pageX+w[1].pageX),$=.5*(w[0].pageY+w[1].pageY);_.set(F,$)}}function mt(){const F=w[0].pageX-w[1].pageX,$=w[0].pageY-w[1].pageY,Et=Math.sqrt(F*F+$*$);T.set(0,Et)}function ut(){n.enableZoom&&mt(),n.enablePan&&H()}function St(){n.enableZoom&&mt(),n.enableRotate&&le()}function ht(F){if(w.length==1)b.set(F.pageX,F.pageY);else{const Et=te(F),V=.5*(F.pageX+Et.x),gt=.5*(F.pageY+Et.y);b.set(V,gt)}S.subVectors(b,x).multiplyScalar(n.rotateSpeed);const $=n.domElement;$&&(Z(2*Math.PI*S.x/$.clientHeight),ot(2*Math.PI*S.y/$.clientHeight)),x.copy(b)}function Nt(F){if(w.length==1)E.set(F.pageX,F.pageY);else{const $=te(F),Et=.5*(F.pageX+$.x),V=.5*(F.pageY+$.y);E.set(Et,V)}A.subVectors(E,_).multiplyScalar(n.panSpeed),q(A.x,A.y),_.copy(E)}function yt(F){const $=te(F),Et=F.pageX-$.x,V=F.pageY-$.y,gt=Math.sqrt(Et*Et+V*V);U.set(0,gt),D.set(0,Math.pow(U.y/T.y,n.zoomSpeed)),vt(D.y),T.copy(U)}function wt(F){n.enableZoom&&yt(F),n.enablePan&&Nt(F)}function ce(F){n.enableZoom&&yt(F),n.enableRotate&&ht(F)}function he(F){var $,Et;n.enabled!==!1&&(w.length===0&&(($=n.domElement)==null||$.ownerDocument.addEventListener("pointermove",z),(Et=n.domElement)==null||Et.ownerDocument.addEventListener("pointerup",R)),qt(F),F.pointerType==="touch"?Kt(F):J(F))}function z(F){n.enabled!==!1&&(F.pointerType==="touch"?Dt(F):rt(F))}function R(F){var $,Et,V;Mt(F),w.length===0&&(($=n.domElement)==null||$.releasePointerCapture(F.pointerId),(Et=n.domElement)==null||Et.ownerDocument.removeEventListener("pointermove",z),(V=n.domElement)==null||V.ownerDocument.removeEventListener("pointerup",R)),n.dispatchEvent(l),h=c.NONE}function J(F){let $;switch(F.button){case 0:$=n.mouseButtons.LEFT;break;case 1:$=n.mouseButtons.MIDDLE;break;case 2:$=n.mouseButtons.RIGHT;break;default:$=-1}switch($){case nr.DOLLY:if(n.enableZoom===!1)return;at(F),h=c.DOLLY;break;case nr.ROTATE:if(F.ctrlKey||F.metaKey||F.shiftKey){if(n.enablePan===!1)return;Lt(F),h=c.PAN}else{if(n.enableRotate===!1)return;jt(F),h=c.ROTATE}break;case nr.PAN:if(F.ctrlKey||F.metaKey||F.shiftKey){if(n.enableRotate===!1)return;jt(F),h=c.ROTATE}else{if(n.enablePan===!1)return;Lt(F),h=c.PAN}break;default:h=c.NONE}h!==c.NONE&&n.dispatchEvent(o)}function rt(F){if(n.enabled!==!1)switch(h){case c.ROTATE:if(n.enableRotate===!1)return;Rt(F);break;case c.DOLLY:if(n.enableZoom===!1)return;Qt(F);break;case c.PAN:if(n.enablePan===!1)return;Zt(F);break}}function _t(F){n.enabled===!1||n.enableZoom===!1||h!==c.NONE&&h!==c.ROTATE||(F.preventDefault(),n.dispatchEvent(o),re(F),n.dispatchEvent(l))}function lt(F){n.enabled===!1||n.enablePan===!1||Be(F)}function Kt(F){switch(Pt(F),w.length){case 1:switch(n.touches.ONE){case ir.ROTATE:if(n.enableRotate===!1)return;le(),h=c.TOUCH_ROTATE;break;case ir.PAN:if(n.enablePan===!1)return;H(),h=c.TOUCH_PAN;break;default:h=c.NONE}break;case 2:switch(n.touches.TWO){case ir.DOLLY_PAN:if(n.enableZoom===!1&&n.enablePan===!1)return;ut(),h=c.TOUCH_DOLLY_PAN;break;case ir.DOLLY_ROTATE:if(n.enableZoom===!1&&n.enableRotate===!1)return;St(),h=c.TOUCH_DOLLY_ROTATE;break;default:h=c.NONE}break;default:h=c.NONE}h!==c.NONE&&n.dispatchEvent(o)}function Dt(F){switch(Pt(F),h){case c.TOUCH_ROTATE:if(n.enableRotate===!1)return;ht(F),n.update();break;case c.TOUCH_PAN:if(n.enablePan===!1)return;Nt(F),n.update();break;case c.TOUCH_DOLLY_PAN:if(n.enableZoom===!1&&n.enablePan===!1)return;wt(F),n.update();break;case c.TOUCH_DOLLY_ROTATE:if(n.enableZoom===!1&&n.enableRotate===!1)return;ce(F),n.update();break;default:h=c.NONE}}function Xt(F){n.enabled!==!1&&F.preventDefault()}function qt(F){w.push(F)}function Mt(F){delete B[F.pointerId];for(let $=0;$<w.length;$++)if(w[$].pointerId==F.pointerId){w.splice($,1);return}}function Pt(F){let $=B[F.pointerId];$===void 0&&($=new dt,B[F.pointerId]=$),$.set(F.pageX,F.pageY)}function te(F){const $=F.pointerId===w[0].pointerId?w[1]:w[0];return B[$.pointerId]}this.dollyIn=(F=X())=>{xt(F),n.update()},this.dollyOut=(F=X())=>{vt(F),n.update()},this.getScale=()=>g,this.setScale=F=>{ct(F),n.update()},this.getZoomScale=()=>X(),e!==void 0&&this.connect(e),this.update()}};const eU=$t.forwardRef(({makeDefault:s,camera:t,regress:e,domElement:n,enableDamping:i=!0,keyEvents:o=!1,onChange:l,onStart:c,onEnd:h,...f},p)=>{const m=ha(D=>D.invalidate),g=ha(D=>D.camera),v=ha(D=>D.gl),x=ha(D=>D.events),b=ha(D=>D.setEvents),S=ha(D=>D.set),_=ha(D=>D.get),E=ha(D=>D.performance),A=t||g,T=n||x.connected||v.domElement,U=$t.useMemo(()=>new tU(A),[A]);return jS(()=>{U.enabled&&U.update()},-1),$t.useEffect(()=>(o&&U.connect(o===!0?T:o),U.connect(T),()=>void U.dispose()),[o,T,e,U,m]),$t.useEffect(()=>{const D=C=>{m(),e&&E.regress(),l&&l(C)},P=C=>{c&&c(C)},O=C=>{h&&h(C)};return U.addEventListener("change",D),U.addEventListener("start",P),U.addEventListener("end",O),()=>{U.removeEventListener("start",P),U.removeEventListener("end",O),U.removeEventListener("change",D)}},[l,c,h,U,m,b]),$t.useEffect(()=>{if(s){const D=_().controls;return S({controls:U}),()=>S({controls:D})}},[s,U]),$t.createElement("primitive",Ry({ref:p,object:U,enableDamping:i},f))});function nU(s,t){const e=s+"Geometry";return $t.forwardRef(({args:n,children:i,...o},l)=>{const c=$t.useRef(null);return $t.useImperativeHandle(l,()=>c.current),$t.useLayoutEffect(()=>void t?.(c.current)),$t.createElement("mesh",Ry({ref:c},o),$t.createElement(e,{attach:"geometry",args:n}),i)})}const iU=nU("sphere"),sU=({text:s,delay:t=0,color:e})=>{const n=s.split(" "),i=rc();return Vt.jsx(is.h1,{initial:"hidden",animate:"visible",variants:{visible:{transition:{staggerChildren:.1,delayChildren:t}}},style:{fontSize:"clamp(2.5rem, 8vw, 5.5rem)",textAlign:"center",fontFamily:"Cormorant Garamond",fontWeight:700,color:e,lineHeight:1.1,marginBottom:i.spacing(2)},children:n.map((o,l)=>Vt.jsx(is.span,{variants:{hidden:{opacity:0,y:20},visible:{opacity:1,y:0}},style:{display:"inline-block",marginRight:"0.25em"},children:o},l))})},aU="/logo1.png",rU=()=>{const s=$t.useRef(),t=rc(),e=gg(cS,aU);return jS(()=>{s.current&&(s.current.rotation.x+=.005,s.current.rotation.y+=.005)}),Vt.jsx(iU,{ref:s,args:[1,32,32],scale:1,children:Vt.jsx("meshStandardMaterial",{map:e,color:t.palette.secondary.light,transparent:!0,opacity:.8})})},oU=()=>{const s=rc();return Vt.jsxs(ss,{sx:{position:"relative",height:"80vh",minHeight:"600px",display:"flex",alignItems:"center",justifyContent:"center",color:s.palette.primary.contrastText,overflow:"hidden"},children:[Vt.jsx(ss,{sx:{position:"absolute",top:0,left:0,width:"100%",height:"100%",backgroundImage:{xs:"url(/parlour-banner.png)",md:"url(/parlour-banner.jpg)"},backgroundSize:"cover",backgroundPosition:"center",backgroundAttachment:"fixed",zIndex:0}}),Vt.jsx(ss,{sx:{position:"absolute",top:0,left:0,width:"100%",height:"100%",backgroundColor:"rgba(0, 0, 0, 0.7)",zIndex:1}}),Vt.jsx(ss,{sx:{position:"absolute",top:0,left:0,width:"100%",height:"100%",zIndex:0},children:Vt.jsxs(qD,{camera:{position:[0,0,5],fov:75},children:[Vt.jsx("ambientLight",{intensity:.5}),Vt.jsx("pointLight",{position:[10,10,10],intensity:1}),Vt.jsx($t.Suspense,{fallback:null,children:Vt.jsx(rU,{})}),Vt.jsx(eU,{enableZoom:!1,enablePan:!1,enableRotate:!1})]})}),Vt.jsxs(ju,{maxWidth:"md",sx:{position:"relative",zIndex:2,textAlign:"center"},children:[Vt.jsx(sU,{text:"Best Beauty Parlour in Pune – Chaitali Beauty Parlour",color:"white"}),Vt.jsx(is.p,{initial:{opacity:0,y:20},animate:{opacity:1,y:0},transition:{delay:1.5,duration:.8},style:{fontSize:"clamp(1rem, 2.5vw, 1.5rem)",marginBottom:s.spacing(4),color:"white"},children:"Beauty that makes you glow."}),Vt.jsx(oE,{})]})]})},lU=fE.offers,cU=$t.lazy(()=>Dy(()=>import("./TestimonialCarousel-UjSiXRuu.js"),__vite__mapDeps([0,1,2,3,4,5]))),uU=$t.lazy(()=>Dy(()=>import("./TrustBadges-wq44tqST.js"),__vite__mapDeps([6,1,7]))),hU=({offer:s,index:t})=>{const e=rc();return Vt.jsx(is.div,{variants:Zu("up","tween",t*.1,.6),initial:"hidden",whileInView:"show",viewport:{once:!0,amount:.3},children:Vt.jsxs(pE,{sx:{display:"flex",flexDirection:{xs:"column",sm:"row"},boxShadow:e.shadows[6],borderRadius:3,overflow:"hidden",transition:"transform 0.3s ease-in-out","&:hover":{transform:"translateY(-10px) scale(1.02)",boxShadow:e.shadows[10]}},children:[Vt.jsx(dE,{component:"img",loading:"lazy",sx:{width:{xs:"100%",sm:180},height:{xs:150,sm:"auto"},objectFit:"cover"},src:s.image,alt:`${s.title} - Chaitali Beauty Parlour Offer`}),Vt.jsxs(mE,{sx:{flex:"1 0 auto",p:3},children:[Vt.jsx(or,{variant:"h5",sx:{fontFamily:"Cormorant Garamond"},children:s.title}),Vt.jsx(or,{variant:"body2",color:"text.secondary",sx:{mb:1},children:s.description}),s.expiry&&Vt.jsxs(or,{variant:"caption",color:"error",sx:{display:"block",mb:1,fontWeight:"bold"},children:["Expires: ",new Date(s.expiry).toLocaleDateString()]}),Vt.jsx(em,{variant:"contained",color:"primary",size:"small",component:nm,to:s.link,sx:{mt:"auto"},children:s.cta})]})]})})},wU=()=>{const s=rc();return Vt.jsxs(is.div,{initial:"hidden",animate:"show",variants:hE(.1,.2),children:[Vt.jsx(rE,{title:"Chaitali Beauty Parlour – Best Beauty Parlour in Pune | Bridal Makeup & Facials",description:"Looking for the best beauty parlour near me? Visit Chaitali Beauty Parlour in Pune for bridal makeup, facials, hair styling & more.",keywords:"best parlour near me, Chaitali Beauty Parlour, ladies parlour Pune",canonical:"https://chaitali-parlour.netlify.app/",structuredData:{"@context":"http://schema.org","@type":"BeautySalon",name:"Chaitali Beauty Parlour",alternateName:"Chaitali Parlour",image:"https://chaitali-parlour.netlify.app/parlour-banner.jpg",address:{"@type":"PostalAddress",streetAddress:"1st Floor Dnyandeep Bungalow, Opposite Brick Castle, Behind Bhosale Garden, Savtanagari, Hadapsar",addressLocality:"Pune",addressRegion:"Maharashtra",postalCode:"411028",addressCountry:"IN"},geo:{"@type":"GeoCoordinates",latitude:18.6324026,longitude:73.73251},url:"https://chaitali-parlour.netlify.app/",telephone:"+919890818752",openingHoursSpecification:[{"@type":"OpeningHoursSpecification",dayOfWeek:["Monday","Tuesday","Wednesday","Thursday","Friday","Saturday","Sunday"],opens:"10:00",closes:"21:00"}],hasMap:"https://maps.app.goo.gl/vjFdhjkNNBPe7cSg9"}}),Vt.jsx(oU,{}),Vt.jsxs(ju,{maxWidth:"lg",sx:{my:8},children:[Vt.jsxs(is.div,{variants:Zu("up","tween",0,.7),initial:"hidden",whileInView:"show",viewport:{once:!0,amount:.2},children:[Vt.jsx(or,{variant:"h2",align:"center",gutterBottom:!0,sx:{color:s.palette.text.primary},children:"Our Signature Services"}),Vt.jsx(or,{variant:"h6",align:"center",color:"text.secondary",sx:{mb:4,fontWeight:"normal"},children:"Expert skin care and facial services in Pune, delivered at the best ladies parlour near you."})]}),Vt.jsx(ss,{sx:{display:"flex",flexWrap:"wrap",justifyContent:"center",gap:4},children:cE.slice(0,4).map((t,e)=>Vt.jsx(lE,{service:t},e))}),Vt.jsx(ss,{sx:{mt:6,textAlign:"center"},children:Vt.jsx(is.div,{whileHover:{scale:1.05},whileTap:{scale:.95},children:Vt.jsx(em,{variant:"outlined",color:"primary",component:nm,to:"/services",size:"large",endIcon:Vt.jsx(wv,{}),children:"View All Services"})})})]}),Vt.jsx(ss,{sx:{position:"relative",py:8,backgroundImage:{xs:"url(/parlour-banner.png)",md:"url(/parlour-banner.jpg)"},backgroundSize:"cover",backgroundPosition:"center",backgroundAttachment:"fixed","&::before":{content:'""',position:"absolute",top:0,left:0,right:0,bottom:0,backgroundColor:"rgba(0, 0, 0, 0.7)",zIndex:1}},children:Vt.jsxs($t.Suspense,{fallback:Vt.jsx(ss,{sx:{display:"flex",justifyContent:"center",p:4},children:Vt.jsx(aE,{color:"primary"})}),children:[Vt.jsxs(ju,{maxWidth:"lg",sx:{position:"relative",zIndex:2,pb:8},children:[Vt.jsx(is.div,{variants:Zu("up","tween",0,.7),initial:"hidden",whileInView:"show",viewport:{once:!0,amount:.2},children:Vt.jsx(or,{variant:"h2",align:"center",gutterBottom:!0,sx:{color:"white",mb:6},children:"What Our Clients Say"})}),Vt.jsx(cU,{testimonials:uE})]}),Vt.jsx(ss,{sx:{color:"white",position:"relative",zIndex:2},children:Vt.jsx(uU,{})})]})}),Vt.jsxs(ju,{maxWidth:"lg",sx:{my:8},children:[Vt.jsx(is.div,{variants:Zu("up","tween",0,.7),initial:"hidden",whileInView:"show",viewport:{once:!0,amount:.2},children:Vt.jsx(or,{variant:"h2",align:"center",gutterBottom:!0,sx:{color:s.palette.text.primary,mb:4},children:"Special Offers"})}),Vt.jsx(Av,{container:!0,spacing:4,justifyContent:"center",children:lU.slice(0,2).map((t,e)=>Vt.jsx(Av,{item:!0,xs:12,md:6,children:Vt.jsx(hU,{offer:t,index:e})},e))}),Vt.jsx(ss,{sx:{mt:6,textAlign:"center"},children:Vt.jsx(is.div,{whileHover:{scale:1.05},whileTap:{scale:.95},children:Vt.jsx(em,{variant:"outlined",color:"primary",component:nm,to:"/offers",size:"large",endIcon:Vt.jsx(wv,{}),children:"View All Offers"})})})]})]})};export{wU as default};
